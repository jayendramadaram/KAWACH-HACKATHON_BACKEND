var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.147,1,1.915]],["body/controllers/AppController.html",[0,1.76,1,2.939,2,1.663,3,0.368,4,0.368,5,0.312,6,3.013,7,2.6,8,0.037,9,0.77,10,4.672,11,2.359,12,4.672,13,3.335,14,3.683,15,2.939,16,4.672,17,0.621,18,1.602,19,5.442,20,1.663,21,0.77,22,3.641,23,1.137,24,2.939,25,0.368,26,0.621,27,0.368,28,0.021,29,1.509,30,3.641,31,3.641,32,3.641,33,3.641,34,3.641,35,1.663,36,3.641,37,3.641,38,3.641,39,0.027,40,0.027]],["title/modules/AppModule.html",[41,0.951,42,1.915]],["body/modules/AppModule.html",[1,2.381,2,1.429,3,0.208,4,0.208,5,0.324,8,0.037,9,0.436,11,1.58,14,3.019,15,2.861,18,0.706,21,0.436,23,0.643,25,0.57,26,0.351,27,0.208,28,0.012,35,0.94,39,0.018,40,0.018,41,0.977,42,3.611,43,0.853,44,1.179,45,1.704,46,1.704,47,1.704,48,2.688,49,2.418,50,2.688,51,2.688,52,2.688,53,1.804,54,1.58,55,1.04,56,2.059,57,3.13,58,2.59,59,1.911,60,3.13,61,3.963,62,3.13,63,4.548,64,3.785,65,3.133,66,2.59,67,2.59,68,3.13,69,3.13,70,1.757,71,2.59,72,1.704,73,3.13,74,4.228,75,2.059,76,3.13,77,2.59,78,0.776,79,0.776,80,0.596,81,0.706,82,2.059,83,1.704,84,3.13,85,3.13,86,3.13,87,1.04,88,2.059,89,1.969,90,2.059,91,2.059,92,2.059,93,2.059,94,3.13,95,1.969,96,1.47,97,1.969,98,2.702,99,0.853,100,2.059,101,2.059,102,2.059,103,1.704,104,1.704,105,2.059,106,2.059,107,2.059,108,1.04,109,2.059,110,1.704,111,2.059,112,1.704,113,1.704,114,2.59,115,3.13,116,2.059,117,2.059,118,2.059,119,2.059,120,2.059,121,2.059,122,2.059,123,2.059,124,3.13,125,2.59,126,2.059,127,0.643,128,2.059,129,1.704,130,2.059,131,2.059,132,1.704,133,2.059,134,1.704,135,2.059,136,1.47,137,2.059,138,2.059]],["title/injectables/AppService.html",[52,1.709,139,0.644]],["body/injectables/AppService.html",[3,0.458,4,0.458,5,0.388,8,0.035,25,0.458,26,0.773,27,0.458,28,0.027,39,0.031,40,0.031,52,3,139,1.131,140,1.877,141,3.75]],["title/controllers/AuthController.html",[0,1.147,142,1.915]],["body/controllers/AuthController.html",[0,1.413,2,0.926,3,0.205,4,0.205,5,0.174,7,2.676,8,0.037,9,0.429,11,1.561,13,2.208,17,0.346,18,1.061,20,2.062,21,0.955,23,1.633,25,0.379,26,0.346,27,0.205,28,0.012,29,1.871,39,0.018,40,0.018,77,2.559,78,1.702,79,1.702,80,1.016,81,1.549,142,1.945,143,1.678,144,2.676,145,3.092,146,2.559,147,3.102,148,3.092,149,2.559,150,1.915,151,2.208,152,2.559,153,4.194,154,3.092,155,3.092,156,4.516,157,3.749,158,3.092,159,3.092,160,3.092,161,2.027,162,1.698,163,3.092,164,2.027,165,3.045,166,3.643,167,2.027,168,1.702,169,3.092,170,2.027,171,2.027,172,1.41,173,3.092,174,2.027,175,2.027,176,2.115,177,3.092,178,2.027,179,3.092,180,3.939,181,2.027,182,2.027,183,1.58,184,3.092,185,2.027,186,2.104,187,1.447,188,1.138,189,1.893,190,1.678,191,2.027,192,1.138,193,2.841,194,2.027,195,2.027,196,2.027,197,2.027,198,2.027,199,2.027,200,2.027,201,2.027,202,2.027,203,2.027,204,2.027,205,2.027]],["title/classes/AuthLogin.html",[28,0.018,168,1.147]],["body/classes/AuthLogin.html",[3,0.324,4,0.324,5,0.274,8,0.036,17,0.546,20,1.961,21,0.908,25,0.324,27,0.545,28,0.033,39,0.025,40,0.025,80,0.818,127,1.617,162,1.906,168,1.826,172,1,176,2.501,183,1.207,206,1.617,207,1.617,208,1.618,209,2.651,210,3.203,211,2.287,212,3.203,213,1.798,214,1.798,215,3.031,216,2.906,217,1.798,218,3.031,219,1.617,220,2.72,221,1.207,222,1.099,223,1.463,224,2.447,225,1.099,226,1.099,227,1.327,228,1.798,229,1.798,230,1.617,231,1.463,232,1.617]],["title/modules/AuthModule.html",[41,0.951,48,1.709]],["body/modules/AuthModule.html",[2,2.301,3,0.303,4,0.303,5,0.257,8,0.037,9,0.634,25,0.574,26,0.512,27,0.303,28,0.018,35,1.37,39,0.024,40,0.024,41,1.775,43,1.941,44,1.548,48,3.274,49,2.752,54,2.074,55,1.514,70,2.63,71,3.399,99,1.243,142,2.947,149,2.482,152,2.482,189,2.752,190,2.482,233,2.482,234,2.999,235,2.482,236,3.133,237,2.999,238,4.108,239,4.108,240,4.108,241,2.933,242,4.108,243,4.108,244,2.999,245,2.999,246,2.482,247,2.482,248,2.999,249,2.999,250,2.482,251,2.999,252,2.999,253,2.999,254,2.141]],["title/interfaces/AuthRequest.html",[255,1.709,256,1.915]],["body/interfaces/AuthRequest.html",[0,1.677,3,0.275,4,0.275,5,0.233,8,0.037,9,0.576,11,1.375,17,0.465,23,1.2,24,2.417,25,0.515,26,0.465,27,0.275,28,0.016,29,1.592,39,0.023,40,0.023,59,2.441,80,0.97,81,0.934,127,1.2,150,1.754,151,2.743,165,2.498,172,0.851,187,1.945,188,1.529,192,1.529,193,2.8,208,1.448,221,1.448,225,1.658,226,1.748,255,1.529,256,2.8,257,2.724,258,1.945,259,2.948,260,3.179,261,3.179,262,3.179,263,3.179,264,2.743,265,3.962,266,2.254,267,2.254,268,1.714,269,2.032,270,1.945,271,1.714,272,2.254,273,2.254,274,2.254,275,2.254,276,2.254,277,1.529,278,3.179,279,2.157,280,2.254,281,2.254,282,3.179,283,1.945,284,2.254,285,2.254,286,2.254,287,2.254,288,3.179,289,2.254,290,2.254,291,2.254,292,2.254]],["title/injectables/AuthService.html",[139,0.644,189,1.537]],["body/injectables/AuthService.html",[0,0.756,3,0.12,4,0.12,5,0.102,8,0.037,9,0.251,17,0.202,18,0.688,21,0.788,23,1.239,24,1.263,25,0.467,26,0.202,27,0.12,28,0.007,29,1.422,39,0.012,40,0.012,53,1.404,59,0.599,78,1.404,79,1.404,80,0.709,81,1.278,87,0.599,95,2.159,96,0.847,97,2.344,98,1.433,99,1.272,108,1.55,110,1.661,114,1.661,125,0.982,127,1.239,139,0.425,140,0.492,144,1.433,150,2.323,162,1.278,165,1.464,166,3.21,168,1.156,172,0.958,176,1.544,180,0.982,183,1.404,186,2.815,188,0.666,189,1.013,222,0.895,224,0.599,227,0.492,230,2.004,231,0.916,241,1.433,246,0.982,247,0.982,259,2.532,279,0.666,293,0.982,294,1.661,295,2.007,296,2.007,297,2.007,298,1.661,299,1.263,300,2.159,301,2.007,302,2.007,303,2.007,304,3.432,305,3.726,306,3.726,307,3.069,308,2.007,309,2.007,310,2.815,311,2.007,312,2.007,313,2.007,314,2.007,315,2.007,316,0.982,317,2.609,318,2.609,319,1.186,320,1.661,321,2.007,322,1.186,323,2.007,324,2.54,325,1.661,326,2.007,327,2.007,328,2.007,329,2.007,330,2.007,331,1.186,332,2.007,333,2.007,334,2.007,335,2.007,336,1.186,337,2.007,338,2.007,339,2.45,340,2.007,341,1.186,342,1.433,343,2.007,344,1.661,345,2.007,346,2.54,347,2.007,348,1.661,349,2.007,350,2.007,351,2.007,352,0.916,353,2.007,354,1.186,355,2.007,356,2.007,357,2.007,358,1.186,359,0.982,360,1.186,361,0.982,362,0.847,363,1.186,364,1.186,365,1.186,366,1.186,367,1.186,368,1.186,369,1.186,370,1.186,371,1.186,372,1.186,373,1.186,374,2.159,375,1.186,376,2.769,377,2.856,378,1.186,379,0.982,380,1.186,381,1.433,382,1.186,383,1.186,384,2.609,385,1.186,386,1.186,387,1.186,388,2.007,389,1.186,390,4.173,391,2.979,392,3.069,393,1.186,394,1.186,395,1.186,396,1.186,397,2.609,398,2.609,399,2.007,400,1.186,401,1.186,402,1.186,403,1.186,404,1.186,405,1.186,406,2.007,407,1.186,408,1.186,409,1.186,410,1.186,411,1.186,412,1.186,413,2.609,414,1.186,415,1.186,416,1.186,417,1.186,418,1.186,419,0.982,420,1.186,421,1.186,422,1.186,423,1.186,424,1.186,425,0.982,426,1.186,427,2.007,428,1.186,429,1.186,430,1.186]],["title/classes/AuthSignup.html",[28,0.018,172,0.951]],["body/classes/AuthSignup.html",[3,0.305,4,0.305,5,0.258,8,0.036,17,0.514,20,2.146,21,1.068,25,0.305,27,0.534,28,0.032,39,0.024,40,0.024,80,0.895,127,1.577,162,1.873,168,1.993,172,1.288,176,2.493,183,1.137,206,1.523,207,1.523,208,1.554,209,3.413,211,2.154,213,1.693,214,1.693,215,2.969,216,2.835,217,1.693,218,2.969,219,1.523,220,2.638,221,1.554,222,1.612,223,1.378,224,2.671,225,1.035,226,1.035,227,1.25,228,1.693,229,1.693,230,1.523,231,1.378,232,1.523,431,3.017,432,3.017,433,4.124,434,3.017,435,3.017]],["title/classes/EditUser.html",[28,0.018,225,1.044]],["body/classes/EditUser.html",[3,0.314,4,0.314,5,0.266,8,0.036,17,0.53,20,2.179,21,1.009,25,0.314,27,0.54,28,0.032,39,0.025,40,0.025,80,0.908,127,1.597,162,1.89,168,1.585,172,0.97,176,2.504,183,1.171,206,1.569,207,1.569,208,1.585,213,1.744,214,1.744,215,2.999,216,2.87,217,1.744,218,2.999,219,1.569,220,2.678,221,1.171,222,1.066,223,1.419,224,2.698,225,1.443,226,1.066,227,1.287,228,1.744,229,1.744,230,1.569,231,1.419,232,1.569,436,4.208,437,3.107,438,3.107,439,3.107,440,3.107]],["title/injectables/JwtStrategy.html",[139,0.644,236,1.709]],["body/injectables/JwtStrategy.html",[3,0.312,4,0.312,5,0.265,8,0.037,9,0.653,17,0.527,18,1.437,21,0.886,23,0.965,25,0.539,26,0.527,27,0.312,28,0.018,29,1.28,39,0.025,40,0.025,53,1.922,78,1.579,79,1.579,80,0.971,81,1.437,87,1.56,108,2.576,139,0.886,140,1.28,150,2.172,183,1.164,221,1.164,222,1.059,223,1.41,227,1.28,236,2.352,259,2.116,268,1.943,279,1.734,300,1.943,310,2.67,352,2.172,362,2.205,374,1.943,376,1.734,377,1.734,425,2.556,441,2.556,442,4.757,443,4.191,444,3.468,445,3.089,446,4.191,447,4.191,448,3.089,449,2.556,450,3.089,451,3.089,452,2.556,453,3.089,454,3.089,455,3.089,456,3.089,457,3.089,458,3.089,459,3.089,460,2.556,461,2.556]],["title/injectables/LogRequest.html",[89,1.915,139,0.644]],["body/injectables/LogRequest.html",[3,0.321,4,0.321,5,0.272,8,0.037,9,0.671,17,0.541,18,1.464,21,0.671,23,0.991,25,0.431,26,0.541,27,0.321,28,0.019,39,0.025,40,0.025,59,2.604,61,3.532,78,1.196,79,1.196,80,0.604,81,1.089,83,2.626,89,2.685,136,2.266,139,0.903,140,1.315,146,3.532,265,3.047,271,1.996,376,2.396,379,2.626,462,2.626,463,4.268,464,4.268,465,4.268,466,4.268,467,4.268,468,3.532,469,4.268,470,5.158,471,5.158,472,5.158,473,5.158,474,3.174,475,4.268,476,3.174,477,4.823,478,4.823,479,3.174,480,3.174,481,3.174,482,3.174,483,3.174,484,3.174,485,3.174]],["title/modules/OtpModule.html",[41,0.951,49,1.537]],["body/modules/OtpModule.html",[3,0.368,4,0.368,5,0.312,8,0.036,9,0.77,25,0.521,26,0.621,27,0.368,28,0.021,35,1.663,39,0.027,40,0.027,41,1.459,43,2.137,44,1.76,49,2.957,54,2.359,55,1.838,70,2.622,99,2.533,186,2.622,254,3.335,359,3.866,468,3.866,486,3.013,487,3.013,488,3.013,489,3.641,490,3.335,491,3.866,492,3.641,493,3.641]],["title/injectables/OtpService.html",[99,1.262,139,0.644]],["body/injectables/OtpService.html",[3,0.292,4,0.292,5,0.248,8,0.037,9,0.611,17,0.493,18,1.374,21,0.972,23,1.435,25,0.464,26,0.493,27,0.292,28,0.017,29,1.198,39,0.024,40,0.024,78,1.509,79,1.509,80,0.875,81,1.374,87,1.46,99,1.659,108,2.721,139,0.847,140,1.198,147,3.314,162,1.702,165,1.623,166,2.859,176,1.904,183,1.731,186,2.924,192,1.623,208,1.509,222,0.992,231,1.829,232,2.022,310,2.579,374,2.891,376,2.579,377,1.623,391,2.064,494,2.392,495,4.005,496,3.314,497,4.005,498,4.005,499,4.005,500,4.595,501,4.005,502,2.891,503,4.005,504,4.005,505,2.891,506,4.105,507,2.891,508,2.891,509,2.891,510,4.005,511,2.891,512,2.891,513,2.891,514,2.891,515,2.891,516,2.891,517,2.891,518,2.891,519,2.891,520,2.891]],["title/classes/Phnum.html",[28,0.018,162,1.044]],["body/classes/Phnum.html",[3,0.334,4,0.334,5,0.283,8,0.036,17,0.564,20,1.509,21,0.699,25,0.334,27,0.551,28,0.033,39,0.026,40,0.026,80,0.629,127,1.37,162,1.963,168,1.652,172,1.032,176,2.498,183,1.245,206,1.669,207,1.669,208,1.652,211,2.36,213,1.855,214,1.855,215,3.063,216,2.943,217,1.855,218,3.063,219,1.669,220,2.763,221,1.245,222,1.134,223,1.509,224,2.485,225,1.134,226,1.134,227,1.369,228,1.855,229,1.855,230,1.669,231,1.509,232,1.669,521,3.305]],["title/modules/PrismaModule.html",[41,0.951,50,1.709]],["body/modules/PrismaModule.html",[3,0.355,4,0.355,5,0.301,8,0.036,9,0.744,25,0.462,26,0.6,27,0.355,28,0.021,35,1.606,39,0.027,40,0.027,41,1.677,43,2.103,44,1.722,50,3.261,53,2.292,54,2.307,55,1.776,70,2.565,250,3.781,254,3.262,299,2.874,352,2.453,490,3.262,491,3.781,522,2.911,523,2.911,524,3.518,525,3.518,526,4.569,527,4.569,528,4.569,529,4.569,530,3.518]],["title/injectables/PrismaService.html",[53,1.147,139,0.644]],["body/injectables/PrismaService.html",[3,0.336,4,0.336,5,0.285,8,0.037,9,0.704,17,0.567,18,1.511,21,0.932,23,1.039,25,0.499,26,0.567,27,0.336,28,0.02,39,0.026,40,0.026,41,1.375,53,1.659,72,3.645,78,1.253,79,1.253,80,0.633,81,1.141,87,1.679,108,2.654,112,3.645,136,2.375,139,0.932,140,1.378,221,1.659,222,1.141,223,1.519,300,2.092,310,2.772,352,2.011,377,1.867,444,3.645,531,2.752,532,4.404,533,5.467,534,4.404,535,4.404,536,5.618,537,3.326,538,3.326,539,2.752,540,3.326,541,2.752,542,3.326,543,3.326,544,3.326]],["title/controllers/UserController.html",[0,1.147,277,1.709]],["body/controllers/UserController.html",[0,1.355,2,1.134,3,0.251,4,0.251,5,0.213,7,1.773,8,0.037,11,1.254,17,0.423,18,1.233,20,1.642,21,0.761,23,1.447,24,2.659,25,0.497,26,0.423,27,0.251,28,0.015,29,1.49,39,0.021,40,0.021,59,2.483,78,1.355,79,1.355,80,0.976,81,1.59,127,0.775,150,1.93,151,3.308,165,2.018,172,0.775,187,1.773,188,1.394,192,1.394,193,2.659,221,0.936,225,1.759,226,1.45,255,1.394,256,2.915,258,1.773,259,2.898,260,2.055,261,2.055,262,2.055,263,2.055,264,1.773,265,4.053,266,2.055,267,2.055,268,1.562,269,1.93,270,1.773,271,1.562,272,2.055,273,2.055,274,2.055,275,2.055,276,2.055,277,2.018,278,2.976,279,2.373,280,2.976,281,2.055,282,2.976,283,2.567,284,2.976,285,2.976,286,2.976,287,2.976,288,3.498,289,2.055,290,2.976,291,2.055,292,2.055,545,3.596,546,3.596,547,2.483,548,2.483,549,2.483,550,2.483]],["title/classes/UserDTO.html",[28,0.018,226,1.044]],["body/classes/UserDTO.html",[3,0.303,4,0.303,5,0.257,8,0.036,17,0.512,21,1.153,25,0.303,27,0.533,28,0.032,39,0.024,40,0.024,80,1.038,127,1.283,162,1.728,168,1.548,172,0.937,176,2.504,183,1.548,206,1.514,207,1.514,208,1.548,213,1.684,214,1.684,215,2.963,216,2.829,217,1.684,218,2.963,219,1.514,220,2.63,221,1.13,222,1.029,223,1.37,224,2.665,225,1.029,226,1.409,227,1.941,228,2.63,229,2.63,230,2.366,231,2.139,232,2.074,551,2.999,552,2.999,553,2.999,554,2.999,555,2.999,556,2.999]],["title/modules/UserModule.html",[41,0.951,51,1.709]],["body/modules/UserModule.html",[2,2.148,3,0.372,4,0.372,5,0.315,8,0.036,9,0.778,25,0.524,26,0.628,27,0.372,28,0.022,35,1.68,39,0.028,40,0.028,41,1.706,43,1.525,44,1.772,51,3.241,54,2.375,55,1.858,70,2.64,127,1.469,259,2.375,264,3.358,269,2.637,270,2.627,277,2.91,298,3.892,324,3.892,557,3.045,558,3.045,559,3.68,560,3.892,561,3.68]],["title/injectables/UserService.html",[139,0.644,269,1.39]],["body/injectables/UserService.html",[3,0.261,4,0.261,5,0.222,8,0.037,9,0.547,17,0.441,18,1.271,21,0.784,23,1.157,25,0.505,26,0.441,27,0.261,28,0.015,29,1.535,39,0.022,40,0.022,53,1.78,59,1.307,78,1.396,79,1.396,80,0.899,81,1.271,87,1.307,108,2.385,127,1.157,139,0.784,140,1.072,188,1.453,192,1.453,193,2.331,222,0.888,225,1.837,226,1.715,227,1.535,259,2.857,269,2.157,279,1.453,283,1.848,294,3.066,299,1.628,300,2.722,310,2.429,316,2.142,320,3.066,339,1.848,342,1.848,346,3.581,352,1.182,361,2.142,362,1.848,374,1.628,376,2.429,377,2.429,381,2.645,419,3.066,449,2.142,460,3.581,461,3.909,490,2.645,562,2.142,563,3.705,564,3.705,565,2.588,566,3.705,567,4.724,568,2.588,569,2.588,570,2.588,571,2.142,572,2.588,573,3.705]],["title/coverage.html",[574,3.435]],["body/coverage.html",[0,1.826,1,2.015,5,0.274,6,2.651,8,0.036,15,2.015,28,0.032,39,0.025,40,0.025,52,1.798,53,1.207,80,0.61,89,2.015,99,1.327,139,1.201,141,2.651,142,2.015,143,2.651,162,1.099,168,1.207,172,1,189,1.617,207,2.726,225,1.099,226,1.099,236,1.798,255,1.798,256,2.015,258,3.066,269,1.463,277,1.798,293,2.651,391,2.287,441,2.651,462,2.651,494,2.651,531,2.651,562,2.651,574,2.651,575,3.203,576,3.203,577,5.677,578,3.203,579,3.203,580,3.203,581,3.203,582,3.203,583,4.845,584,4.845,585,4.295,586,5.399,587,5.177,588,3.203,589,3.203,590,3.203,591,2.651,592,3.203,593,2.651,594,3.203,595,3.203,596,3.203,597,3.203]],["title/dependencies.html",[44,1.379,598,2.106]],["body/dependencies.html",[8,0.037,26,0.573,28,0.026,39,0.026,40,0.026,44,1.265,95,2.788,96,3.542,97,2.788,98,3.164,103,2.779,104,2.779,150,2.024,219,1.696,241,2.398,268,2.113,271,2.113,339,2.398,352,1.533,452,4.106,506,2.779,539,2.779,599,3.358,600,3.358,601,5.276,602,3.358,603,3.358,604,3.358,605,4.432,606,3.358,607,3.358,608,3.358,609,3.358,610,4.432,611,3.358,612,4.432,613,3.358,614,3.358,615,3.358,616,3.358,617,3.358,618,3.358,619,3.358,620,3.358,621,3.358,622,3.358,623,3.358,624,3.358,625,3.358,626,3.358,627,3.358,628,3.358,629,3.358,630,3.358,631,3.358,632,3.358,633,3.358,634,3.358]],["title/miscellaneous/functions.html",[635,2.106,636,3.029]],["body/miscellaneous/functions.html",[8,0.032,17,0.801,39,0.032,40,0.032,591,3.885,593,4.775,635,3.885,636,3.885,637,4.695]],["title/index.html",[17,0.434,638,2.545,639,2.545]],["body/index.html",[8,0.029,11,1.452,13,2.052,14,2.848,15,1.808,39,0.023,40,0.023,44,1.083,58,2.379,65,3.791,66,2.379,67,2.379,95,1.808,97,1.808,113,2.379,129,2.379,134,2.379,144,2.052,150,1.313,186,1.614,299,3.385,325,2.379,342,2.848,348,2.379,352,2.519,381,2.052,496,2.379,541,2.379,560,2.379,571,3.791,640,2.875,641,3.99,642,2.875,643,2.875,644,2.875,645,2.875,646,2.875,647,4.582,648,3.99,649,3.99,650,3.99,651,2.875,652,3.99,653,2.875,654,2.875,655,2.875,656,2.875,657,2.875,658,2.875,659,2.875,660,2.875,661,2.875,662,2.875,663,2.875,664,2.875,665,2.875,666,2.875,667,2.875,668,2.875,669,2.875,670,2.875,671,2.875,672,3.99,673,2.875,674,2.875,675,2.875,676,3.99,677,2.875,678,2.875,679,2.875,680,2.875,681,2.875,682,2.875,683,3.99,684,4.949,685,3.99,686,2.875,687,2.875,688,2.875,689,2.875,690,2.875,691,2.875,692,2.875,693,2.875,694,2.875,695,2.875,696,2.875,697,2.875,698,2.875,699,2.875,700,2.875,701,2.875,702,2.875,703,2.875,704,2.875,705,2.875,706,2.875,707,3.99,708,2.875,709,2.875,710,2.379,711,2.875,712,2.875,713,2.875,714,2.875,715,2.875,716,2.875,717,2.875,718,2.875,719,2.875,720,2.875,721,2.875,722,2.875,723,2.875,724,2.875,725,2.875,726,2.875]],["title/modules.html",[43,1.72]],["body/modules.html",[8,0.031,39,0.031,40,0.031,42,2.731,43,1.799,48,2.437,49,2.192,50,2.437,51,2.437,710,4.901,727,5.923,728,5.923,729,5.923]],["title/overview.html",[730,3.435]],["body/overview.html",[2,1.463,8,0.036,35,1.463,39,0.025,40,0.025,42,3.817,43,1.327,44,1.618,45,2.651,46,2.651,47,2.651,48,3.281,49,2.867,50,3.12,51,3.031,52,2.72,53,2.174,54,2.169,55,1.617,99,2.352,132,2.651,140,1.327,189,2.447,206,1.617,233,2.651,235,2.651,236,2.72,255,1.798,269,2.212,486,2.651,487,2.651,488,2.651,522,2.651,523,2.651,557,2.651,558,2.651,730,2.651,731,4.295,732,3.203,733,3.203]],["title/properties.html",[208,1.379,598,2.106]],["body/properties.html",[8,0.036,9,0.98,39,0.032,40,0.032,208,1.745,344,3.833,734,4.632,735,4.632,736,4.632,737,4.632]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":734,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["0.29.1",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["1.0.0",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["1.0.34",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["1.ec2.cloud.redislabs.com",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["1/2",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["1000000",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["1200",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["15m",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["18258",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["18258.c305.ap",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["1d",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["2.0.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["20min",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["25",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":732,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.0.0",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":731,"title":{},"body":{"overview.html":{}}}],["50",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["5434",{"_index":708,"title":{},"body":{"index.html":{}}}],["6",{"_index":715,"title":{},"body":{"index.html":{}}}],["6.4.6",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["6.7.8",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":733,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["accountsid",{"_index":508,"title":{},"body":{"injectables/OtpService.html":{}}}],["actual",{"_index":273,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["alias",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["already",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["analysis",{"_index":467,"title":{},"body":{"injectables/LogRequest.html":{}}}],["api",{"_index":657,"title":{},"body":{"index.html":{}}}],["app",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app/app.controller",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.service",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["appmodule",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":52,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":726,"title":{},"body":{"index.html":{}}}],["argon",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["argon.hash(body.password",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(user.password",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["argon.verify(user.password",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["async",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["auth.controller",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":142,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":267,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["authlogin",{"_index":168,"title":{"classes/AuthLogin.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["authlogin:13",{"_index":435,"title":{},"body":{"classes/AuthSignup.html":{}}}],["authlogin:16",{"_index":434,"title":{},"body":{"classes/AuthSignup.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":737,"title":{},"body":{"properties.html":{}}}],["authrequest",{"_index":256,"title":{"interfaces/AuthRequest.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["authservice",{"_index":189,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsignup",{"_index":172,"title":{"classes/AuthSignup.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["authtoken",{"_index":510,"title":{},"body":{"injectables/OtpService.html":{}}}],["available",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["await",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["awesome",{"_index":699,"title":{},"body":{"index.html":{}}}],["backend",{"_index":641,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":476,"title":{},"body":{"injectables/LogRequest.html":{}}}],["basicroute",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["better",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{}}}],["body('otp",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('phnum",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.phnum",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["body.username",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":232,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["bootstrap",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":729,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":727,"title":{},"body":{"modules.html":{}}}],["cacha_manager",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["cache",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["cache_manager",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemanager",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["cacheotp",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["calculate",{"_index":723,"title":{},"body":{"index.html":{}}}],["cases",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["centre",{"_index":694,"title":{},"body":{"index.html":{}}}],["change",{"_index":264,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["class",{"_index":28,"title":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":206,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"overview.html":{}}}],["client",{"_index":534,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cloud",{"_index":652,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_otpmodule",{"_index":486,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_exports",{"_index":487,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_providers",{"_index":488,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":522,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":523,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":524,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_usermodule",{"_index":557,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":558,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["compose",{"_index":664,"title":{},"body":{"index.html":{}}}],["config",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["config.get('database_url",{"_index":543,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":457,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["configservice.get('twilio_account_sid",{"_index":509,"title":{},"body":{"injectables/OtpService.html":{}}}],["configservice.get('twilio_auth_token",{"_index":511,"title":{},"body":{"injectables/OtpService.html":{}}}],["configure",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{}}}],["configure(consumer",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configuring",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":527,"title":{},"body":{"modules/PrismaModule.html":{}}}],["console.log('here",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`\"${originalurl",{"_index":480,"title":{},"body":{"injectables/LogRequest.html":{}}}],["console.log(body.phnum",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(phonenum",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(res",{"_index":484,"title":{},"body":{"injectables/LogRequest.html":{}}}],["const",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":222,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["constructor(config",{"_index":444,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(configservice",{"_index":502,"title":{},"body":{"injectables/OtpService.html":{}}}],["constructor(postgre",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["construstor",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logrequest).forroutes",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('user",{"_index":276,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coonect",{"_index":535,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cordination",{"_index":693,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":574,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdat",{"_index":228,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["creating",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["crimeapp",{"_index":518,"title":{},"body":{"injectables/OtpService.html":{}}}],["crud",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["current",{"_index":696,"title":{},"body":{"index.html":{}}}],["currently",{"_index":702,"title":{},"body":{"index.html":{}}}],["cyber",{"_index":691,"title":{},"body":{"index.html":{}}}],["data",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["database",{"_index":680,"title":{},"body":{"index.html":{}}}],["datasources",{"_index":540,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":541,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["dbs",{"_index":686,"title":{},"body":{"index.html":{}}}],["dbuser",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["dbuser.id",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["debugging",{"_index":466,"title":{},"body":{"injectables/LogRequest.html":{}}}],["decorators",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{}}}],["default",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["define",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":460,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["demand",{"_index":695,"title":{},"body":{"index.html":{}}}],["dependecies",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["dependencies",{"_index":44,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["designed",{"_index":463,"title":{},"body":{"injectables/LogRequest.html":{}}}],["detection",{"_index":718,"title":{},"body":{"index.html":{}}}],["dev",{"_index":678,"title":{},"body":{"index.html":{}}}],["developed",{"_index":640,"title":{},"body":{"index.html":{}}}],["docker",{"_index":647,"title":{},"body":{"index.html":{}}}],["docs",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"index.html":{}}}],["docs)[/docs",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["doesnt",{"_index":703,"title":{},"body":{"index.html":{}}}],["done",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["easily",{"_index":673,"title":{},"body":{"index.html":{}}}],["edge",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["edit",{"_index":289,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["editmydata",{"_index":545,"title":{},"body":{"controllers/UserController.html":{}}}],["editmydata(@body",{"_index":291,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["editmydata(user",{"_index":547,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser",{"_index":225,"title":{"classes/EditUser.html":{}},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["edituser(user",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["elements",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["email",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["emailing",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["enterred",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["entity",{"_index":725,"title":{},"body":{"index.html":{}}}],["env",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["error",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.code",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["execute",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["exisit",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["expired",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiry",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exporting",{"_index":528,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exports",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{}}}],["express",{"_index":271,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":221,"title":{},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["extracting",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["extractjwt",{"_index":451,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":455,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["feilds",{"_index":284,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["few",{"_index":687,"title":{},"body":{"index.html":{}}}],["figure",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["finding",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["flexible",{"_index":671,"title":{},"body":{"index.html":{}}}],["followed",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('session",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('wrong",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["forensics",{"_index":692,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordlogic",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordlogic(phonenum",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpwd",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpwd(@body",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpwd(body",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["format",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["framework",{"_index":655,"title":{},"body":{"index.html":{}}}],["fraud",{"_index":717,"title":{},"body":{"index.html":{}}}],["function",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":636,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["generating",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["get('/hehe",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me",{"_index":280,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["getting",{"_index":638,"title":{"index.html":{}},"body":{}}],["global",{"_index":491,"title":{},"body":{"modules/OtpModule.html":{},"modules/PrismaModule.html":{}}}],["globally",{"_index":529,"title":{},"body":{"modules/PrismaModule.html":{}}}],["go",{"_index":663,"title":{},"body":{"index.html":{}}}],["good",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["graph",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["guess",{"_index":669,"title":{},"body":{"index.html":{}}}],["hackathon",{"_index":643,"title":{},"body":{"index.html":{}}}],["handle",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["handlebars",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["handled",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["header",{"_index":288,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["headers",{"_index":477,"title":{},"body":{"injectables/LogRequest.html":{}}}],["hehe",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["here",{"_index":517,"title":{},"body":{"injectables/OtpService.html":{}}}],["heyy",{"_index":516,"title":{},"body":{"injectables/OtpService.html":{}}}],["host",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["hosting",{"_index":651,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(error",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.forbidden",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":227,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["implementing",{"_index":532,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implements",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["incoming",{"_index":278,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["incomming",{"_index":465,"title":{},"body":{"injectables/LogRequest.html":{}}}],["incorrect",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["infor",{"_index":688,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":433,"title":{},"body":{"classes/AuthSignup.html":{}}}],["init",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{}}}],["initiated",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["initiating",{"_index":526,"title":{},"body":{"modules/PrismaModule.html":{}}}],["inject",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"modules/OtpModule.html":{}}}],["inject(cache_manager",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":139,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{}}}],["inserting",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["instance",{"_index":707,"title":{},"body":{"index.html":{}}}],["interface",{"_index":255,"title":{"interfaces/AuthRequest.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":257,"title":{},"body":{"interfaces/AuthRequest.html":{}}}],["internalservererrorexception",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["internalservererrorexception('failed",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["isboolean",{"_index":213,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isemail",{"_index":214,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isglobal",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":215,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isnotempty()@isphonenumber('in",{"_index":211,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/Phnum.html":{}}}],["isoptional",{"_index":216,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isoptional()@isphonenumber('in",{"_index":438,"title":{},"body":{"classes/EditUser.html":{}}}],["isphonenumber",{"_index":217,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isphonenumber('in",{"_index":220,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isstring",{"_index":218,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isstring()@isnotempty",{"_index":209,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{}}}],["isstring()@isoptional",{"_index":436,"title":{},"body":{"classes/EditUser.html":{}}}],["jobs",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["json.stringify",{"_index":481,"title":{},"body":{"injectables/LogRequest.html":{}}}],["jwt",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"dependencies.html":{},"index.html":{}}}],["jwtfromrequest",{"_index":454,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign(userid",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":236,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kawach",{"_index":642,"title":{},"body":{"index.html":{}}}],["lay",{"_index":713,"title":{},"body":{"index.html":{}}}],["lets",{"_index":485,"title":{},"body":{"injectables/LogRequest.html":{}}}],["license",{"_index":735,"title":{},"body":{"properties.html":{}}}],["link",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["literal",{"_index":447,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["locally",{"_index":649,"title":{},"body":{"index.html":{}}}],["log",{"_index":464,"title":{},"body":{"injectables/LogRequest.html":{}}}],["logging",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["logic",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{}}}],["login",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginlogic",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginlogic(body",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["logrequest",{"_index":89,"title":{"injectables/LogRequest.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{},"coverage.html":{}}}],["logs",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["love",{"_index":670,"title":{},"body":{"index.html":{}}}],["mailservice",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["maintain",{"_index":667,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":682,"title":{},"body":{"index.html":{}}}],["make",{"_index":704,"title":{},"body":{"index.html":{}}}],["manage",{"_index":674,"title":{},"body":{"index.html":{}}}],["management",{"_index":660,"title":{},"body":{"index.html":{}}}],["manager",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["manages",{"_index":698,"title":{},"body":{"index.html":{}}}],["many",{"_index":685,"title":{},"body":{"index.html":{}}}],["matching",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.floor(math.random",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["message",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["messaging",{"_index":662,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":478,"title":{},"body":{"injectables/LogRequest.html":{}}}],["methods",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{}}}],["middlewareconsumer",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["migrate",{"_index":677,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":635,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["ml",{"_index":720,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":498,"title":{},"body":{"injectables/OtpService.html":{}}}],["models",{"_index":721,"title":{},"body":{"index.html":{}}}],["module",{"_index":41,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":43,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["moniter",{"_index":679,"title":{},"body":{"index.html":{}}}],["mydata",{"_index":546,"title":{},"body":{"controllers/UserController.html":{}}}],["mydata(@req",{"_index":281,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["mydata(req",{"_index":549,"title":{},"body":{"controllers/UserController.html":{}}}],["mysql",{"_index":706,"title":{},"body":{"index.html":{}}}],["name",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["national",{"_index":690,"title":{},"body":{"index.html":{}}}],["need",{"_index":286,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["nestjs",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs(express",{"_index":653,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":492,"title":{},"body":{"modules/OtpModule.html":{}}}],["nestjs/common/enums",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/common/exceptions",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/config",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["nestjs/core",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["nestjs/passport",{"_index":268,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":475,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nestmodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{},"coverage.html":{}}}],["next",{"_index":472,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nextfunction",{"_index":473,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nodemailer",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["now",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["npx",{"_index":676,"title":{},"body":{"index.html":{}}}],["number",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["numbers",{"_index":499,"title":{},"body":{"injectables/OtpService.html":{}}}],["object",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["onmoduleinit",{"_index":536,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["originalurl",{"_index":479,"title":{},"body":{"injectables/LogRequest.html":{}}}],["orm",{"_index":571,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["otp",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"index.html":{}}}],["otp.service",{"_index":493,"title":{},"body":{"modules/OtpModule.html":{}}}],["otp/otp.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["otp/otp.service",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["otpmodule",{"_index":49,"title":{"modules/OtpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules.html":{},"overview.html":{}}}],["otpsender",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["otpservice",{"_index":99,"title":{"injectables/OtpService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["over",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["overview",{"_index":730,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":598,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["param",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pas",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["pass",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["passport",{"_index":452,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportjs",{"_index":659,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":450,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":453,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["passwords",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":279,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["payload.sub",{"_index":459,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pending",{"_index":711,"title":{},"body":{"index.html":{}}}],["phnum",{"_index":162,"title":{"classes/Phnum.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["phonenum",{"_index":230,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["pipelines",{"_index":714,"title":{},"body":{"index.html":{}}}],["port",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["post",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["post('/requestotp",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signin",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/verifyotp",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('edit",{"_index":290,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["postgre",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["postgres",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["posts",{"_index":263,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["prefetched",{"_index":689,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.service",{"_index":530,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":539,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":533,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":50,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":53,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/UserService.html":{}}}],["promise",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"properties.html":{}}}],["property",{"_index":274,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["provided",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["pw",{"_index":285,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["pwmatches",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["python",{"_index":656,"title":{},"body":{"index.html":{}}}],["qmvxege8cv0xsmddlkgezlo4u3b9rwwj",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["quering",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":722,"title":{},"body":{"index.html":{}}}],["railway",{"_index":650,"title":{},"body":{"index.html":{}}}],["random",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["reading",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["readonly",{"_index":507,"title":{},"body":{"injectables/OtpService.html":{}}}],["reddis",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["reddistore",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["redis",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["reflect",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["relations",{"_index":672,"title":{},"body":{"index.html":{}}}],["relationships",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["replace",{"_index":272,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["req",{"_index":265,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{}}}],["req.user",{"_index":282,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["request",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requestotp",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LogRequest.html":{}}}],["required",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["res",{"_index":470,"title":{},"body":{"injectables/LogRequest.html":{}}}],["res.on('close",{"_index":482,"title":{},"body":{"injectables/LogRequest.html":{}}}],["reset",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resp",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["response",{"_index":471,"title":{},"body":{"injectables/LogRequest.html":{}}}],["responses",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["respsent",{"_index":483,"title":{},"body":{"injectables/LogRequest.html":{}}}],["rest",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retrieve",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["retrieved",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["rn",{"_index":701,"title":{},"body":{"index.html":{}}}],["root",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["rootpath",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"index.html":{}}}],["routes",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["routs",{"_index":260,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["run",{"_index":648,"title":{},"body":{"index.html":{}}}],["running",{"_index":709,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved",{"_index":262,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["secondary",{"_index":645,"title":{},"body":{"index.html":{}}}],["secret",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretkey",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":456,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{}}}],["sendotp",{"_index":501,"title":{},"body":{"injectables/OtpService.html":{}}}],["sendotp(otp",{"_index":504,"title":{},"body":{"injectables/OtpService.html":{}}}],["sense",{"_index":705,"title":{},"body":{"index.html":{}}}],["servce",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["serve",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":665,"title":{},"body":{"index.html":{}}}],["serveroot",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":490,"title":{},"body":{"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"injectables/UserService.html":{}}}],["services",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["serving",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["setup",{"_index":560,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["several",{"_index":683,"title":{},"body":{"index.html":{}}}],["sha",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["signing",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@body",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(body",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["signuplogic",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["signuplogic(body",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["sms",{"_index":661,"title":{},"body":{"index.html":{}}}],["smssent",{"_index":514,"title":{},"body":{"injectables/OtpService.html":{}}}],["smssent.sid",{"_index":520,"title":{},"body":{"injectables/OtpService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["south",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../main.ts",{"_index":637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:58",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:11",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.service.ts",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:46",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:58",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:69",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:116",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:148",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:70",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:93",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwtstrategy.ts",{"_index":441,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwtstrategy.ts:11",{"_index":445,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwtstrategy.ts:19",{"_index":448,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/mail/mail.service",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/requestlog.ts",{"_index":462,"title":{},"body":{"injectables/LogRequest.html":{},"coverage.html":{}}}],["src/middleware/requestlog.ts:9",{"_index":474,"title":{},"body":{"injectables/LogRequest.html":{}}}],["src/otp/otp.module",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/otp/otp.module.ts",{"_index":489,"title":{},"body":{"modules/OtpModule.html":{}}}],["src/otp/otp.service",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["src/otp/otp.service.ts",{"_index":494,"title":{},"body":{"injectables/OtpService.html":{},"coverage.html":{}}}],["src/otp/otp.service.ts:11",{"_index":503,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:18",{"_index":505,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":525,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":531,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":537,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:20",{"_index":538,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/typings",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["src/typings/auth.ts",{"_index":207,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["src/typings/auth.ts:13",{"_index":212,"title":{},"body":{"classes/AuthLogin.html":{}}}],["src/typings/auth.ts:16",{"_index":210,"title":{},"body":{"classes/AuthLogin.html":{}}}],["src/typings/auth.ts:18",{"_index":431,"title":{},"body":{"classes/AuthSignup.html":{}}}],["src/typings/auth.ts:24",{"_index":432,"title":{},"body":{"classes/AuthSignup.html":{}}}],["src/typings/auth.ts:30",{"_index":439,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:33",{"_index":437,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:36",{"_index":440,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:42",{"_index":521,"title":{},"body":{"classes/Phnum.html":{}}}],["src/typings/auth.ts:46",{"_index":552,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:47",{"_index":551,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:48",{"_index":554,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:49",{"_index":553,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:50",{"_index":555,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:51",{"_index":556,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/user.controller.ts",{"_index":258,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:26",{"_index":550,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":548,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":559,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":562,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["stack",{"_index":644,"title":{},"body":{"index.html":{}}}],["started",{"_index":639,"title":{"index.html":{}},"body":{}}],["statements",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["stats",{"_index":724,"title":{},"body":{"index.html":{}}}],["storage",{"_index":646,"title":{},"body":{"index.html":{}}}],["store",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["storing",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategy",{"_index":442,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["struggle",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["studio",{"_index":681,"title":{},"body":{"index.html":{}}}],["sub",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subset",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["super",{"_index":223,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"classes/UserDTO.html":{}}}],["support",{"_index":710,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supprt",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["svg",{"_index":728,"title":{},"body":{"modules.html":{}}}],["table",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":684,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["taken",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["tasks",{"_index":712,"title":{},"body":{"index.html":{}}}],["test",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["test(@body('email",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["test(email",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["testing",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"index.html":{}}}],["things",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["this.$connect",{"_index":544,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.forgotpasswordlogic(body.phnum",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.loginlogic(body",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signuplogic(body",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifylogic(otp",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cachemanager.del(phonenum",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cachemanager.get(phonenum",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cachemanager.set(phonenum",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.get('jwt_secret",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('twilio_phone_num",{"_index":519,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.jwt.signasync(payload",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtsign(user.id",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice.senduserconfirmation(otp",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.otpsender.sendotp(otp",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.user.create",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.user.findunique",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.user.update",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":458,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.twilioclient",{"_index":512,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.twilioclient.messages.create",{"_index":515,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.userservice.edituser(user",{"_index":292,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["throw",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["trigger",{"_index":719,"title":{},"body":{"index.html":{}}}],["true",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["try",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogRequest.html":{}}}],["ts",{"_index":654,"title":{},"body":{"index.html":{}}}],["ttl",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["twilio",{"_index":506,"title":{},"body":{"injectables/OtpService.html":{},"dependencies.html":{}}}],["twilio(accountsid",{"_index":513,"title":{},"body":{"injectables/OtpService.html":{}}}],["twilioclient",{"_index":500,"title":{},"body":{"injectables/OtpService.html":{}}}],["twillio",{"_index":496,"title":{},"body":{"injectables/OtpService.html":{},"index.html":{}}}],["type",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types",{"_index":716,"title":{},"body":{"index.html":{}}}],["types/cache",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":658,"title":{},"body":{"index.html":{}}}],["underneath",{"_index":497,"title":{},"body":{"injectables/OtpService.html":{}}}],["unknown",{"_index":449,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":736,"title":{},"body":{"properties.html":{}}}],["update",{"_index":283,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":229,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["uptime",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["url",{"_index":542,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":468,"title":{},"body":{"injectables/LogRequest.html":{},"modules/OtpModule.html":{}}}],["use(req",{"_index":469,"title":{},"body":{"injectables/LogRequest.html":{}}}],["used",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["usedas",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":266,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":275,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["user",{"_index":259,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":561,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":461,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":270,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":277,"title":{"controllers/UserController.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{}}}],["userdto",{"_index":226,"title":{"classes/UserDTO.html":{}},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userid",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfo",{"_index":261,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["usermodule",{"_index":51,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":224,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["users",{"_index":697,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":269,"title":{"injectables/UserService.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdate",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["userverifed",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["uses",{"_index":495,"title":{},"body":{"injectables/OtpService.html":{}}}],["using",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["valid",{"_index":287,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/UserController.html":{}}}],["validate",{"_index":443,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":446,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":219,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"dependencies.html":{}}}],["values",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["verfied",{"_index":231,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["verfies",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["verfifying",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifylogic",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifylogic(otp",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyotp",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyotp(otp",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["version",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"properties.html":{}}}],["via",{"_index":675,"title":{},"body":{"index.html":{}}}],["void",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{}}}],["welcome_msg",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["well",{"_index":666,"title":{},"body":{"index.html":{}}}],["work",{"_index":700,"title":{},"body":{"index.html":{}}}],["works",{"_index":668,"title":{},"body":{"index.html":{}}}],["yes",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n            \n                Description\n            \n            \n                Default Route\n/ - uptime testing\n/docs - documentation Link\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                basicRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        basicRoute\n                        \n                    \n                \n            \n            \n                \nbasicRoute()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n/**\n * Default Route\n * / - uptime testing\n * /docs - documentation Link\n */\n@Controller('/')\nexport class AppController {\n  @Get()\n  basicRoute(): object {\n    return {\n      welcome_msg:\n        'GOOD Now struggle and figure out rest reading my /docs page ',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nAppModule -->\n\nOtpModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Root Of the APP with request logging middleware implemented\n @alias ServeStaticModule used for serving this docs over (docs)[/docs] Documentation is generated in documentation file\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OtpModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:58\n                \n            \n\n\n            \n                \n                    Configuring the middleware for routes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n} from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { LogRequest } from './middleware';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { OtpModule } from './otp/otp.module';\nimport * as ReddiStore from 'cache-manager-redis-store';\nimport { OtpService } from './otp/otp.service';\nimport { AppController } from './app/app.controller';\nimport { AppService } from './app/app.service';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n/**\n * Root Of the APP with request logging middleware implemented\n *  @alias ServeStaticModule used for serving this docs over (docs)[/docs] Documentation is generated in `documentation` file\n * @alias ConfigModule usedas Configservice to retrieve env elements\n * @alias CacheModule used to init reddis cache store with ttl 1200 `20min`\n */\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n      serveRoot: '/docs', // this will serve your files on /docs route\n    }),\n\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    CacheModule.register({\n      store: ReddiStore,\n      password: 'qmvXege8CV0xSmddlkgEZlo4u3b9rWwJ',\n      host: 'redis-18258.c305.ap-south-1-1.ec2.cloud.redislabs.com',\n      port: 18258,\n      isGlobal: true,\n      ttl: 1200,\n    }),\n    AuthModule,\n    PrismaModule,\n    UserModule,\n    OtpModule,\n  ],\n  providers: [PrismaService, AppService],\n  controllers: [AppController],\n})\nexport class AppModule implements NestModule {\n  /**\n   * Configuring the middleware for routes\n   * @alias LogRequest middleware logs type of request and route\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LogRequest).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                Controller to take all requests and send responses\nPrefix --> /auth\nRoutes available [NO JWT PASS REQUIRED]\n\n/Signup\n/Signin\n/requestOtp\n/verifyOTP\n/hehe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ForgotPwd\n                            \n                            \n                                Login\n                            \n                            \n                                Signup\n                            \n                            \n                                test\n                            \n                            \n                                verifyOTP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ForgotPwd\n                        \n                    \n                \n            \n            \n                \nForgotPwd(body: Phnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/requestOtp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                Phnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Login\n                        \n                    \n                \n            \n            \n                \nLogin(body: AuthLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/Signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Signup\n                        \n                    \n                \n            \n            \n                \nSignup(body: AuthSignup)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/Signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthSignup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        JWT\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest(email?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/hehe')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n                    Sample Testing Route\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyOTP\n                        \n                    \n                \n            \n            \n                \nverifyOTP(OTP: number, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/verifyOTP')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Get, Body } from '@nestjs/common';\nimport { AuthLogin, AuthSignup, Phnum } from 'src/Typings';\nimport { AuthService } from './auth.service';\n\n/**\n * Controller to take all requests and send responses\n * Prefix --> /auth\n *\n * Routes available [NO JWT PASS REQUIRED]\n * - /Signup\n * - /Signin\n * - /requestOtp\n * - /verifyOTP\n * - /hehe\n */\n@Controller('auth')\nexport class AuthController {\n  constructor(private AuthService: AuthService) {}\n\n  /**\n   *\n   * @param body @type {AuthSignup} send body of this format\n   * @returns JWT\n   */\n  @Post('/Signup')\n  Signup(@Body() body: AuthSignup): Promise {\n    return this.AuthService.signupLogic(body);\n  }\n\n  /**\n   *\n   * @param body @type {AuthLogin}\n   * @returns\n   */\n  @Post('/Signin')\n  Login(@Body() body: AuthLogin): Promise {\n    return this.AuthService.loginLogic(body);\n  }\n\n  /**\n   *\n   * @param body @type {Phnum}\n   * @returns\n   */\n  @Post('/requestOtp')\n  ForgotPwd(@Body() body: Phnum): Promise {\n    console.log(body.phnum);\n    return this.AuthService.forgotpasswordLogic(body.phnum);\n  }\n\n  /**\n   *\n   * @param OTP @type {number}\n   * @param phnum @type {Phnum}\n   * @returns\n   */\n  @Post('/verifyOTP')\n  verifyOTP(\n    @Body('OTP') OTP: number,\n    @Body('phnum') email: string,\n  ): Promise {\n    return this.AuthService.verifyLogic(OTP, email);\n  }\n\n  /**\n   * Sample Testing Route\n   */\n  @Get('/hehe')\n  test(@Body('email') email?: string): string {\n    return 'hehe';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLogin.html":{"url":"classes/AuthLogin.html","title":"class - AuthLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nOtpModule\n\nOtpModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is where we define all dependecies and relationships for nestjs application graph\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OtpModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './JwtStrategy';\nimport { OtpService } from 'src/otp/otp.service';\nimport { OtpModule } from 'src/otp/otp.module';\n\n/**\n * Module is where we define all dependecies and relationships for nestjs application graph\n */\n@Module({\n  /**\n   * things that have to be injected into controllers\n   */\n  providers: [AuthService, JwtStrategy],\n\n  // the controllers in this module\n  controllers: [AuthController],\n\n  // Modules required for this module\n  imports: [JwtModule.register({}), OtpModule],\n\n  // the subset of providers that are provided by this module and should be available in other modules which import this module.\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthRequest.html":{"url":"interfaces/AuthRequest.html","title":"interface - AuthRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Controller for User routs\n\nget UserInfo and Saved Posts\nChange Password or body\n\n\n            \n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDTO\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDTO\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UserService } from './user.service';\nimport { Request } from 'express';\nimport { AuthSignup, EditUser, UserDTO } from 'src/Typings';\n\n/**\n * Controller for User routs\n * - get UserInfo and Saved Posts\n * - Change Password or body\n */\ninterface AuthRequest extends Request {\n  user: UserDTO; // Replace `any` with the actual type of the `user` property\n}\n\n@UseGuards(AuthGuard('jwt'))\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  /**\n   *\n   * @param req @type {UserDTO} Incoming req GET route\n   * @returns {object} user payload\n   */\n  @Get('me')\n  MyData(@Req() req: Request) {\n    return req.user;\n  }\n\n  /**\n   * pass update user object and feilds are optional there can be pw or not but need to pass valid JWT in header\n   * @param User @type {EditUser} edit user payload\n   * @param req @type {EditUser} Incoming req with JWT in header\n   * @returns\n   */\n  @Post('edit')\n  EditMyData(@Body() User: EditUser, @Req() req: AuthRequest) {\n    return this.userService.editUser(User, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Controller For Auth related Jobs\n\nPrismaService for inserting and QUering UserData from Postgres\nConfig Servce for extracting Values [Jwt Secret] from .env\nJwtService for Signing Jwt with UserID\nCACHA_MANAGER for redis supprt to store OTP with ttl\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotpasswordLogic\n                            \n                            \n                                    Async\n                                JwtSign\n                            \n                            \n                                    Async\n                                loginLogic\n                            \n                            \n                                    Async\n                                signupLogic\n                            \n                            \n                                    Async\n                                verifyLogic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postgre: PrismaService, config: ConfigService, jwt: JwtService, cachemanager: Cache, otpsender: OtpService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postgre\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cachemanager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpsender\n                                                  \n                                                        \n                                                                        OtpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        forgotpasswordLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotpasswordLogic(phonenum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:93\n                \n            \n\n\n            \n                \n                    Forgot PassWord Logic Generating Random OTP Followed By\nStoring it in Redis and Emailing the User His Otp\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phonenum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        JwtSign\n                        \n                    \n                \n            \n            \n                \n                    \n                    JwtSign(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:148\n                \n            \n\n\n            \n                \n                    Signing JWT with SecretKey with 15m expiry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginLogic(body: AuthLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    Finding User , Verfifying Password with Argon2 and signing Jwt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signupLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    signupLogic(body: AuthSignup)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    Using argon2 a better version of SHA to Hash the passwords\nand Creating User Object all edge cases are handled by Prisma and Nestjs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthSignup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyLogic(OTP: number, phonenum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n                    Verify Otp Logic Where OTP is retrieved From Redis and verfied\nreturns JWT and also verfies user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phonenum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ForbiddenException,\n  Inject,\n  CACHE_MANAGER,\n} from '@nestjs/common';\nimport { AuthLogin, AuthSignup } from 'src/Typings';\nimport * as argon from 'argon2';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Cache } from 'cache-manager';\nimport {\n  HttpException,\n  InternalServerErrorException,\n} from '@nestjs/common/exceptions';\nimport { HttpStatus } from '@nestjs/common/enums';\nimport { OtpService } from 'src/otp/otp.service';\n// import { MailService } from 'src/mail/mail.service';\n\n/**\n * ### Controller For Auth related Jobs\n * @constructor construstor is initiated with 4 Services\n *  - PrismaService for inserting and QUering UserData from `Postgres`\n *  - Config Servce for extracting Values [Jwt Secret] from `.env`\n *  - JwtService for Signing `Jwt` with UserID\n *  - CACHA_MANAGER for redis supprt to store OTP with `ttl`\n */\n@Injectable()\nexport class AuthService {\n  constructor(\n    private postgre: PrismaService,\n    private config: ConfigService,\n    private jwt: JwtService,\n    @Inject(CACHE_MANAGER) private cachemanager: Cache, //\n    private otpsender: OtpService,\n  ) {}\n\n  /**\n   * Using argon2 a better version of SHA to Hash the passwords\n   * and Creating User Object all edge cases are handled by Prisma and Nestjs\n   */\n  async signupLogic(body: AuthSignup): Promise {\n    const hash = await argon.hash(body.password);\n    try {\n      const user = await this.postgre.user.create({\n        data: {\n          phnum: body.phnum,\n          password: hash,\n          username: body.username,\n        },\n      });\n      return {\n        Jwt: await this.JwtSign(user.id),\n      };\n    } catch (error) {\n      console.log('here', error.code);\n\n      if (error.code == 'P2002') {\n        throw new ForbiddenException('Credentials Already Taken');\n      } else {\n        throw new HttpException(error, HttpStatus.FORBIDDEN);\n      }\n    }\n  }\n\n  /**\n   * Finding User , Verfifying Password with Argon2 and signing Jwt\n   */\n  async loginLogic(body: AuthLogin): Promise {\n    const { phnum, password } = body;\n\n    const user = await this.postgre.user.findUnique({\n      where: {\n        phnum: phnum,\n      },\n    });\n    if (!user) {\n      throw new ForbiddenException('Credentials incorrect');\n    }\n    const pwMatches = await argon.verify(user.password, password);\n    if (!pwMatches) throw new ForbiddenException('Credentials incorrect');\n\n    return {\n      Jwt: await this.JwtSign(user.id),\n    };\n  }\n\n  /**\n   * Forgot PassWord Logic Generating Random OTP Followed By\n   * Storing it in Redis and Emailing the User His Otp\n   */\n  async forgotpasswordLogic(phonenum: string): Promise {\n    console.log(phonenum);\n    const user = await this.postgre.user.findUnique({\n      where: {\n        phnum: phonenum,\n      },\n    });\n    if (!user) {\n      throw new ForbiddenException('Credentials incorrect');\n    }\n    const OTP = Math.floor(Math.random() * 1000000);\n    await this.cachemanager.set(phonenum, OTP);\n    // await this.mailService.sendUserConfirmation(OTP, email);\n    const resp = await this.otpsender.sendotp(OTP, '+91' + phonenum);\n    if (!resp)\n      throw new InternalServerErrorException('Failed to execute request');\n    return { message: 'done' };\n  }\n\n  /**\n   * Verify Otp Logic Where OTP is retrieved From Redis and verfied\n   * returns JWT and also verfies user\n   */\n  async verifyLogic(OTP: number, phonenum: string): Promise {\n    const cacheotp = await this.cachemanager.get(phonenum);\n    if (!cacheotp) {\n      throw new ForbiddenException('Session Expired or Not created');\n    }\n    if (OTP == cacheotp) {\n      const user = await this.postgre.user.findUnique({\n        where: {\n          phnum: phonenum,\n        },\n      });\n      const userUpdate = await this.postgre.user.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          ...user,\n          Userverifed: true,\n        },\n      });\n      await this.cachemanager.del(phonenum);\n      return {\n        Jwt: await this.JwtSign(user.id),\n      };\n    } else {\n      throw new ForbiddenException('Wrong Otp Enterred');\n    }\n  }\n\n  /**\n   * Signing JWT with SecretKey with `15m` expiry\n   */\n  async JwtSign(userId: number): Promise {\n    const payload = {\n      sub: userId,\n    };\n    const secret = this.config.get('JWT_SECRET');\n    const token = await this.jwt.signAsync(payload, {\n      expiresIn: '1d',\n      secret: secret,\n    });\n    return token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthSignup.html":{"url":"classes/AuthSignup.html","title":"class - AuthSignup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthSignup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthLogin\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/Typings/auth.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AuthLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthLogin:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AuthLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthLogin:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/JwtStrategy.ts\n        \n\n\n            \n                Description\n            \n            \n                JWT strategy\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/JwtStrategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/JwtStrategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n/**\n * JWT strategy\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(config: ConfigService, private prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: config.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: { sub: number }) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    });\n    delete user.password;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogRequest.html":{"url":"injectables/LogRequest.html","title":"injectable - LogRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/requestLog.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a Middleware is designed to log the incomming requests for debugging and analysis\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/requestLog.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\n\n/**\n * This is a Middleware is designed to log the incomming requests for debugging and analysis\n */\n@Injectable()\nexport class LogRequest implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    const { baseUrl, headers, method, originalUrl } = req;\n    console.log(`\"${originalUrl}\" - METHOD ${method}`);\n\n    // with headers ${JSON.stringify(\n    //   headers,\n    // )}\n\n    res.on('close', () => {\n      // const respSent = res;\n      // console.log(res, 'lets try');\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtpModule.html":{"url":"modules/OtpModule.html","title":"module - OtpModule","body":"\n                   \n\n\n\n\n    Modules\n    OtpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\n\nOtpService \n\nOtpService \n\n\n\nOtpModule\n\nOtpModule\n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/otp/otp.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            OTP service for other modules to inject and use\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OtpService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtpService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Global } from '@nestjs/common/decorators';\nimport { OtpService } from './otp.service';\n\n/**\n *OTP service for other modules to inject and use\n */\n@Global()\n@Module({\n  providers: [OtpService],\n  exports: [OtpService],\n})\nexport class OtpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpService.html":{"url":"injectables/OtpService.html","title":"injectable - OtpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/otp.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Uses twillio underneath to Send OTP to verfied mobile Numbers\nreturns Boolean\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                twilioClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendotp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/otp/otp.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendotp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendotp(OTP: number, phnum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/otp/otp.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phnum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        twilioClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Twilio\n\n                    \n                \n                    \n                        \n                                Defined in src/otp/otp.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Twilio } from 'twilio';\n\n/**\n * Uses twillio underneath to Send OTP to verfied mobile Numbers\n * returns Boolean\n */\n@Injectable()\nexport class OtpService {\n  private twilioClient: Twilio;\n\n  constructor(private readonly configService: ConfigService) {\n    const accountSid = configService.get('TWILIO_ACCOUNT_SID');\n    const authToken = configService.get('TWILIO_AUTH_TOKEN');\n    this.twilioClient = new Twilio(accountSid, authToken);\n  }\n  async sendotp(OTP: number, phnum: string): Promise {\n    const smsSent = await this.twilioClient.messages.create({\n      to: phnum,\n      body: `Heyy here is your crimeapp otp ${OTP}`,\n      from: this.configService.get('TWILIO_PHONE_NUM'),\n    });\n    return !!smsSent.sid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Phnum.html":{"url":"classes/Phnum.html","title":"class - Phnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Phnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for initiating Prisma-Postgres Connection\nand exporting Prisma Service globally for it to get injected in all modules\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n/**\n * Module for initiating Prisma-Postgres Connection\n * and exporting Prisma Service globally for it to get injected in all modules\n */\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementing PrismaClient\nconfigure prisma client and coonect  it on module init\n\n            \n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n/**\n * Implementing PrismaClient\n * configure prisma client and coonect  it on module init\n */\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                EditMyData\n                            \n                            \n                                MyData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        EditMyData\n                        \n                    \n                \n            \n            \n                \nEditMyData(User: EditUser, req: AuthRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n                    pass update user object and feilds are optional there can be pw or not but need to pass valid JWT in header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MyData\n                        \n                    \n                \n            \n            \n                \nMyData(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        user payload\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UserService } from './user.service';\nimport { Request } from 'express';\nimport { AuthSignup, EditUser, UserDTO } from 'src/Typings';\n\n/**\n * Controller for User routs\n * - get UserInfo and Saved Posts\n * - Change Password or body\n */\ninterface AuthRequest extends Request {\n  user: UserDTO; // Replace `any` with the actual type of the `user` property\n}\n\n@UseGuards(AuthGuard('jwt'))\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  /**\n   *\n   * @param req @type {UserDTO} Incoming req GET route\n   * @returns {object} user payload\n   */\n  @Get('me')\n  MyData(@Req() req: Request) {\n    return req.user;\n  }\n\n  /**\n   * pass update user object and feilds are optional there can be pw or not but need to pass valid JWT in header\n   * @param User @type {EditUser} edit user payload\n   * @param req @type {EditUser} Incoming req with JWT in header\n   * @returns\n   */\n  @Post('edit')\n  EditMyData(@Body() User: EditUser, @Req() req: AuthRequest) {\n    return this.userService.editUser(User, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreatedAt\n                            \n                            \n                                id\n                            \n                            \n                                phonenum\n                            \n                            \n                                UpdatedAt\n                            \n                            \n                                username\n                            \n                            \n                                verfied\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CreatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phonenum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verfied\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module to Setup User Logic to get their userData or change Password\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n/**\n * Module to Setup User Logic to get their userData or change Password\n */\n@Module({\n  providers: [UserService],\n  controllers: [UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Userservice service to handle user related CRUD\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postgre: PrismaService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postgre\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(User: EditUser, dbuser: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dbuser\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { EditUser, UserDTO } from 'src/Typings';\nimport * as argon from 'argon2';\n\n/**\n * Userservice service to handle user related CRUD\n */\n@Injectable()\nexport class UserService {\n  constructor(private postgre: PrismaService, private config: ConfigService) {}\n\n  /**\n   *\n   * @param User @type  {EditUser}\n   * @param dbuser @type {UserDTO}\n   * @returns\n   */\n  async editUser(User: EditUser, dbuser: UserDTO) {\n    /**\n     * hash password from request payload if pas exisit\n     * update using postgres prisma ORM\n     */\n    if (User.password) {\n      const hash = await argon.hash(User.password);\n      delete User.password;\n      const user = await this.postgre.user.update({\n        where: {\n          id: dbuser.id,\n        },\n        data: {\n          ...User,\n          password: hash,\n        },\n      });\n      delete user.password;\n      return user;\n    } else {\n      const user = await this.postgre.user.update({\n        where: {\n          id: dbuser.id,\n        },\n        data: {\n          ...User,\n        },\n      });\n      delete user.password;\n      return user;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            AuthLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            AuthSignup\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            EditUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            Phnum\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/JwtStrategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/requestLog.ts\n            \n            injectable\n            LogRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/otp/otp.service.ts\n            \n            injectable\n            OtpService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            interface\n            AuthRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @prisma/client : ^4.3.1\n        \n            @types/cache-manager-redis-store : ^2.0.1\n        \n            @types/nodemailer : ^6.4.6\n        \n            @types/passport-jwt : ^3.0.6\n        \n            @types/passport-local : ^1.0.34\n        \n            argon2 : ^0.29.1\n        \n            cache-manager : ^4.1.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            handlebars : ^4.7.7\n        \n            nodemailer : ^6.7.8\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prisma : ^4.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            twilio : ^4.8.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApp where I developed Backend for Kawach Hackathon.\nStack used\n\nPrisma - for Postgres ORM\nreddis - Cache secondary storage\nDocker - to host and run postgres [locally only] railway for hosting cloud postgres\nNestJS(express-TS) - backend framework\npython - api testing\nTypescript\nPassportJs - Auth and jwt management\nTwillio - SMS messaging\n\nHow did it Go\n\nI used Compose Docs for generating the documentation and i am serving it over /docs route of server\nPrisma well i used to maintain all my db works and i guess i am in love with it 🥰 , Prisma ORM is flexible for me to setup relations easily and manage creating via npx prisma migrate dev and moniter my database from npx prisma studio\ni am maintaining several tables and several many to many relations from dbs. Got few tables with infor prefetched from national cyber forensics cordination centre and other tables which has demand data about our current users prisma ORM manages them for me\nPostgres was awesome to work with rn as i was currently using Prisma it doesnt make sense for me as it is Mysql or Postgres\nDocker i am using to run my postgres instance on port 5434 on locally and on railway for cloud\nRunning Redis instance on docker for OTP support\n\nPending tasks\n\nLay pipelines for 6 types of fraud detection\ntrigger ml models\nquery tables and calculate stats of an entity\n\n##Dependencies and Architecture\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\nAppModule -->\n\nOtpModule->AppModule\n\n\n\n\n\nOtpService \n\nOtpService \n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
