var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.227,1,1.881]],["body/controllers/AppController.html",[0,1.885,1,2.89,2,1.625,3,0.385,4,0.385,5,0.326,6,2.981,7,2.566,8,0.038,9,0.653,10,1.551,11,5.385,12,5.385,13,1.885,14,0.935,15,3.611,16,1.551,17,3.82,18,3.611,19,2.566,20,0.385,21,0.653,22,0.385,23,0.022,24,1.625,25,3.611,26,3.611,27,3.611,28,3.611,29,3.611,30,1.471,31,3.611,32,3.611,33,2.981,34,0.028,35,0.028]],["title/modules/AppModule.html",[36,1.009,37,1.881]],["body/modules/AppModule.html",[1,2.432,2,1.463,3,0.232,4,0.232,5,0.196,8,0.038,10,0.729,14,0.439,16,0.729,19,1.545,20,0.59,21,0.393,22,0.232,23,0.013,30,0.886,34,0.02,35,0.02,36,1.09,37,3.583,38,0.886,39,1.201,40,1.795,41,1.795,42,1.795,43,2.698,44,2.421,45,2.698,46,2.698,47,2.698,48,1.792,49,1.622,50,1.085,51,2.175,52,0.661,53,3.251,54,2.31,55,1.808,56,3.251,57,3.818,58,3.251,59,1.808,60,2.684,61,2.175,62,3.251,63,4.321,64,2.175,65,3.251,66,3.251,67,0.803,68,0.803,69,0.439,70,0.729,71,2.175,72,2.175,73,3.251,74,2.175,75,1.085,76,2.175,77,1.358,78,2.175,79,2.175,80,2.175,81,2.175,82,3.251,83,1.545,84,1.545,85,2.031,86,2.31,87,0.886,88,2.175,89,2.175,90,2.175,91,2.175,92,3.251,93,3.251,94,2.175,95,0.803,96,2.175,97,1.795,98,2.175,99,2.175,100,2.175,101,2.175,102,1.795,103,2.175,104,1.795,105,2.175,106,2.175,107,2.175,108,1.545,109,2.175]],["title/injectables/AppService.html",[47,1.675,110,0.609]],["body/injectables/AppService.html",[3,0.469,4,0.469,5,0.398,8,0.036,20,0.469,21,0.796,22,0.469,23,0.027,34,0.032,35,0.032,47,2.91,110,1.057,111,1.795,112,3.638]],["title/controllers/AuthController.html",[0,1.227,113,1.881]],["body/controllers/AuthController.html",[0,1.563,2,0.955,3,0.226,4,0.226,5,0.192,7,1.508,8,0.038,9,0.383,10,1.07,13,1.864,14,0.925,16,1.534,20,0.409,21,0.383,22,0.226,23,0.013,24,2.06,34,0.02,35,0.02,52,0.645,67,1.69,68,1.69,69,0.925,70,1.534,113,1.994,114,1.752,115,1.508,116,3.192,117,2.635,118,3.192,119,3.192,120,4.268,121,3.192,122,3.192,123,3.192,124,4.577,125,3.192,126,3.192,127,3.192,128,2.122,129,1.576,130,3.192,131,2.122,132,2.774,133,3.647,134,2.122,135,1.739,136,3.192,137,2.122,138,2.122,139,1.576,140,3.192,141,2.122,142,2.122,143,2.091,144,3.192,145,2.122,146,3.192,147,2.635,148,3.192,149,3.969,150,2.122,151,2.122,152,2.397,153,3.192,154,2.122,155,1.994,156,1.752,157,1.326,158,1.915,159,1.752,160,2.122,161,1.326,162,2.122,163,2.122,164,2.122,165,2.122,166,2.122,167,2.122,168,2.122,169,2.122,170,2.122,171,2.122,172,2.122,173,2.122]],["title/classes/AuthLogin.html",[23,0.019,135,1.227]],["body/classes/AuthLogin.html",[3,0.339,4,0.339,5,0.287,8,0.038,9,0.575,13,1.734,14,0.86,20,0.339,22,0.546,23,0.033,34,0.026,35,0.026,69,0.86,95,1.893,129,2.031,135,1.955,139,1.175,143,2.355,174,1.587,175,1.769,176,1.734,177,2.26,178,3.181,179,2.26,180,3.181,181,1.987,182,2.972,183,2.85,184,1.987,185,2.972,186,1.587,187,2.998,188,1.587,189,1.175,190,1.587,191,2.368,192,1.296]],["title/modules/AuthModule.html",[36,1.009,43,1.675]],["body/modules/AuthModule.html",[2,2.18,3,0.296,4,0.296,5,0.251,8,0.038,20,0.589,21,0.502,22,0.296,23,0.017,30,1.132,34,0.024,35,0.024,36,1.853,38,1.823,39,1.434,43,3.164,44,2.635,49,1.937,50,1.387,52,0.845,59,2.488,60,3.205,87,1.132,113,2.795,158,2.635,159,2.294,193,2.294,194,2.779,195,2.294,196,3.013,197,2.779,198,3.882,199,3.882,200,3.882,201,2.425,202,3.882,203,3.882,204,2.779,205,2.779,206,2.294,207,2.294,208,2.779,209,2.779,210,2.294,211,2.779,212,2.779,213,2.779,214,2.779,215,2.779,216,1.974]],["title/injectables/AuthService.html",[110,0.609,158,1.503]],["body/injectables/AuthService.html",[0,0.745,3,0.114,4,0.114,5,0.096,8,0.038,9,0.193,10,0.613,14,0.707,16,1.254,17,1.51,20,0.47,21,0.193,22,0.114,23,0.007,24,1.443,34,0.011,35,0.011,48,1.292,52,0.324,55,0.593,67,1.292,68,1.292,69,0.707,70,1.173,75,0.532,83,2.278,84,0.757,85,2.186,86,1.299,87,1.16,95,1.382,104,1.51,110,0.37,111,0.434,115,1.299,129,1.292,132,1.336,133,3.041,135,1.16,139,1.052,143,1.425,149,0.88,152,2.186,155,3.01,157,0.666,158,0.913,189,0.887,191,0.593,201,1.142,206,0.88,207,0.88,217,0.88,218,1.829,219,1.829,220,1.829,221,1.829,222,1.829,223,1.299,224,2.003,225,1.829,226,1.829,227,1.829,228,3.058,229,3.206,230,1.829,231,3.499,232,3.499,233,2.849,234,1.829,235,1.829,236,2.68,237,1.829,238,1.829,239,1.829,240,1.829,241,1.829,242,0.88,243,1.584,244,2.402,245,2.402,246,1.066,247,1.51,248,1.829,249,1.066,250,1.829,251,2.351,252,1.51,253,1.829,254,1.829,255,1.829,256,1.829,257,2.521,258,3.743,259,1.829,260,1.066,261,1.829,262,1.829,263,1.829,264,1.829,265,1.066,266,1.829,267,1.829,268,2.278,269,1.829,270,1.066,271,1.299,272,1.829,273,1.51,274,1.829,275,2.351,276,1.829,277,1.51,278,1.829,279,1.829,280,1.829,281,1.017,282,1.829,283,1.066,284,1.829,285,1.829,286,1.829,287,1.066,288,1.066,289,1.066,290,0.88,291,0.757,292,1.066,293,1.066,294,1.066,295,1.066,296,1.066,297,1.066,298,1.066,299,1.066,300,1.066,301,1.066,302,1.066,303,2.003,304,1.066,305,2.58,306,2.68,307,1.066,308,0.88,309,1.066,310,0.88,311,1.066,312,1.066,313,2.402,314,1.066,315,1.066,316,1.066,317,1.829,318,1.066,319,3.95,320,2.806,321,2.849,322,1.066,323,1.066,324,1.066,325,1.066,326,2.402,327,2.402,328,1.829,329,1.066,330,1.066,331,1.066,332,1.066,333,1.066,334,1.066,335,1.829,336,1.066,337,1.066,338,1.066,339,1.066,340,1.066,341,1.066,342,2.402,343,1.066,344,1.066,345,1.066,346,1.066,347,1.066,348,1.066,349,1.066,350,0.88,351,0.88,352,1.066,353,1.829,354,1.066,355,1.066,356,1.066]],["title/classes/AuthSignup.html",[23,0.019,139,1.112]],["body/classes/AuthSignup.html",[3,0.316,4,0.316,5,0.268,8,0.037,9,0.536,13,1.887,14,1.006,20,0.316,22,0.531,23,0.032,34,0.025,35,0.025,69,0.936,95,1.84,129,1.99,135,2.125,139,1.5,143,2.348,174,1.48,175,1.649,176,1.654,177,2.886,179,2.107,181,1.853,182,2.901,183,2.77,184,1.853,185,2.901,186,1.48,187,2.893,188,2.027,189,1.71,190,1.48,191,2.77,192,1.208,357,2.966,358,2.966,359,4.061,360,2.966,361,2.966]],["title/classes/CreateBookmarkDto.html",[23,0.019,362,2.14]],["body/classes/CreateBookmarkDto.html",[3,0.375,4,0.375,5,0.318,8,0.037,9,0.637,13,2.056,14,1.02,20,0.375,22,0.375,23,0.028,34,0.028,35,0.028,52,1.535,69,1.02,70,1.527,143,2.305,174,1.759,176,1.856,177,3.237,182,2.807,183,2.533,185,2.967,186,1.759,362,3.237,363,2.909,364,5.048,365,5.048,366,2.909,367,3.525,368,3.525,369,3.525]],["title/classes/EditUser.html",[23,0.019,192,1.227]],["body/classes/EditUser.html",[3,0.327,4,0.327,5,0.277,8,0.038,9,0.555,13,1.92,14,0.953,20,0.327,22,0.538,23,0.033,34,0.026,35,0.026,69,0.953,95,1.866,129,2.01,135,1.693,139,1.134,143,2.363,174,1.532,175,1.707,176,1.693,181,1.917,182,2.936,183,2.81,184,1.917,185,2.936,186,1.532,187,2.945,188,1.532,189,1.134,190,1.532,191,2.81,192,1.693,366,3.432,370,3.07,371,3.07,372,3.07,373,3.07]],["title/injectables/JwtStrategy.html",[110,0.609,196,1.675]],["body/injectables/JwtStrategy.html",[3,0.314,4,0.314,5,0.266,8,0.038,9,0.532,10,1.355,14,0.817,16,0.987,20,0.554,21,0.532,22,0.314,23,0.018,24,1.326,34,0.025,35,0.025,48,1.834,67,1.493,68,1.493,69,1.004,70,1.355,75,1.47,110,0.817,111,1.2,152,1.84,188,1.47,189,1.088,190,1.47,196,2.248,224,1.84,228,1.84,236,2.566,243,2.762,257,2.248,281,2.566,291,2.093,303,1.84,305,1.638,306,1.638,350,2.432,351,2.432,374,2.432,375,3.337,376,3.337,377,2.946,378,4.043,379,4.043,380,2.946,381,2.432,382,2.946,383,2.093,384,2.946,385,2.946,386,2.432,387,2.946,388,2.946,389,2.946,390,2.946,391,2.946,392,2.946,393,2.432,394,2.946,395,2.432,396,2.432]],["title/injectables/LogRequest.html",[77,1.881,110,0.609]],["body/injectables/LogRequest.html",[3,0.315,4,0.315,5,0.267,8,0.038,9,0.534,10,1.358,14,0.597,16,0.991,19,2.1,20,0.432,21,0.534,22,0.315,23,0.018,34,0.025,35,0.025,52,0.899,55,2.766,57,3.345,67,1.092,68,1.092,69,0.597,70,0.991,77,2.531,108,2.1,110,0.819,111,1.204,117,3.345,305,2.253,308,2.44,397,2.44,398,4.052,399,4.052,400,4.052,401,4.052,402,4.052,403,4.052,404,4.052,405,4.974,406,4.974,407,4.974,408,4.974,409,2.956,410,3.345,411,4.052,412,1.847,413,2.956,414,4.623,415,4.623,416,2.956,417,2.956,418,2.956,419,2.956,420,2.956,421,2.956,422,2.956]],["title/modules/OtpModule.html",[36,1.009,44,1.503]],["body/modules/OtpModule.html",[3,0.386,4,0.386,5,0.327,8,0.037,20,0.545,21,0.655,22,0.386,23,0.022,30,1.477,34,0.029,35,0.029,36,1.555,38,1.477,39,1.714,44,2.892,49,2.315,50,1.809,59,2.58,87,2.463,216,3.296,423,2.993,424,2.993,425,2.993,426,3.626,427,3.296,428,3.626,429,3.626]],["title/injectables/OtpService.html",[87,1.227,110,0.609]],["body/injectables/OtpService.html",[3,0.308,4,0.308,5,0.261,8,0.038,9,0.522,10,1.336,14,0.923,16,0.968,20,0.487,21,0.522,22,0.308,23,0.018,24,1.3,34,0.025,35,0.025,67,1.473,68,1.473,69,0.923,70,1.336,75,1.441,87,1.624,110,0.806,111,1.176,129,1.819,132,1.606,133,2.833,143,1.86,152,2.853,155,2.853,161,1.804,176,1.624,189,1.067,236,2.54,243,2.972,303,2.853,305,2.54,306,1.606,320,2.052,430,2.384,431,4.567,432,3.988,433,2.888,434,3.988,435,3.988,436,2.888,437,4.066,438,2.888,439,2.888,440,2.888,441,3.988,442,2.888,443,2.888,444,2.888,445,2.888,446,2.888,447,2.888,448,2.888,449,2.888,450,2.888,451,2.888]],["title/classes/Phnum.html",[23,0.019,129,1.112]],["body/classes/Phnum.html",[3,0.352,4,0.352,5,0.298,8,0.037,9,0.596,13,1.344,14,0.667,20,0.352,22,0.554,23,0.033,34,0.027,35,0.027,69,0.667,95,1.612,129,2.094,135,1.777,139,1.219,143,2.344,174,1.647,175,1.835,176,1.777,179,2.345,181,2.061,182,3.008,183,2.893,184,2.061,185,3.008,186,1.647,187,3.054,188,1.647,189,1.219,190,1.647,191,2.426,192,1.344,452,3.3]],["title/modules/PrismaModule.html",[36,1.009,45,1.675]],["body/modules/PrismaModule.html",[3,0.353,4,0.353,5,0.299,8,0.037,20,0.466,21,0.599,22,0.353,23,0.02,30,1.349,34,0.027,35,0.027,36,1.746,38,1.995,39,1.616,45,3.155,48,2.205,49,2.183,50,1.653,52,1.007,59,2.432,210,3.611,216,3.108,223,3.108,281,2.897,427,3.108,453,2.734,454,2.734,455,3.312,456,3.312,457,4.374,458,4.374,459,4.374,460,4.374,461,4.374,462,3.312]],["title/injectables/PrismaService.html",[48,1.112,110,0.609]],["body/injectables/PrismaService.html",[3,0.348,4,0.348,5,0.295,8,0.038,9,0.59,10,1.452,14,0.875,16,1.094,20,0.518,21,0.59,22,0.348,23,0.02,34,0.027,35,0.027,48,1.6,52,0.992,67,1.205,68,1.205,69,0.659,70,1.094,75,1.628,108,2.318,110,0.875,111,1.329,188,2.161,189,1.205,190,1.628,224,2.038,236,2.703,243,2.88,306,1.815,376,3.575,463,2.694,464,4.331,465,5.39,466,5.54,467,3.263,468,3.263,469,2.694,470,3.263,471,2.694,472,3.263,473,3.263,474,3.263]],["title/controllers/UserController.html",[0,1.227,475,1.881]],["body/controllers/UserController.html",[0,1.819,2,1.247,3,0.295,4,0.295,5,0.25,7,1.968,8,0.038,9,0.501,10,1.298,13,1.578,14,0.783,16,1.298,20,0.542,21,0.501,22,0.295,23,0.017,24,1.744,34,0.024,35,0.024,52,0.842,55,3.011,67,1.431,68,1.431,69,0.783,70,1.298,95,1.431,132,1.54,139,1.023,156,2.287,157,1.73,161,1.73,192,1.97,257,2.831,383,1.968,410,4.469,412,1.73,475,2.42,476,2.287,477,3.874,478,3.874,479,3.198,480,3.198,481,3.198,482,3.874,483,3.874,484,2.77,485,3.874,486,2.77,487,2.77,488,3.874,489,2.77,490,2.77,491,2.77,492,2.229,493,2.287,494,2.77,495,2.77,496,2.77,497,3.874,498,2.77,499,2.77]],["title/modules/UserModule.html",[36,1.009,46,1.675]],["body/modules/UserModule.html",[2,2.014,3,0.365,4,0.365,5,0.309,8,0.037,20,0.531,21,0.62,22,0.365,23,0.021,30,1.397,34,0.028,35,0.028,36,1.769,38,1.397,39,1.653,46,3.123,49,2.233,50,1.711,52,1.042,59,2.488,95,1.653,251,3.693,257,2.488,475,3.111,479,3.693,480,3.693,481,3.693,492,2.803,493,2.83,500,2.83,501,2.83,502,3.428,503,3.693,504,4.474,505,3.428]],["title/injectables/UserService.html",[110,0.609,492,1.503]],["body/injectables/UserService.html",[3,0.291,4,0.291,5,0.247,8,0.038,9,0.494,10,1.287,14,0.776,16,0.917,20,0.54,21,0.494,22,0.291,23,0.017,24,1.728,34,0.024,35,0.024,48,1.777,67,1.418,68,1.418,69,0.776,70,1.287,75,1.365,95,1.01,110,0.776,111,1.114,157,1.709,161,1.709,189,1.01,192,2.14,224,2.771,236,2.467,242,2.258,243,2.675,247,3.17,257,3,268,1.944,275,3.17,290,2.258,291,1.944,303,1.709,305,2.467,306,2.467,310,3.17,381,2.258,393,3.17,395,3.662,396,3.971,492,1.916,506,2.258,507,2.736,508,3.84,509,4.437,510,2.736,511,2.736,512,3.84,513,3.84]],["title/coverage.html",[514,3.388]],["body/coverage.html",[0,1.913,1,1.904,5,0.275,6,2.516,8,0.037,23,0.032,34,0.025,35,0.025,47,1.695,48,1.126,69,0.616,77,1.904,87,1.242,110,1.123,112,2.516,113,1.904,114,2.516,129,1.126,135,1.242,139,1.126,158,1.521,175,2.801,192,1.242,196,1.695,217,2.516,320,2.166,362,2.166,363,2.516,374,2.516,397,2.516,430,2.516,463,2.516,475,1.904,476,2.516,492,1.521,506,2.516,514,2.516,515,2.516,516,3.048,517,3.048,518,5.794,519,5.038,520,3.048,521,4.697,522,3.048,523,3.048,524,4.697,525,3.048,526,3.048,527,3.048,528,2.516,529,3.048,530,2.516,531,3.048,532,3.048,533,3.048,534,3.048,535,4.138,536,3.048,537,3.048]],["title/dependencies.html",[39,1.337,538,2.079]],["body/dependencies.html",[8,0.038,21,0.577,23,0.026,34,0.026,35,0.026,39,1.179,83,3.033,84,3.416,85,2.666,86,3.033,186,1.593,201,1.994,228,2.666,268,2.268,281,1.775,383,2.268,386,3.969,412,1.994,437,2.635,469,2.635,539,3.192,540,3.192,541,5.134,542,3.192,543,3.192,544,4.268,545,3.192,546,3.192,547,3.192,548,3.192,549,4.268,550,3.192,551,4.268,552,3.192,553,3.192,554,3.192,555,3.192,556,3.192,557,3.192,558,3.192,559,3.192,560,3.192,561,3.192,562,3.192,563,3.192,564,3.192,565,3.192,566,3.192,567,3.192,568,3.192,569,3.192,570,3.192,571,3.192,572,3.192,573,3.192]],["title/miscellaneous/functions.html",[574,2.079,575,2.989]],["body/miscellaneous/functions.html",[8,0.032,9,0.777,30,1.751,34,0.032,35,0.032,54,3.055,55,2.391,132,2.391,271,3.055,375,3.549,427,3.055,528,3.549,530,4.559,574,3.549,575,3.549,576,4.3,577,4.3,578,3.549,579,4.3,580,4.3,581,4.3,582,3.549]],["title/index.html",[9,0.455,583,2.518,584,2.518]],["body/index.html",[8,0.033,33,3.36,34,0.025,35,0.025,39,1.099,54,2.115,85,1.859,97,2.457,102,2.457,115,2.115,147,2.457,155,1.859,201,2.543,223,3.711,228,1.859,252,2.457,271,2.892,277,2.457,281,3.07,412,1.859,471,2.457,503,2.457,515,2.457,578,2.457,582,2.457,585,2.976,586,4.071,587,2.976,588,2.976,589,2.976,590,4.988,591,4.988,592,4.071,593,2.976,594,2.976,595,2.976,596,2.976,597,2.976,598,2.976,599,4.071,600,2.976,601,2.976,602,2.976,603,2.976,604,2.976,605,2.976,606,4.071,607,2.976,608,4.071,609,4.071,610,2.976,611,2.976,612,2.976,613,2.976,614,2.976,615,2.976,616,2.976,617,2.976,618,2.976,619,2.976,620,2.976,621,4.071,622,2.976,623,2.976,624,2.976,625,2.976,626,2.976,627,2.976,628,2.976,629,2.976,630,2.976,631,2.976,632,2.976,633,2.976,634,2.976,635,2.976,636,2.976,637,4.071,638,2.976,639,2.976,640,2.976,641,2.976,642,2.457,643,2.976]],["title/modules.html",[38,1.672]],["body/modules.html",[8,0.031,34,0.031,35,0.031,37,2.622,38,1.71,43,2.334,44,2.094,45,2.334,46,2.334,642,4.802,644,5.817,645,5.817,646,5.817]],["title/overview.html",[647,3.388]],["body/overview.html",[2,1.353,8,0.037,30,1.225,34,0.025,35,0.025,37,3.719,38,1.225,39,1.514,40,2.482,41,2.482,42,2.482,43,3.177,44,2.762,45,3.008,46,2.915,47,2.594,48,2.081,49,2.045,50,1.5,87,2.255,111,1.225,158,2.327,174,1.5,193,2.482,195,2.482,196,2.594,423,2.482,424,2.482,425,2.482,453,2.482,454,2.482,492,2.327,500,2.482,501,2.482,647,2.482,648,4.099,649,3.007,650,3.007]],["title/properties.html",[176,1.475,538,2.079]],["body/properties.html",[8,0.037,34,0.033,35,0.033,52,1.374,176,1.841,273,3.731,651,4.52,652,4.52,653,4.52,654,4.52]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":651,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["0.29.1",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["1.0.0",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["1.0.34",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["1.ec2.cloud.redislabs.com",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["1/1",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["1000000",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["1200",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["15m",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["18258",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["18258.c305.ap",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["1d",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["2.0.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":649,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["4.0.0",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":648,"title":{},"body":{"overview.html":{}}}],["50",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["5434",{"_index":638,"title":{},"body":{"index.html":{}}}],["6.4.6",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["6.7.8",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":650,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["accountsid",{"_index":439,"title":{},"body":{"injectables/OtpService.html":{}}}],["already",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["analysis",{"_index":402,"title":{},"body":{"injectables/LogRequest.html":{}}}],["api",{"_index":596,"title":{},"body":{"index.html":{}}}],["app",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app/app.controller",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.service",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{}}}],["appmodule",{"_index":37,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":611,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":47,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architechture",{"_index":587,"title":{},"body":{"index.html":{}}}],["architecture",{"_index":643,"title":{},"body":{"index.html":{}}}],["argon",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["argon.hash(body.password",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(user.password",{"_index":511,"title":{},"body":{"injectables/UserService.html":{}}}],["argon.verify(user.password",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["async",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["auth.controller",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":113,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":588,"title":{},"body":{"index.html":{}}}],["authguard",{"_index":491,"title":{},"body":{"controllers/UserController.html":{}}}],["authlogin",{"_index":135,"title":{"classes/AuthLogin.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"coverage.html":{}}}],["authlogin:12",{"_index":361,"title":{},"body":{"classes/AuthSignup.html":{}}}],["authlogin:15",{"_index":360,"title":{},"body":{"classes/AuthSignup.html":{}}}],["authmodule",{"_index":43,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":654,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":158,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsignup",{"_index":139,"title":{"classes/AuthSignup.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["authtoken",{"_index":441,"title":{},"body":{"injectables/OtpService.html":{}}}],["available",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{}}}],["await",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["awesome",{"_index":627,"title":{},"body":{"index.html":{}}}],["backend",{"_index":593,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":413,"title":{},"body":{"injectables/LogRequest.html":{}}}],["basicroute",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["better",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["body('email",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('otp",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.phnum",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["body.username",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":646,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":644,"title":{},"body":{"modules.html":{}}}],["cacha_manager",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["cache",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemanager",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["cacheotp",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["cases",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["change",{"_index":481,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["class",{"_index":23,"title":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":174,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_otpmodule",{"_index":423,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_exports",{"_index":424,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_providers",{"_index":425,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":453,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":454,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":455,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_usermodule",{"_index":500,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":501,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["compose",{"_index":601,"title":{},"body":{"index.html":{}}}],["config",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["config.get('database_url",{"_index":473,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":391,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["configservice.get('twilio_account_sid",{"_index":440,"title":{},"body":{"injectables/OtpService.html":{}}}],["configservice.get('twilio_auth_token",{"_index":442,"title":{},"body":{"injectables/OtpService.html":{}}}],["configure",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["configuring",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":458,"title":{},"body":{"modules/PrismaModule.html":{}}}],["console.log('here",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`\"${originalurl",{"_index":417,"title":{},"body":{"injectables/LogRequest.html":{}}}],["console.log(body.phnum",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(phonenum",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(res",{"_index":421,"title":{},"body":{"injectables/LogRequest.html":{}}}],["const",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":189,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["constructor(config",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(configservice",{"_index":433,"title":{},"body":{"injectables/OtpService.html":{}}}],["constructor(postgre",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["construstor",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logrequest).forroutes",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('user",{"_index":495,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":514,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createbookmarkdto",{"_index":362,"title":{"classes/CreateBookmarkDto.html":{}},"body":{"classes/CreateBookmarkDto.html":{},"coverage.html":{}}}],["created",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["creating",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["crimeapp",{"_index":449,"title":{},"body":{"injectables/OtpService.html":{}}}],["currently",{"_index":630,"title":{},"body":{"index.html":{}}}],["data",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["database",{"_index":625,"title":{},"body":{"index.html":{}}}],["datasources",{"_index":470,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":471,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["dbuser",{"_index":509,"title":{},"body":{"injectables/UserService.html":{}}}],["dbuser.id",{"_index":513,"title":{},"body":{"injectables/UserService.html":{}}}],["debugging",{"_index":401,"title":{},"body":{"injectables/LogRequest.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{}}}],["define",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":395,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["dependecies",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{}}}],["dependencies",{"_index":39,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateBookmarkDto.html":{},"injectables/LogRequest.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"properties.html":{}}}],["designed",{"_index":398,"title":{},"body":{"injectables/LogRequest.html":{}}}],["dev",{"_index":623,"title":{},"body":{"index.html":{}}}],["docker",{"_index":591,"title":{},"body":{"index.html":{}}}],["docs",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["docslink",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["documentation",{"_index":515,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["documentations",{"_index":610,"title":{},"body":{"index.html":{}}}],["doesnt",{"_index":631,"title":{},"body":{"index.html":{}}}],["done",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["easily",{"_index":619,"title":{},"body":{"index.html":{}}}],["edge",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["editmydata",{"_index":482,"title":{},"body":{"controllers/UserController.html":{}}}],["editmydata(@body",{"_index":498,"title":{},"body":{"controllers/UserController.html":{}}}],["editmydata(user",{"_index":484,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser",{"_index":192,"title":{"classes/EditUser.html":{}},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["edituser(user",{"_index":508,"title":{},"body":{"injectables/UserService.html":{}}}],["email",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["emailing",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["enterred",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["env",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["error",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.code",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["etc",{"_index":504,"title":{},"body":{"modules/UserModule.html":{}}}],["execute",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["expired",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiry",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exporting",{"_index":459,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{}}}],["express",{"_index":412,"title":{},"body":{"injectables/LogRequest.html":{},"controllers/UserController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":188,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{}}}],["extracting",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["extractjwt",{"_index":384,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":389,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["features",{"_index":586,"title":{},"body":{"index.html":{}}}],["figure",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["files",{"_index":604,"title":{},"body":{"index.html":{}}}],["finding",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["first",{"_index":599,"title":{},"body":{"index.html":{}}}],["flexible",{"_index":617,"title":{},"body":{"index.html":{}}}],["followed",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('session",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('wrong",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgot",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordlogic",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordlogic(phonenum",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpw",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpwd",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpwd(@body",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpwd(body",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["framework",{"_index":594,"title":{},"body":{"index.html":{}}}],["function",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":575,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generating",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["geotaging",{"_index":636,"title":{},"body":{"index.html":{}}}],["get('/hehe",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me",{"_index":488,"title":{},"body":{"controllers/UserController.html":{}}}],["getting",{"_index":583,"title":{"index.html":{}},"body":{}}],["global",{"_index":427,"title":{},"body":{"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"miscellaneous/functions.html":{}}}],["globally",{"_index":461,"title":{},"body":{"modules/PrismaModule.html":{}}}],["good",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["graph",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["guess",{"_index":614,"title":{},"body":{"index.html":{}}}],["handlebars",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["handled",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["headers",{"_index":414,"title":{},"body":{"injectables/LogRequest.html":{}}}],["hehe",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["help",{"_index":581,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":448,"title":{},"body":{"injectables/OtpService.html":{}}}],["heyy",{"_index":447,"title":{},"body":{"injectables/OtpService.html":{}}}],["host",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["html/js",{"_index":603,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(error",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.forbidden",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["icomming",{"_index":580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["id",{"_index":393,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["implementing",{"_index":464,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implements",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{},"injectables/PrismaService.html":{}}}],["import",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["incomming",{"_index":400,"title":{},"body":{"injectables/LogRequest.html":{}}}],["incorrect",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inherited",{"_index":359,"title":{},"body":{"classes/AuthSignup.html":{}}}],["init",{"_index":577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initiated",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["initiating",{"_index":457,"title":{},"body":{"modules/PrismaModule.html":{}}}],["inject",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(cache_manager",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{}}}],["inserting",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["instance",{"_index":637,"title":{},"body":{"index.html":{}}}],["internalservererrorexception",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["internalservererrorexception('failed",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["isemail",{"_index":181,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}}}],["isglobal",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":182,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}}}],["isnotempty()@isphonenumber('in",{"_index":179,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/Phnum.html":{}}}],["isoptional",{"_index":183,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}}}],["isoptional()@isphonenumber('in",{"_index":371,"title":{},"body":{"classes/EditUser.html":{}}}],["isphonenumber",{"_index":184,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}}}],["isphonenumber('in",{"_index":187,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}}}],["isstring",{"_index":185,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}}}],["isstring()@isnotempty",{"_index":177,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{}}}],["isstring()@isoptional",{"_index":366,"title":{},"body":{"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{}}}],["jobs",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify",{"_index":418,"title":{},"body":{"injectables/LogRequest.html":{}}}],["jwt",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["jwtfromrequest",{"_index":388,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign(userid",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":196,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["know",{"_index":635,"title":{},"body":{"index.html":{}}}],["learnt",{"_index":585,"title":{},"body":{"index.html":{}}}],["lets",{"_index":422,"title":{},"body":{"injectables/LogRequest.html":{}}}],["license",{"_index":652,"title":{},"body":{"properties.html":{}}}],["link",{"_index":364,"title":{},"body":{"classes/CreateBookmarkDto.html":{}}}],["literal",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":399,"title":{},"body":{"injectables/LogRequest.html":{}}}],["logging",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["logic",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{}}}],["login",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginlogic",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginlogic(body",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["logrequest",{"_index":77,"title":{"injectables/LogRequest.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{},"coverage.html":{}}}],["love",{"_index":615,"title":{},"body":{"index.html":{}}}],["mailmodule",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["mailservice",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["maintain",{"_index":612,"title":{},"body":{"index.html":{}}}],["make",{"_index":606,"title":{},"body":{"index.html":{}}}],["manage",{"_index":620,"title":{},"body":{"index.html":{}}}],["management",{"_index":598,"title":{},"body":{"index.html":{}}}],["manager",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["matching",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.floor(math.random",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["maybe",{"_index":634,"title":{},"body":{"index.html":{}}}],["message",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":415,"title":{},"body":{"injectables/LogRequest.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{}}}],["middlewareconsumer",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["migrate",{"_index":622,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":574,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":36,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":38,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["moniter",{"_index":624,"title":{},"body":{"index.html":{}}}],["mydata",{"_index":483,"title":{},"body":{"controllers/UserController.html":{}}}],["mydata(@req",{"_index":496,"title":{},"body":{"controllers/UserController.html":{}}}],["mydata(req",{"_index":487,"title":{},"body":{"controllers/UserController.html":{}}}],["mysql",{"_index":633,"title":{},"body":{"index.html":{}}}],["name",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["nestjs",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":428,"title":{},"body":{"modules/OtpModule.html":{}}}],["nestjs/common/enums",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/common/exceptions",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/config",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["nestjs/core",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["nestjs/passport",{"_index":383,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":411,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nestmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OtpService.html":{},"coverage.html":{}}}],["next",{"_index":407,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nextfunction",{"_index":408,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nodemailer",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["now",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["npx",{"_index":621,"title":{},"body":{"index.html":{}}}],["number",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{}}}],["object",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["onmoduleinit",{"_index":466,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateBookmarkDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["originalurl",{"_index":416,"title":{},"body":{"injectables/LogRequest.html":{}}}],["orm",{"_index":616,"title":{},"body":{"index.html":{}}}],["otp",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{},"index.html":{}}}],["otp.service",{"_index":429,"title":{},"body":{"modules/OtpModule.html":{}}}],["otp/otp.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["otp/otp.service",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["otpmodule",{"_index":44,"title":{"modules/OtpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules.html":{},"overview.html":{}}}],["otpsender",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["otpservice",{"_index":87,"title":{"injectables/OtpService.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["overview",{"_index":647,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":538,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["passport",{"_index":386,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportjs",{"_index":597,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":382,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":387,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["passwords",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":394,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phnum",{"_index":129,"title":{"classes/Phnum.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"coverage.html":{}}}],["phonenum",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["piplines",{"_index":579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["place",{"_index":600,"title":{},"body":{"index.html":{}}}],["port",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["post",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["post('/requestotp",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signin",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/verifyotp",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('edit",{"_index":485,"title":{},"body":{"controllers/UserController.html":{}}}],["postgre",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["postgres",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"index.html":{}}}],["posts",{"_index":480,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.service",{"_index":462,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":469,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":465,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":45,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":48,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/UserService.html":{}}}],["promise",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OtpService.html":{}}}],["properties",{"_index":176,"title":{"properties.html":{}},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"properties.html":{}}}],["provided",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["pwmatches",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["python",{"_index":595,"title":{},"body":{"index.html":{}}}],["qmvxege8cv0xsmddlkgezlo4u3b9rwwj",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["quering",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["random",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["reading",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["readonly",{"_index":438,"title":{},"body":{"injectables/OtpService.html":{}}}],["reddistore",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["redis",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["reflect",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["relations",{"_index":618,"title":{},"body":{"index.html":{}}}],["relationships",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["req",{"_index":410,"title":{},"body":{"injectables/LogRequest.html":{},"controllers/UserController.html":{}}}],["req.user",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["requests",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LogRequest.html":{}}}],["required",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{}}}],["res",{"_index":405,"title":{},"body":{"injectables/LogRequest.html":{}}}],["res.on('close",{"_index":419,"title":{},"body":{"injectables/LogRequest.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resp",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["response",{"_index":406,"title":{},"body":{"injectables/LogRequest.html":{}}}],["responses",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["respsent",{"_index":420,"title":{},"body":{"injectables/LogRequest.html":{}}}],["rest",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retrieved",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["rn",{"_index":629,"title":{},"body":{"index.html":{}}}],["root",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["route",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["routes",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["routs",{"_index":477,"title":{},"body":{"controllers/UserController.html":{}}}],["run",{"_index":592,"title":{},"body":{"index.html":{}}}],["running",{"_index":641,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved",{"_index":479,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["savedpostmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["secret",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretkey",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":390,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["send",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendotp",{"_index":432,"title":{},"body":{"injectables/OtpService.html":{}}}],["sendotp(otp",{"_index":435,"title":{},"body":{"injectables/OtpService.html":{}}}],["sense",{"_index":632,"title":{},"body":{"index.html":{}}}],["servce",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["serve",{"_index":608,"title":{},"body":{"index.html":{}}}],["service",{"_index":460,"title":{},"body":{"modules/PrismaModule.html":{}}}],["services",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["setup",{"_index":503,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["sha",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["signing",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@body",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(body",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["signuplogic",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["signuplogic(body",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["site",{"_index":607,"title":{},"body":{"index.html":{}}}],["smssent",{"_index":445,"title":{},"body":{"injectables/OtpService.html":{}}}],["smssent.sid",{"_index":451,"title":{},"body":{"injectables/OtpService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["south",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../main.ts",{"_index":576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:50",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:13",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.controller.ts:6",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.service.ts",{"_index":112,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:19",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:35",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:46",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:116",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:139",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:70",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:93",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwtstrategy.ts",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwtstrategy.ts:16",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwtstrategy.ts:8",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/mail/mail.service",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/requestlog.ts",{"_index":397,"title":{},"body":{"injectables/LogRequest.html":{},"coverage.html":{}}}],["src/middleware/requestlog.ts:9",{"_index":409,"title":{},"body":{"injectables/LogRequest.html":{}}}],["src/otp/otp.module",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/otp/otp.module.ts",{"_index":426,"title":{},"body":{"modules/OtpModule.html":{}}}],["src/otp/otp.service",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["src/otp/otp.service.ts",{"_index":430,"title":{},"body":{"injectables/OtpService.html":{},"coverage.html":{}}}],["src/otp/otp.service.ts:14",{"_index":436,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:7",{"_index":434,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":456,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":463,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:19",{"_index":468,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:9",{"_index":467,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/typings",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["src/typings/auth.ts",{"_index":175,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"coverage.html":{}}}],["src/typings/auth.ts:12",{"_index":180,"title":{},"body":{"classes/AuthLogin.html":{}}}],["src/typings/auth.ts:15",{"_index":178,"title":{},"body":{"classes/AuthLogin.html":{}}}],["src/typings/auth.ts:17",{"_index":357,"title":{},"body":{"classes/AuthSignup.html":{}}}],["src/typings/auth.ts:23",{"_index":358,"title":{},"body":{"classes/AuthSignup.html":{}}}],["src/typings/auth.ts:29",{"_index":372,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:32",{"_index":370,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:35",{"_index":373,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:41",{"_index":452,"title":{},"body":{"classes/Phnum.html":{}}}],["src/typings/saved.ts",{"_index":363,"title":{},"body":{"classes/CreateBookmarkDto.html":{},"coverage.html":{}}}],["src/typings/saved.ts:10",{"_index":367,"title":{},"body":{"classes/CreateBookmarkDto.html":{}}}],["src/typings/saved.ts:14",{"_index":368,"title":{},"body":{"classes/CreateBookmarkDto.html":{}}}],["src/typings/saved.ts:6",{"_index":369,"title":{},"body":{"classes/CreateBookmarkDto.html":{}}}],["src/user/user.controller.ts",{"_index":476,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:17",{"_index":489,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:22",{"_index":486,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":502,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":506,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:10",{"_index":510,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:7",{"_index":507,"title":{},"body":{"injectables/UserService.html":{}}}],["stack",{"_index":589,"title":{},"body":{"index.html":{}}}],["started",{"_index":584,"title":{"index.html":{}},"body":{}}],["statements",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":602,"title":{},"body":{"index.html":{}}}],["store",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["storing",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategy",{"_index":385,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{}}}],["struggle",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["studio",{"_index":626,"title":{},"body":{"index.html":{}}}],["sub",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subset",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["super",{"_index":190,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{}}}],["support",{"_index":642,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supprt",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["svg",{"_index":645,"title":{},"body":{"modules.html":{}}}],["table",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["taken",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["test",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["test(@body('email",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["test(email",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["testing",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["things",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["thinking",{"_index":605,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":474,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.forgotpasswordlogic(body.phnum",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.loginlogic(body",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signuplogic(body",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifylogic(otp",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cachemanager.del(phonenum",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cachemanager.get(phonenum",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cachemanager.set(phonenum",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.get('jwt_secret",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('twilio_phone_num",{"_index":450,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.jwt.signasync(payload",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtsign(user.id",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice.senduserconfirmation(otp",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.otpsender.sendotp(otp",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.user.create",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.user.findunique",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.user.update",{"_index":512,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":392,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.twilioclient",{"_index":443,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.twilioclient.messages.create",{"_index":446,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.userservice.edituser(user",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["tho",{"_index":640,"title":{},"body":{"index.html":{}}}],["throw",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["time",{"_index":639,"title":{},"body":{"index.html":{}}}],["title",{"_index":365,"title":{},"body":{"classes/CreateBookmarkDto.html":{}}}],["token",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["try",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogRequest.html":{}}}],["ttl",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["twilio",{"_index":437,"title":{},"body":{"injectables/OtpService.html":{},"dependencies.html":{}}}],["twilio(accountsid",{"_index":444,"title":{},"body":{"injectables/OtpService.html":{}}}],["twilioclient",{"_index":431,"title":{},"body":{"injectables/OtpService.html":{}}}],["type",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["types/cache",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":582,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["unknown",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":653,"title":{},"body":{"properties.html":{}}}],["url",{"_index":472,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":403,"title":{},"body":{"injectables/LogRequest.html":{}}}],["use(req",{"_index":404,"title":{},"body":{"injectables/LogRequest.html":{}}}],["used",{"_index":590,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":490,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":494,"title":{},"body":{"controllers/UserController.html":{}}}],["user",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":505,"title":{},"body":{"modules/UserModule.html":{}}}],["user.password",{"_index":396,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":493,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":475,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfo",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["usermodule",{"_index":46,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":191,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{}}}],["userservice",{"_index":492,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["validate",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/functions.html":{}}}],["validate(payload",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":186,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/CreateBookmarkDto.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"dependencies.html":{}}}],["values",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["verfied",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["verfifying",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["verfiyphno",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["verify",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifylogic",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifylogic(otp",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyotp",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyotp(otp",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["version",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{},"properties.html":{}}}],["via",{"_index":609,"title":{},"body":{"index.html":{}}}],["void",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/LogRequest.html":{}}}],["welcome_msg",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["well",{"_index":578,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["work",{"_index":628,"title":{},"body":{"index.html":{}}}],["works",{"_index":613,"title":{},"body":{"index.html":{}}}],["yes",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                basicRoute\n                            \n                            \n                                docsLink\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        basicRoute\n                        \n                    \n                \n            \n            \n                \nbasicRoute()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        docsLink\n                        \n                    \n                \n            \n            \n                \ndocsLink()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n@Controller('/')\nexport class AppController {\n  @Get()\n  basicRoute(): object {\n    return {\n      welcome_msg: 'GOOD Now struggle and figure out rest reading my docs',\n    };\n  }\n\n  @Get()\n  docsLink() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nAppModule -->\n\nOtpModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Root Of the APP with request logging middleware implemented\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OtpModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:50\n                \n            \n\n\n            \n                \n                    Configuring the middleware for routes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n} from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { LogRequest } from './middleware';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { OtpModule } from './otp/otp.module';\nimport * as ReddiStore from 'cache-manager-redis-store';\nimport { OtpService } from './otp/otp.service';\nimport { AppController } from './app/app.controller';\nimport { AppService } from './app/app.service';\n\n/**\n * Root Of the APP with request logging middleware implemented\n */\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    CacheModule.register({\n      store: ReddiStore,\n      password: 'qmvXege8CV0xSmddlkgEZlo4u3b9rWwJ',\n      host: 'redis-18258.c305.ap-south-1-1.ec2.cloud.redislabs.com',\n      port: 18258,\n      isGlobal: true,\n      ttl: 1200,\n    }),\n    AuthModule,\n    PrismaModule,\n    // MailModule,\n\n    UserModule,\n    OtpModule,\n    // SavedPostModule,\n  ],\n  providers: [PrismaService, AppService],\n  controllers: [AppController],\n})\nexport class AppModule implements NestModule {\n  /**\n   * Configuring the middleware for routes\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LogRequest).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                Controller to take all requests and send responses\n\n/Signup\n/Signin\n/verfiyphno\n/forgotpw\n/verifyotp\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ForgotPwd\n                            \n                            \n                                Login\n                            \n                            \n                                Signup\n                            \n                            \n                                test\n                            \n                            \n                                verifyOTP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ForgotPwd\n                        \n                    \n                \n            \n            \n                \nForgotPwd(body: Phnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/requestOtp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                Phnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Login\n                        \n                    \n                \n            \n            \n                \nLogin(body: AuthLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/Signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Signup\n                        \n                    \n                \n            \n            \n                \nSignup(body: AuthSignup)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/Signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthSignup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest(email?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/hehe')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:46\n                \n            \n\n\n            \n                \n                    Sample Testing Route\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyOTP\n                        \n                    \n                \n            \n            \n                \nverifyOTP(OTP: number, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/verifyOTP')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Get, Body } from '@nestjs/common';\nimport { AuthLogin, AuthSignup, Phnum } from 'src/Typings';\nimport { AuthService } from './auth.service';\n\n/**\n * Controller to take all requests and send responses\n *\n * - /Signup\n * - /Signin\n * - /verfiyphno\n * - /forgotpw\n * - /verifyotp\n */\n@Controller('auth')\nexport class AuthController {\n  constructor(private AuthService: AuthService) {}\n\n  @Post('/Signup')\n  Signup(@Body() body: AuthSignup): Promise {\n    return this.AuthService.signupLogic(body);\n  }\n\n  @Post('/Signin')\n  Login(@Body() body: AuthLogin): Promise {\n    return this.AuthService.loginLogic(body);\n  }\n\n  @Post('/requestOtp')\n  ForgotPwd(@Body() body: Phnum): Promise {\n    console.log(body.phnum);\n    return this.AuthService.forgotpasswordLogic(body.phnum);\n  }\n\n  @Post('/verifyOTP')\n  verifyOTP(\n    @Body('OTP') OTP: number,\n    @Body('email') email: string,\n  ): Promise {\n    return this.AuthService.verifyLogic(OTP, email);\n  }\n\n  /**\n   * Sample Testing Route\n   */\n  @Get('/hehe')\n  test(@Body('email') email?: string): string {\n    return 'hehe';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLogin.html":{"url":"classes/AuthLogin.html","title":"class - AuthLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nOtpModule\n\nOtpModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is where we define all dependecies and relationships for nestjs application graph\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OtpModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './JwtStrategy';\nimport { OtpService } from 'src/otp/otp.service';\nimport { OtpModule } from 'src/otp/otp.module';\n\n/**\n * Module is where we define all dependecies and relationships for nestjs application graph\n */\n@Module({\n  /**\n   * things that have to be injected into controllers\n   */\n  providers: [AuthService, JwtStrategy],\n\n  // the controllers in this module\n  controllers: [AuthController],\n\n  // Modules required for this module\n  imports: [JwtModule.register({}), OtpModule],\n\n  // the subset of providers that are provided by this module and should be available in other modules which import this module.\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Controller For Auth related Jobs\n\nPrismaService for inserting and QUering UserData from Postgres\nConfig Servce for extracting Values [Jwt Secret] from .env\nJwtService for Signing Jwt with UserID\nCACHA_MANAGER for redis supprt to store OTP with ttl\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotpasswordLogic\n                            \n                            \n                                    Async\n                                JwtSign\n                            \n                            \n                                    Async\n                                loginLogic\n                            \n                            \n                                    Async\n                                signupLogic\n                            \n                            \n                                    Async\n                                verifyLogic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postgre: PrismaService, config: ConfigService, jwt: JwtService, cachemanager: Cache, otpsender: OtpService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postgre\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cachemanager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpsender\n                                                  \n                                                        \n                                                                        OtpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        forgotpasswordLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotpasswordLogic(phonenum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:93\n                \n            \n\n\n            \n                \n                    Forgot PassWord Logic Generating Random OTP Followed By\nStoring it in Redis and Emailing the User His Otp\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phonenum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        JwtSign\n                        \n                    \n                \n            \n            \n                \n                    \n                    JwtSign(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:139\n                \n            \n\n\n            \n                \n                    Signing JWT with SecretKey with 15m expiry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginLogic(body: AuthLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    Finding User , Verfifying Password with Argon2 and signing Jwt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signupLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    signupLogic(body: AuthSignup)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    Using argon2 a better version of SHA to Hash the passwords\nand Creating User Object all edge cases are handled by Prisma and Nestjs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthSignup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyLogic(OTP: number, phonenum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n                    Verify Otp Logic Where OTP is retrieved From Redis and verfied\nreturns JWT\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phonenum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ForbiddenException,\n  Inject,\n  CACHE_MANAGER,\n} from '@nestjs/common';\nimport { AuthLogin, AuthSignup } from 'src/Typings';\nimport * as argon from 'argon2';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Cache } from 'cache-manager';\nimport {\n  HttpException,\n  InternalServerErrorException,\n} from '@nestjs/common/exceptions';\nimport { HttpStatus } from '@nestjs/common/enums';\nimport { OtpService } from 'src/otp/otp.service';\n// import { MailService } from 'src/mail/mail.service';\n\n/**\n * ### Controller For Auth related Jobs\n * @constructor construstor is initiated with 4 Services\n *  - PrismaService for inserting and QUering UserData from `Postgres`\n *  - Config Servce for extracting Values [Jwt Secret] from `.env`\n *  - JwtService for Signing `Jwt` with UserID\n *  - CACHA_MANAGER for redis supprt to store OTP with `ttl`\n */\n@Injectable()\nexport class AuthService {\n  constructor(\n    private postgre: PrismaService,\n    private config: ConfigService,\n    private jwt: JwtService,\n    @Inject(CACHE_MANAGER) private cachemanager: Cache, //\n    private otpsender: OtpService,\n  ) {}\n\n  /**\n   * Using argon2 a better version of SHA to Hash the passwords\n   * and Creating User Object all edge cases are handled by Prisma and Nestjs\n   */\n  async signupLogic(body: AuthSignup): Promise {\n    const hash = await argon.hash(body.password);\n    try {\n      const user = await this.postgre.user.create({\n        data: {\n          phnum: body.phnum,\n          password: hash,\n          username: body.username,\n        },\n      });\n      return {\n        Jwt: await this.JwtSign(user.id),\n      };\n    } catch (error) {\n      console.log('here', error.code);\n\n      if (error.code == 'P2002') {\n        throw new ForbiddenException('Credentials Already Taken');\n      } else {\n        throw new HttpException(error, HttpStatus.FORBIDDEN);\n      }\n    }\n  }\n\n  /**\n   * Finding User , Verfifying Password with Argon2 and signing Jwt\n   */\n  async loginLogic(body: AuthLogin): Promise {\n    const { phnum, password } = body;\n\n    const user = await this.postgre.user.findUnique({\n      where: {\n        phnum: phnum,\n      },\n    });\n    if (!user) {\n      throw new ForbiddenException('Credentials incorrect');\n    }\n    const pwMatches = await argon.verify(user.password, password);\n    if (!pwMatches) throw new ForbiddenException('Credentials incorrect');\n\n    return {\n      Jwt: await this.JwtSign(user.id),\n    };\n  }\n\n  /**\n   * Forgot PassWord Logic Generating Random OTP Followed By\n   * Storing it in Redis and Emailing the User His Otp\n   */\n  async forgotpasswordLogic(phonenum: string): Promise {\n    console.log(phonenum);\n    const user = await this.postgre.user.findUnique({\n      where: {\n        phnum: phonenum,\n      },\n    });\n    if (!user) {\n      throw new ForbiddenException('Credentials incorrect');\n    }\n    const OTP = Math.floor(Math.random() * 1000000);\n    await this.cachemanager.set(phonenum, OTP);\n    // await this.mailService.sendUserConfirmation(OTP, email);\n    const resp = await this.otpsender.sendotp(OTP, '+91' + phonenum);\n    if (!resp)\n      throw new InternalServerErrorException('Failed to execute request');\n    return { message: 'done' };\n  }\n\n  /**\n   * Verify Otp Logic Where OTP is retrieved From Redis and verfied\n   * returns JWT\n   */\n  async verifyLogic(OTP: number, phonenum: string): Promise {\n    const cacheotp = await this.cachemanager.get(phonenum);\n    if (!cacheotp) {\n      throw new ForbiddenException('Session Expired or Not created');\n    }\n    if (OTP == cacheotp) {\n      const user = await this.postgre.user.findUnique({\n        where: {\n          phnum: phonenum,\n        },\n      });\n      await this.cachemanager.del(phonenum);\n      return {\n        Jwt: await this.JwtSign(user.id),\n      };\n    } else {\n      throw new ForbiddenException('Wrong Otp Enterred');\n    }\n  }\n\n  /**\n   * Signing JWT with SecretKey with `15m` expiry\n   */\n  async JwtSign(userId: number): Promise {\n    const payload = {\n      sub: userId,\n    };\n    const secret = this.config.get('JWT_SECRET');\n    const token = await this.jwt.signAsync(payload, {\n      expiresIn: '1d',\n      secret: secret,\n    });\n    return token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthSignup.html":{"url":"classes/AuthSignup.html","title":"class - AuthSignup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthSignup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthLogin\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/Typings/auth.ts:17\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AuthLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthLogin:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AuthLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthLogin:12\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookmarkDto.html":{"url":"classes/CreateBookmarkDto.html","title":"class - CreateBookmarkDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookmarkDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/saved.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                link\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/saved.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        link\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/saved.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/saved.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\n\nexport class CreateBookmarkDto {\n  @IsString()\n  @IsNotEmpty()\n  title: string;\n\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @IsString()\n  @IsNotEmpty()\n  link: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/JwtStrategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/JwtStrategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/JwtStrategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(config: ConfigService, private prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: config.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: { sub: number }) {\n    const user = await this.prisma.user.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    });\n    delete user.password;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogRequest.html":{"url":"injectables/LogRequest.html","title":"injectable - LogRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/requestLog.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a Middleware is designed to log the incomming requests for debugging and analysis\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/requestLog.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\n\n/**\n * This is a Middleware is designed to log the incomming requests for debugging and analysis\n */\n@Injectable()\nexport class LogRequest implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    const { baseUrl, headers, method, originalUrl } = req;\n    console.log(`\"${originalUrl}\" - METHOD ${method}`);\n\n    // with headers ${JSON.stringify(\n    //   headers,\n    // )}\n\n    res.on('close', () => {\n      // const respSent = res;\n      // console.log(res, 'lets try');\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtpModule.html":{"url":"modules/OtpModule.html","title":"module - OtpModule","body":"\n                   \n\n\n\n\n    Modules\n    OtpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\n\nOtpService \n\nOtpService \n\n\n\nOtpModule\n\nOtpModule\n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/otp/otp.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OtpService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtpService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Global } from '@nestjs/common/decorators';\nimport { OtpService } from './otp.service';\n@Global()\n@Module({\n  providers: [OtpService],\n  exports: [OtpService],\n})\nexport class OtpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpService.html":{"url":"injectables/OtpService.html","title":"injectable - OtpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/otp.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                twilioClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendotp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/otp/otp.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendotp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendotp(OTP: number, phnum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/otp/otp.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phnum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        twilioClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Twilio\n\n                    \n                \n                    \n                        \n                                Defined in src/otp/otp.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Twilio } from 'twilio';\n\n@Injectable()\nexport class OtpService {\n  private twilioClient: Twilio;\n\n  constructor(private readonly configService: ConfigService) {\n    const accountSid = configService.get('TWILIO_ACCOUNT_SID');\n    const authToken = configService.get('TWILIO_AUTH_TOKEN');\n    this.twilioClient = new Twilio(accountSid, authToken);\n  }\n  async sendotp(OTP: number, phnum: string): Promise {\n    const smsSent = await this.twilioClient.messages.create({\n      to: phnum,\n      body: `Heyy here is your crimeapp otp ${OTP}`,\n      from: this.configService.get('TWILIO_PHONE_NUM'),\n    });\n    return !!smsSent.sid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Phnum.html":{"url":"classes/Phnum.html","title":"class - Phnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Phnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for initiating Prisma-Postgres Connection\nand exporting Prisma Service globally for it to get injected in all modules\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n/**\n * Module for initiating Prisma-Postgres Connection\n * and exporting Prisma Service globally for it to get injected in all modules\n */\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementing PrismaClient\n\n            \n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n/**\n * Implementing PrismaClient\n */\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n            \n                Description\n            \n            \n                Controller for User routs\n\nget UserInfo and Saved Posts\nChange Password\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                EditMyData\n                            \n                            \n                                MyData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        EditMyData\n                        \n                    \n                \n            \n            \n                \nEditMyData(User: EditUser, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MyData\n                        \n                    \n                \n            \n            \n                \nMyData(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UserService } from './user.service';\nimport { Request } from 'express';\nimport { AuthSignup, EditUser } from 'src/Typings';\n\n/**\n * Controller for User routs\n * - get UserInfo and Saved Posts\n * - Change Password\n */\n@UseGuards(AuthGuard('jwt'))\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  @Get('me')\n  MyData(@Req() req: Request) {\n    return req.user;\n  }\n\n  @Post('edit')\n  EditMyData(@Body() User: EditUser, @Req() req: Request) {\n    return this.userService.editUser(User, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module to Setup User Logic to get their Saved Posts etc or change Password\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n/**\n * Module to Setup User Logic to get their Saved Posts etc or change Password\n */\n@Module({\n  providers: [UserService],\n  controllers: [UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postgre: PrismaService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postgre\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(User: EditUser, dbuser: any)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dbuser\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { EditUser } from 'src/Typings';\nimport * as argon from 'argon2';\n@Injectable()\nexport class UserService {\n  constructor(private postgre: PrismaService, private config: ConfigService) {}\n\n  async editUser(User: EditUser, dbuser: any) {\n    if (User.password) {\n      const hash = await argon.hash(User.password);\n      delete User.password;\n      const user = await this.postgre.user.update({\n        where: {\n          id: dbuser.id,\n        },\n        data: {\n          ...User,\n          password: hash,\n        },\n      });\n      delete user.password;\n      return user;\n    } else {\n      const user = await this.postgre.user.update({\n        where: {\n          id: dbuser.id,\n        },\n        data: {\n          ...User,\n        },\n      });\n      delete user.password;\n      return user;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            AuthLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            AuthSignup\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            EditUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            Phnum\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Typings/saved.ts\n            \n            class\n            CreateBookmarkDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/JwtStrategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/middleware/requestLog.ts\n            \n            injectable\n            LogRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/otp/otp.service.ts\n            \n            injectable\n            OtpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @prisma/client : ^4.3.1\n        \n            @types/cache-manager-redis-store : ^2.0.1\n        \n            @types/nodemailer : ^6.4.6\n        \n            @types/passport-jwt : ^3.0.6\n        \n            @types/passport-local : ^1.0.34\n        \n            argon2 : ^0.29.1\n        \n            cache-manager : ^4.1.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            handlebars : ^4.7.7\n        \n            nodemailer : ^6.7.8\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prisma : ^4.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            twilio : ^4.8.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Init of Out APP\n\nwell i am using global piplines to validate icomming request Body with the help of typescript\n\n\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApp where i learnt Nestjs features , architechture and authentication.\nStack used\n\nPrisma - for Postgres\nDocker - to host and run postgres\nnestjs - backend framework\npython - api testing\nTypescript\nPassportJs - Auth and jwt management\n\nDocs how i used prisma and docker in first place\n\nI used Compose Docs for generating the documentation ; they are static html/js files so i was thinking to make a site and serve it via express where i will serve all the documentations of my Apps\nPrisma well i used to maintain all my db works and i guess i am in love with it 🥰 , Prisma ORM is flexible for me to setup relations easily and manage creating via npx prisma migrate dev and moniter my database from npx prisma studio\nPostgres was awesome to work with rn as i was currently using Prisma it doesnt make sense for me as it is Mysql or Postgres but maybe i will get to know with features like geotaging\nDocker i am using to run my postgres instance on port 5434 this is my first time tho\nRunning Redis instance on docker for OTP support\n\n##Dependencies and Architecture \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\nAppModule -->\n\nOtpModule->AppModule\n\n\n\n\n\nOtpService \n\nOtpService \n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
