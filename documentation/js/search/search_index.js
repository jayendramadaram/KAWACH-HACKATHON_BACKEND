var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.12,1,2.175]],["body/controllers/AppController.html",[0,1.762,1,3.421,2,1.749,3,0.336,4,0.336,5,0.249,6,3.467,7,2.711,8,0.029,9,0.963,10,5.205,11,2.591,12,5.205,13,3.829,14,4.195,15,3.421,16,5.205,17,0.53,18,1.762,19,5.989,20,1.621,21,0.824,22,4.124,23,1.205,24,3.421,25,0.336,26,0.698,27,0.336,28,0.017,29,1.503,30,4.124,31,4.124,32,4.124,33,4.124,34,4.124,35,1.892,36,4.124,37,4.124,38,4.124,39,0.022,40,0.022]],["title/modules/AppModule.html",[41,1.041,42,2.175]],["body/modules/AppModule.html",[1,2.821,2,1.523,3,0.196,4,0.196,5,0.259,8,0.029,9,0.562,11,1.787,14,3.5,15,3.345,18,0.815,21,0.481,23,0.704,25,0.509,26,0.408,27,0.196,28,0.01,35,1.105,39,0.015,40,0.015,41,1.129,42,4.186,43,1.021,44,1.41,45,2.024,46,2.024,47,2.024,48,3.173,49,3.173,50,2.895,51,3.173,52,3.173,53,3.173,54,2.097,55,1.787,56,1.199,57,2.407,58,3.59,59,3.018,60,1.969,61,3.59,62,4.486,63,3.59,64,5.089,65,4.292,66,3.608,67,3.018,68,3.018,69,3.59,70,3.59,71,1.947,72,3.018,73,2.024,74,3.59,75,4.757,76,2.407,77,3.59,78,2.359,79,0.878,80,0.878,81,0.508,82,0.757,83,2.407,84,2.024,85,3.59,86,3.59,87,3.59,88,1.199,89,2.407,90,2.359,91,2.407,92,2.407,93,2.407,94,2.407,95,3.59,96,2.359,97,1.582,98,2.359,99,3.157,100,1.199,101,2.407,102,2.407,103,2.407,104,2.024,105,2.024,106,2.407,107,2.407,108,2.407,109,2.407,110,1.199,111,2.407,112,1.771,113,2.407,114,2.024,115,2.024,116,3.018,117,3.59,118,2.407,119,2.407,120,2.407,121,2.407,122,2.407,123,2.407,124,2.024,125,2.407,126,3.59,127,2.135,128,2.407,129,0.815,130,2.407,131,2.024,132,2.407,133,2.407,134,1.771,135,2.407,136,2.024,137,2.407,138,1.771,139,2.407,140,2.407]],["title/injectables/AppService.html",[53,1.968,141,0.773]],["body/injectables/AppService.html",[3,0.406,4,0.406,5,0.3,8,0.028,25,0.406,26,0.844,27,0.406,28,0.021,39,0.025,40,0.025,53,3.472,141,1.364,142,2.113,143,4.188]],["title/controllers/AuthController.html",[0,1.12,144,2.175]],["body/controllers/AuthController.html",[0,1.461,2,1.03,3,0.198,4,0.198,5,0.146,7,2.836,8,0.029,9,0.567,11,1.799,13,2.658,17,0.312,18,1.223,20,2.007,21,1.021,23,1.701,25,0.351,26,0.411,27,0.198,28,0.01,29,1.862,39,0.015,40,0.015,78,2.375,79,1.862,80,1.862,81,0.839,82,1.607,144,2.375,145,2.042,146,3.174,147,3.038,148,3.038,149,3.627,150,3.614,151,2.658,152,2.379,153,2.658,154,2.658,155,4.017,156,3.038,157,3.614,158,5.108,159,3.627,160,3.614,161,3.614,162,3.038,163,2.429,164,1.877,165,3.614,166,2.429,167,2.993,168,3.091,169,2.429,170,2.167,171,3.614,172,2.429,173,2.429,174,1.862,175,3.614,176,2.429,177,2.429,178,1.929,179,3.614,180,2.429,181,3.614,182,3.939,183,2.429,184,2.429,185,1.618,186,3.614,187,2.429,188,2.566,189,1.445,190,1.115,191,2.341,192,2.042,193,2.429,194,1.115,195,2.543,196,2.429,197,2.429,198,2.429,199,2.429,200,2.429,201,2.429,202,2.429,203,2.429,204,2.429,205,2.429,206,2.429,207,2.429]],["title/classes/AuthLogin.html",[28,0.014,170,1.404]],["body/classes/AuthLogin.html",[3,0.3,4,0.3,5,0.222,8,0.029,17,0.474,20,1.901,21,0.967,25,0.3,27,0.485,28,0.025,39,0.021,40,0.021,81,0.685,129,1.943,164,2.072,170,2.292,174,1.343,178,2.23,185,1.247,208,1.562,209,1.998,210,1.522,211,2.421,212,3.683,213,2.709,214,3.683,215,2.19,216,2.19,217,2.735,218,3.413,219,2.19,220,2.735,221,1.562,222,3.214,223,1.343,224,1.343,225,1.834,226,2.691,227,1.447,228,1.158,229,1.562,230,2.19,231,2.19,232,1.998,233,1.834,234,1.998]],["title/modules/AuthModule.html",[41,1.041,48,1.968]],["body/modules/AuthModule.html",[2,2.391,3,0.287,4,0.287,5,0.212,8,0.029,9,0.822,25,0.502,26,0.596,27,0.287,28,0.015,35,1.615,39,0.02,40,0.02,41,1.971,43,2.241,44,1.845,48,3.811,50,3.277,55,2.338,56,1.752,71,2.867,72,3.947,144,3.473,151,2.588,154,2.588,191,3.277,192,2.958,235,2.958,236,3.519,237,2.958,238,3.667,239,3.519,240,4.695,241,3.947,242,4.695,243,3.454,244,4.695,245,4.695,246,3.519,247,3.519,248,2.958,249,3.519,250,2.958,251,2.958,252,3.519,253,3.519,254,3.519,255,2.588]],["title/interfaces/AuthRequest.html",[256,1.207,257,1.648]],["body/interfaces/AuthRequest.html",[0,0.883,3,0.212,4,0.212,5,0.157,8,0.029,9,0.609,17,0.336,23,1.445,25,0.428,26,0.442,27,0.212,28,0.011,29,1.918,39,0.016,40,0.016,60,1.748,78,2.503,81,0.803,127,1.551,167,2.824,168,2.066,185,1.289,189,1.551,190,1.197,194,1.197,195,2.463,210,1.198,223,1.388,228,1.556,256,0.951,257,2.735,258,1.715,259,1.919,260,2.802,261,3.202,262,3.202,263,3.266,264,2.503,265,2.503,266,4.277,267,3.639,268,2.802,269,2.802,270,2.27,271,2.098,272,1.896,273,2.802,274,1.896,275,1.896,276,2.503,277,3.202,278,3.202,279,2.802,280,2.503,281,3.202,282,3.202,283,3.202,284,2.503,285,2.24,286,2.158,287,3.373,288,1.715,289,1.715,290,1.415,291,2.24,292,1.919,293,1.299,294,2.24,295,2.24,296,1.748,297,1.299,298,1.919,299,1.715,300,1.715,301,1.715,302,1.715,303,2.193,304,1.551,305,2.193,306,2.193,307,3.202,308,3.202,309,2.193,310,2.193,311,2.193,312,2.193,313,1.919,314,2.193,315,2.193,316,3.202,317,2.503,318,2.193,319,2.193,320,2.193,321,2.193,322,2.193,323,2.193,324,1.919,325,1.919]],["title/interfaces/AuthRequest-1.html",[134,2.038,256,1.01,257,1.379]],["body/interfaces/AuthRequest-1.html",[0,1.697,3,0.259,4,0.259,5,0.191,8,0.029,9,0.742,11,1.582,17,0.409,23,1.28,24,3.295,25,0.462,26,0.538,27,0.259,28,0.013,29,1.597,39,0.019,40,0.019,60,2.48,81,0.803,82,0.999,129,1.483,152,2.181,153,3.223,167,2.496,174,1.158,189,1.889,190,1.458,194,1.458,195,2.496,210,1.378,223,1.597,227,2.123,228,1.783,256,1.158,257,2.496,258,2.088,274,1.582,280,2.879,286,2.515,287,3.639,288,2.088,289,2.088,290,1.724,299,2.088,300,2.088,301,2.088,302,2.088,317,2.879,326,2.337,327,3.682,328,3.682,329,3.682,330,3.682,331,3.223,332,2.496,333,2.337,334,2.088,335,2.671,336,1.889,337,2.605,338,2.671,339,2.671,340,2.671,341,2.671,342,2.671,343,2.671,344,3.223,345,2.337,346,2.671,347,2.671,348,2.671]],["title/injectables/AuthService.html",[141,0.773,191,1.796]],["body/injectables/AuthService.html",[0,0.822,3,0.119,4,0.119,5,0.088,8,0.029,9,0.342,17,0.189,18,0.822,21,0.862,23,1.334,24,1.595,25,0.426,26,0.248,27,0.119,28,0.006,29,1.459,39,0.01,40,0.01,54,1.695,60,0.673,79,1.572,80,1.572,81,0.611,82,1.357,88,0.73,96,2.63,97,0.963,98,2.835,99,1.786,100,1.798,110,1.798,112,1.786,116,2.04,127,0.872,129,1.546,141,0.567,142,0.622,146,1.786,152,2.836,164,1.46,167,1.547,168,2.77,170,1.532,174,1.317,178,1.46,182,1.078,185,1.46,188,3.344,190,0.673,191,1.317,224,1.132,226,0.73,229,0.622,232,2.477,233,1.209,243,1.786,248,1.232,284,1.595,286,2.21,337,0.872,349,1.232,350,2.427,351,2.427,352,2.427,353,2.04,354,1.595,355,2.38,356,2.427,357,2.427,358,2.427,359,4.002,360,4.313,361,4.313,362,3.611,363,2.427,364,2.427,365,3.051,366,2.427,367,2.427,368,2.427,369,2.427,370,2.427,371,1.078,372,3.106,373,3.106,374,1.466,375,1.786,376,2.427,377,1.466,378,2.427,379,3.036,380,2.04,381,2.427,382,2.427,383,2.427,384,2.427,385,2.427,386,1.466,387,2.427,388,2.427,389,2.427,390,2.427,391,1.466,392,2.427,393,2.427,394,2.944,395,2.427,396,1.466,397,1.786,398,2.427,399,2.04,400,2.427,401,3.036,402,2.427,403,2.04,404,2.427,405,2.427,406,2.427,407,1.209,408,2.427,409,1.466,410,2.04,411,2.427,412,2.427,413,1.466,414,1.232,415,1.466,416,1.232,417,0.963,418,1.466,419,1.466,420,1.466,421,1.466,422,1.466,423,1.466,424,1.466,425,1.466,426,1.466,427,1.466,428,1.232,429,1.466,430,2.38,431,1.466,432,3.007,433,3.09,434,1.466,435,1.078,436,1.466,437,1.595,438,1.466,439,1.466,440,3.106,441,1.466,442,1.466,443,1.466,444,2.427,445,1.466,446,4.777,447,3.14,448,3.611,449,1.232,450,1.466,451,1.466,452,1.466,453,3.106,454,3.106,455,2.427,456,1.466,457,1.466,458,1.232,459,1.466,460,1.466,461,1.466,462,2.427,463,1.466,464,1.466,465,1.466,466,1.466,467,1.466,468,1.466,469,3.106,470,1.466,471,1.466,472,1.466,473,1.232,474,1.466,475,1.078,476,1.232,477,1.466,478,1.466,479,1.466,480,1.466,481,1.232,482,1.466,483,2.427,484,1.466,485,1.466,486,1.466]],["title/classes/AuthSignup.html",[28,0.014,174,1.207]],["body/classes/AuthSignup.html",[3,0.284,4,0.284,5,0.21,8,0.029,17,0.449,20,2.068,21,1.123,25,0.284,27,0.477,28,0.025,39,0.02,40,0.02,81,0.745,129,1.902,164,2.041,170,2.484,174,1.703,178,2.225,185,1.182,208,1.481,209,1.894,210,1.469,211,3.07,213,2.568,215,2.076,216,2.076,217,2.688,218,3.341,219,2.076,220,2.688,221,1.481,222,3.13,223,1.703,224,1.919,225,1.738,226,2.916,227,1.372,228,1.098,229,1.481,230,2.076,231,2.076,232,1.894,233,1.738,234,1.894,487,3.491,488,3.491,489,4.67,490,3.491,491,3.491]],["title/controllers/CoreController.html",[0,1.12,304,1.968]],["body/controllers/CoreController.html",[0,0.881,2,1.104,3,0.212,4,0.212,5,0.157,7,1.711,8,0.029,17,0.335,18,1.288,20,1.494,21,0.76,23,1.536,25,0.428,26,0.441,27,0.212,28,0.011,29,1.916,39,0.016,40,0.016,60,1.195,78,1.711,79,1.386,80,1.386,81,0.823,82,1.196,127,1.548,167,3.039,168,2.681,185,0.881,189,1.548,190,1.195,194,1.195,195,2.46,223,0.949,228,1.196,256,0.949,257,2.951,259,1.915,260,2.798,261,2.189,262,2.189,263,2.672,264,1.711,265,1.711,266,3.635,267,2.798,268,1.915,269,1.915,270,1.745,271,1.613,272,1.296,273,1.915,274,1.296,275,1.296,276,1.711,277,2.189,278,2.189,279,1.915,280,1.711,281,2.189,282,2.189,283,2.189,284,1.711,285,1.894,286,1.766,287,3.525,288,1.711,289,1.711,290,1.413,291,2.237,292,1.915,293,1.296,294,2.617,295,2.617,296,1.745,297,1.296,298,1.915,299,1.711,300,1.711,301,1.711,302,1.711,303,2.189,304,2.262,305,3.197,306,3.777,307,3.197,308,3.197,309,2.189,310,2.189,311,2.189,312,3.197,313,3.305,314,2.189,315,2.189,316,3.197,317,2.5,318,2.189,319,2.189,320,2.189,321,2.189,322,2.189,323,2.189,324,1.915,325,1.915,492,2.604,493,2.604,494,2.604,495,2.604]],["title/modules/CoreModule.html",[41,1.041,49,1.968]],["body/modules/CoreModule.html",[2,2.082,3,0.307,4,0.307,5,0.227,8,0.028,9,0.88,25,0.445,26,0.638,27,0.307,28,0.016,35,1.728,39,0.021,40,0.021,41,1.821,43,1.597,44,1.929,49,3.661,55,2.444,56,1.875,71,2.664,147,4.127,185,1.662,263,3.442,265,3.227,266,4.529,267,3.612,268,3.612,269,3.612,270,2.253,271,2.082,272,2.444,273,3.612,274,2.444,275,2.444,276,3.227,291,3.065,292,2.77,304,3.248,496,3.165,497,3.165,498,3.765,499,4.909,500,4.909,501,4.909,502,4.909,503,3.765]],["title/injectables/CoreService.html",[141,0.773,291,1.648]],["body/injectables/CoreService.html",[3,0.105,4,0.105,5,0.078,8,0.029,17,0.166,18,0.738,21,0.808,23,1.181,25,0.329,26,0.218,27,0.105,28,0.005,29,1.828,39,0.009,40,0.009,54,1.309,79,1.474,80,1.474,81,0.898,82,1.271,88,0.642,110,1.659,127,1.981,134,2.974,141,0.509,142,0.547,164,1.595,168,2.455,178,1.984,190,0.592,194,0.592,195,0.642,224,0.47,228,1.354,229,2.268,263,2.404,264,2.448,271,1.202,275,2.013,285,2.705,286,1.588,291,1.086,293,0.642,296,1.001,297,2.143,298,0.949,325,1.604,344,2.451,355,1.685,365,2.948,371,0.949,375,1.604,417,0.848,430,0.767,432,3.127,433,3.065,437,3.204,447,0.848,458,1.084,473,1.084,475,2.451,476,2.8,504,0.949,505,2.181,506,2.181,507,2.833,508,2.833,509,2.181,510,1.29,511,2.181,512,1.29,513,2.181,514,1.29,515,1.29,516,1.29,517,1.29,518,1.29,519,0.949,520,2.181,521,4.042,522,2.833,523,1.29,524,2.181,525,2.181,526,2.181,527,2.181,528,2.181,529,2.833,530,0.949,531,1.29,532,4.042,533,2.833,534,4.525,535,1.29,536,1.29,537,1.29,538,2.833,539,3.579,540,2.833,541,2.833,542,3.331,543,2.181,544,2.181,545,3.331,546,2.181,547,2.181,548,4.042,549,4.042,550,4.042,551,3.331,552,3.331,553,3.331,554,2.181,555,2.181,556,2.181,557,3.331,558,3.331,559,1.29,560,1.29,561,1.084,562,1.29,563,1.29,564,0.949,565,1.29,566,1.29,567,2.181,568,1.29,569,1.29,570,2.181,571,1.29,572,1.29,573,1.29,574,1.29,575,1.29,576,1.29,577,1.084,578,1.29,579,1.29,580,1.29,581,2.181,582,3.331,583,2.181,584,2.181]],["title/classes/EditUser.html",[28,0.014,227,1.3]],["body/classes/EditUser.html",[3,0.292,4,0.292,5,0.216,8,0.029,17,0.461,20,2.095,21,1.066,25,0.292,27,0.481,28,0.025,39,0.02,40,0.02,81,0.755,129,1.922,164,2.056,170,2.016,174,1.307,178,2.233,185,1.213,208,1.52,209,1.945,210,1.495,215,2.131,216,2.131,217,2.711,218,3.377,219,2.131,220,2.711,221,1.52,222,3.171,223,1.307,224,1.307,225,1.785,226,2.942,227,1.868,228,1.127,229,1.52,230,2.131,231,2.131,232,1.945,233,1.785,234,1.945,585,4.753,586,3.584,587,3.584,588,3.584,589,3.584]],["title/injectables/JwtStrategy.html",[141,0.773,238,1.968]],["body/injectables/JwtStrategy.html",[3,0.287,4,0.287,5,0.213,8,0.029,9,0.824,17,0.454,18,1.592,21,0.94,23,1.031,25,0.479,26,0.597,27,0.287,28,0.015,29,1.286,39,0.02,40,0.02,54,2.217,79,1.714,80,1.714,81,0.799,82,1.479,88,1.757,110,2.81,141,1.098,142,1.496,152,2.634,185,1.194,208,1.995,223,1.286,224,1.286,225,1.757,229,1.496,238,2.797,286,1.848,290,1.914,337,2.098,355,2.098,365,2.87,407,2.634,417,2.319,430,2.098,432,1.914,433,1.914,481,2.966,519,2.595,590,2.966,591,5.29,592,4.703,593,3.091,594,3.953,595,3.528,596,4.703,597,4.703,598,3.528,599,3.528,600,3.528,601,2.966,602,3.528,603,3.528,604,3.528,605,3.528,606,3.528,607,3.528,608,3.528,609,2.966,610,2.966]],["title/injectables/LogRequest.html",[90,2.175,141,0.773]],["body/injectables/LogRequest.html",[3,0.292,4,0.292,5,0.216,8,0.029,9,0.837,11,2.367,17,0.461,18,1.609,21,0.716,23,1.047,25,0.387,26,0.607,27,0.292,28,0.015,39,0.02,40,0.02,60,2.606,62,3.995,79,1.307,80,1.307,81,0.508,82,1.127,84,3.013,90,3.124,138,2.637,141,1.11,142,1.52,148,3.995,279,3.497,287,2.826,334,2.356,432,2.579,435,2.637,611,3.013,612,4.753,613,4.753,614,4.753,615,4.753,616,5.909,617,3.497,618,4.753,619,5.679,620,5.679,621,5.679,622,5.679,623,3.584,624,4.753,625,3.584,626,5.332,627,3.584,628,3.584,629,3.584,630,3.584,631,3.584,632,3.584,633,3.584]],["title/classes/MuttateDto.html",[28,0.014,294,1.648]],["body/classes/MuttateDto.html",[3,0.274,4,0.274,5,0.203,8,0.029,17,0.433,20,2.176,21,1.107,25,0.371,27,0.471,28,0.023,39,0.019,40,0.019,81,0.9,178,2.065,208,1.429,210,1.434,211,2.214,217,2.799,220,2.847,221,1.429,256,1.228,270,2.092,271,1.934,272,2.27,275,2.573,285,2.757,293,2.757,294,2.27,295,2.27,296,1.546,297,2.757,539,3.293,593,2.214,634,2.003,635,2.832,636,3.368,637,3.368,638,3.368,639,3.368,640,3.368,641,3.368,642,2.214,643,2.478,644,2.478,645,3.354,646,2.711,647,2.997,648,3.802,649,2.478,650,2.478,651,2.478,652,2.214]],["title/modules/OtpModule.html",[41,1.041,50,1.796]],["body/modules/OtpModule.html",[3,0.336,4,0.336,5,0.249,8,0.028,9,0.963,25,0.464,26,0.698,27,0.336,28,0.017,35,1.892,39,0.022,40,0.022,41,1.637,43,2.419,44,2.045,50,3.474,55,2.591,56,2.053,71,2.824,100,3.315,188,3.095,255,3.829,414,4.375,617,3.829,653,3.467,654,3.467,655,3.467,656,4.124,657,3.829,658,4.375,659,4.124,660,4.124]],["title/injectables/OtpService.html",[100,1.648,141,0.773]],["body/injectables/OtpService.html",[3,0.274,4,0.274,5,0.203,8,0.029,9,0.785,17,0.432,18,1.541,21,1.031,23,1.508,25,0.42,26,0.569,27,0.274,28,0.014,29,1.225,39,0.019,40,0.019,79,1.659,80,1.659,81,0.731,82,1.432,88,1.673,100,2.266,110,2.968,141,1.063,142,1.425,149,3.826,164,1.873,167,1.673,168,2.469,178,1.747,185,1.747,188,3.438,194,1.542,210,1.432,224,1.225,233,2.266,234,2.469,264,2.991,365,2.8,430,3.069,432,2.8,433,1.823,447,2.208,661,2.825,662,4.551,663,3.826,664,4.551,665,4.551,666,5.161,667,4.551,668,3.36,669,4.551,670,4.551,671,3.36,672,4.651,673,3.36,674,3.36,675,3.36,676,4.551,677,3.36,678,3.36,679,3.36,680,3.36,681,3.36,682,3.36,683,2.825,684,3.36,685,3.36,686,3.36]],["title/classes/Phnum.html",[28,0.014,164,1.12]],["body/classes/Phnum.html",[3,0.308,4,0.308,5,0.228,8,0.029,17,0.487,20,1.488,21,0.757,25,0.308,27,0.49,28,0.025,39,0.021,40,0.021,81,0.536,129,1.668,164,2.126,170,2.09,174,1.38,178,2.227,185,1.282,208,1.606,209,2.054,210,1.55,213,2.786,215,2.252,216,2.252,217,2.76,218,3.45,219,2.252,220,2.76,221,1.606,222,3.257,223,1.38,224,1.38,225,1.885,226,2.727,227,1.488,228,1.191,229,1.606,230,2.252,231,2.252,232,2.054,233,1.885,234,2.054,687,3.787]],["title/modules/PrismaModule.html",[41,1.041,51,1.968]],["body/modules/PrismaModule.html",[3,0.326,4,0.326,5,0.241,8,0.028,9,0.935,25,0.416,26,0.678,27,0.326,28,0.017,35,1.836,39,0.022,40,0.022,41,1.863,43,2.385,44,2.006,51,3.782,54,2.605,55,2.542,56,1.992,71,2.77,251,4.292,255,3.756,354,3.356,407,2.949,657,3.756,658,4.292,688,3.364,689,4.001,690,3.364,691,4.001,692,5.106,693,5.106,694,5.106,695,5.106,696,4.001]],["title/injectables/PrismaService.html",[54,1.3,141,0.773]],["body/injectables/PrismaService.html",[3,0.31,4,0.31,5,0.23,8,0.029,9,0.889,17,0.49,18,1.674,21,0.988,23,1.113,25,0.447,26,0.645,27,0.31,28,0.016,39,0.021,40,0.021,41,1.556,54,1.943,73,4.157,79,1.388,80,1.388,81,0.539,82,1.198,88,1.896,110,2.895,114,4.157,138,2.802,141,1.155,142,1.615,223,1.803,224,1.388,225,1.896,355,2.265,365,2.98,407,2.462,433,2.066,530,2.802,564,2.802,594,4.157,697,3.201,698,4.946,699,6.025,700,4.946,701,4.946,702,6.175,703,3.808,704,3.808,705,3.808,706,3.808,707,3.808,708,3.808]],["title/classes/QueryDto.html",[28,0.014,295,1.648]],["body/classes/QueryDto.html",[3,0.28,4,0.28,5,0.207,8,0.029,17,0.442,20,2.052,21,1.043,25,0.376,27,0.474,28,0.023,39,0.02,40,0.02,81,0.894,178,2.076,208,1.458,210,1.454,211,2.259,217,2.813,220,2.86,221,1.458,256,1.253,270,2.121,271,1.96,272,2.301,275,1.712,285,2.301,293,2.78,294,1.712,295,2.6,296,1.577,297,2.6,539,3.321,593,2.259,634,2.044,635,2.89,642,2.259,643,2.529,644,2.529,645,3.4,646,2.749,647,3.038,648,3.841,649,2.529,650,2.529,651,2.529,652,3.432,709,3.437,710,3.437,711,3.437,712,3.437,713,3.437]],["title/interfaces/QueryReturn.html",[256,1.207,296,1.519]],["body/interfaces/QueryReturn.html",[3,0.292,4,0.292,5,0.216,8,0.029,17,0.461,25,0.387,27,0.481,28,0.023,39,0.02,40,0.02,81,0.902,82,1.495,178,2.098,210,1.495,217,2.843,220,2.887,221,1.52,256,1.307,258,2.356,270,2.181,271,2.016,272,2.367,275,1.785,285,2.942,293,2.655,294,1.785,295,2.367,296,2.181,297,2.942,539,2.826,593,2.356,634,2.131,642,2.356,643,2.637,644,2.637,645,3.497,646,2.826,647,3.124,648,3.923,649,2.637,650,2.637,651,2.637,652,2.356]],["title/controllers/UserController.html",[0,1.12,336,1.968]],["body/controllers/UserController.html",[0,1.396,2,1.236,3,0.237,4,0.237,5,0.176,7,1.916,8,0.029,11,1.451,17,0.375,18,1.396,20,1.621,21,0.824,23,1.521,24,3.61,25,0.447,26,0.494,27,0.237,28,0.012,29,1.504,39,0.018,40,0.018,60,2.52,79,1.504,80,1.504,81,0.808,82,1.637,129,0.987,152,2.384,153,3.829,167,2.054,174,1.063,189,1.733,190,1.337,194,1.337,195,2.384,223,1.063,227,2.241,228,1.506,256,1.063,257,2.592,274,2.054,280,2.711,286,2.478,287,3.714,288,1.916,289,1.916,290,1.581,299,1.916,300,1.916,301,1.916,302,1.916,317,2.711,326,2.144,327,2.45,328,2.45,329,2.45,330,2.45,331,2.144,332,2.384,333,2.144,334,1.916,335,2.45,336,2.453,337,2.847,338,3.467,339,2.45,340,3.467,341,3.467,342,3.467,343,3.467,344,3.522,345,2.144,346,3.467,347,2.45,348,2.45,714,4.125,715,4.125,716,2.915,717,2.915,718,2.915,719,2.915]],["title/classes/UserDTO.html",[28,0.014,228,1.041]],["body/classes/UserDTO.html",[3,0.283,4,0.283,5,0.209,8,0.029,17,0.447,21,1.203,25,0.283,27,0.476,28,0.025,39,0.02,40,0.02,81,0.852,129,1.576,164,1.898,170,1.974,174,1.266,178,2.234,185,1.576,208,1.473,209,1.884,210,1.464,215,2.065,216,2.065,217,2.683,218,3.335,219,2.065,220,2.683,221,1.473,222,3.121,223,1.266,224,1.266,225,1.729,226,2.911,227,1.365,228,1.464,229,2.226,230,3.121,231,3.121,232,2.848,233,2.613,234,2.525,720,3.473,721,3.473,722,3.473,723,3.473,724,3.473,725,3.473]],["title/modules/UserModule.html",[41,1.041,52,1.968]],["body/modules/UserModule.html",[2,2.22,3,0.339,4,0.339,5,0.251,8,0.029,9,0.972,25,0.466,26,0.705,27,0.339,28,0.017,35,1.91,39,0.022,40,0.022,41,1.89,43,1.766,44,2.057,52,3.759,55,2.607,56,2.073,71,2.84,129,1.772,286,2.057,331,3.851,332,3.147,333,3.062,336,3.406,353,4.401,379,4.401,726,3.499,727,3.499,728,4.163,729,4.401,730,4.163]],["title/injectables/UserService.html",[141,0.773,332,1.648]],["body/injectables/UserService.html",[3,0.248,4,0.248,5,0.183,8,0.029,9,0.71,17,0.391,18,1.438,21,0.849,23,1.242,25,0.454,26,0.515,27,0.248,28,0.013,29,1.549,39,0.018,40,0.018,54,2.084,60,1.395,79,1.549,80,1.549,81,0.751,82,1.336,88,1.514,110,2.64,129,1.438,141,0.992,142,1.29,190,1.395,194,1.395,195,2.115,224,1.108,227,2.331,228,1.755,229,1.802,274,1.514,284,2.793,286,2.448,332,2.64,337,1.808,354,1.998,355,2.912,365,2.657,371,2.237,375,3.126,394,2.237,397,2.237,401,4.117,407,1.514,416,2.556,417,1.998,430,1.808,432,2.657,433,2.657,437,2.793,475,3.126,519,2.237,609,4.117,610,4.458,657,3.126,731,2.556,732,4.249,733,4.249,734,3.04,735,4.249,736,5.303,737,3.04,738,3.04,739,3.04,740,2.556,741,3.04,742,4.249]],["title/coverage.html",[743,3.787]],["body/coverage.html",[0,1.871,1,2.203,5,0.202,6,2.817,8,0.029,15,2.203,28,0.025,39,0.019,40,0.019,53,1.993,54,1.317,81,0.475,90,2.203,100,1.669,141,1.447,143,2.817,144,2.203,145,2.817,164,1.135,170,1.422,174,1.222,191,1.818,209,3.134,227,1.317,228,1.054,238,1.993,256,1.879,257,2.262,259,3.343,291,1.669,294,1.669,295,1.669,296,1.538,304,1.993,326,3.343,332,1.669,336,1.993,349,2.817,447,2.203,504,2.466,577,5.387,590,2.817,611,2.817,634,3.065,661,2.817,697,2.817,731,2.817,743,2.817,744,3.352,745,3.352,746,5.155,747,4.544,748,4.544,749,3.352,750,3.352,751,5.527,752,5.527,753,4.544,754,5.776,755,5.527,756,3.352,757,3.352,758,3.352,759,3.352,760,3.352,761,2.817,762,3.352,763,2.817,764,3.352,765,3.352,766,3.352,767,3.352]],["title/dependencies.html",[44,1.563,768,2.038]],["body/dependencies.html",[8,0.029,26,0.65,28,0.021,39,0.021,40,0.021,44,1.509,96,3.269,97,3.625,98,3.269,99,3.659,104,3.229,105,3.229,152,2.476,221,1.629,243,2.826,290,2.084,334,2.524,394,2.826,407,1.912,530,2.826,601,4.636,642,2.524,672,3.229,769,3.841,770,3.841,771,5.833,772,3.841,773,3.841,774,3.841,775,4.973,776,3.841,777,3.841,778,3.841,779,3.841,780,4.973,781,3.841,782,4.973,783,3.841,784,3.841,785,3.841,786,3.841,787,3.841,788,3.841,789,3.841,790,3.841,791,3.841,792,3.841,793,3.841,794,3.841,795,3.841,796,3.841,797,3.841,798,3.841,799,3.841,800,3.841,801,3.841,802,3.841,803,3.841]],["title/miscellaneous/enumerations.html",[804,1.82,805,3.343]],["body/miscellaneous/enumerations.html",[8,0.028,17,0.609,39,0.024,40,0.024,270,2.6,271,2.403,272,2.821,293,2.821,297,2.821,634,2.816,646,3.369,647,3.724,804,3.112,805,3.981,806,5.666,807,6.424]],["title/miscellaneous/functions.html",[804,1.82,808,3.343]],["body/miscellaneous/functions.html",[8,0.025,17,0.66,39,0.025,40,0.025,761,4.316,763,5.272,804,3.374,808,4.316,809,5.134]],["title/index.html",[17,0.356,810,2.77,811,2.77]],["body/index.html",[5,0.139,8,0.028,11,1.151,13,1.701,14,3.082,15,2.289,39,0.015,40,0.015,44,0.909,59,1.944,66,3.522,67,1.944,68,1.944,81,0.593,96,1.52,97,1.52,98,1.52,112,1.701,115,1.944,124,1.944,129,1.418,131,1.944,136,1.944,146,3.082,151,1.701,152,1.151,154,1.701,155,1.944,156,1.944,159,2.927,162,1.944,164,1.418,182,1.701,188,2.071,226,1.734,241,1.944,250,1.944,260,3.082,263,1.375,265,1.52,270,1.061,271,0.981,274,1.151,276,2.289,285,1.151,286,1.368,313,1.701,324,1.701,345,1.701,354,3.455,380,1.944,397,3.43,403,1.944,407,2.795,410,1.944,435,2.562,437,2.753,449,1.944,504,1.701,539,2.071,561,3.522,564,1.701,617,2.562,646,2.071,652,1.52,663,1.944,683,2.927,729,1.944,740,3.522,768,1.701,812,2.312,813,3.482,814,2.312,815,2.312,816,2.312,817,2.312,818,2.312,819,4.189,820,4.662,821,3.482,822,3.482,823,2.312,824,3.482,825,2.312,826,2.312,827,2.312,828,2.312,829,4.189,830,2.312,831,2.312,832,2.312,833,2.312,834,4.662,835,2.312,836,2.312,837,5.001,838,2.312,839,2.312,840,2.312,841,2.312,842,2.312,843,2.312,844,3.482,845,2.312,846,2.312,847,2.312,848,3.482,849,2.312,850,3.482,851,2.312,852,4.189,853,3.482,854,2.312,855,3.482,856,4.662,857,3.482,858,2.312,859,2.312,860,2.312,861,2.312,862,2.312,863,2.312,864,2.312,865,2.312,866,2.312,867,2.312,868,2.312,869,2.312,870,2.312,871,2.312,872,2.312,873,2.312,874,2.312,875,2.312,876,2.312,877,2.312,878,3.482,879,2.312,880,2.312,881,1.944,882,2.312,883,2.312,884,2.312,885,2.312,886,1.944,887,2.312,888,2.312,889,3.482,890,2.312,891,2.312,892,2.312,893,2.312,894,2.312,895,3.482,896,2.312,897,3.482,898,3.482,899,2.312,900,2.312,901,2.312,902,2.312,903,2.312,904,2.312,905,2.312,906,3.482,907,3.482,908,2.312,909,2.312,910,3.482,911,2.312,912,2.312,913,2.312,914,2.312,915,2.312,916,2.312,917,2.312,918,2.312,919,2.312,920,2.312,921,2.312,922,2.312,923,2.312,924,2.312,925,2.312,926,2.312,927,2.312,928,2.312,929,2.312,930,2.312,931,2.312,932,2.312,933,2.312,934,2.312,935,2.312,936,2.312,937,2.312,938,2.312,939,2.312,940,2.312,941,2.312,942,3.482,943,4.662,944,4.189,945,2.312,946,3.482,947,3.482,948,2.312]],["title/modules.html",[43,1.911]],["body/modules.html",[8,0.024,39,0.024,40,0.024,42,3.102,43,2.002,48,2.806,49,2.806,50,2.56,51,2.806,52,2.806,881,5.477,949,6.515,950,6.515,951,6.515]],["title/overview.html",[952,3.787]],["body/overview.html",[2,1.504,8,0.028,35,1.627,39,0.02,40,0.02,42,4.365,43,1.504,44,1.854,45,2.981,46,2.981,47,2.981,48,3.779,49,3.501,50,3.353,51,3.6,52,3.501,53,3.154,54,2.466,55,2.35,56,1.766,100,3.077,142,1.504,191,2.878,208,1.504,235,2.981,237,2.981,238,3.154,258,2.331,291,2.641,332,2.641,428,2.981,496,2.981,497,2.981,653,2.981,654,2.981,655,2.981,688,2.981,690,2.981,726,2.981,727,2.981,886,2.981,952,2.981,953,3.546,954,3.546,955,3.546]],["title/properties.html",[210,1.251,768,2.038]],["body/properties.html",[8,0.028,9,1.186,39,0.025,40,0.025,210,1.597,399,4.267,956,5.076,957,5.076,958,5.076,959,5.076]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":577,"title":{},"body":{"injectables/CoreService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":956,"title":{},"body":{"properties.html":{}}}],["0.05",{"_index":554,"title":{},"body":{"injectables/CoreService.html":{}}}],["0.1.13",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["0.29.1",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":749,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":748,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":750,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":134,"title":{"interfaces/AuthRequest-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/CoreService.html":{}}}],["1.0.0",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["1.0.34",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["1.ec2.cloud.redislabs.com",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["1/2",{"_index":752,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":765,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":555,"title":{},"body":{"injectables/CoreService.html":{}}}],["1000000",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["1200",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["14",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["15m",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["18258",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["18258.c305.ap",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["1d",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["2.0.0",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["2.0.1",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["20min",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["25",{"_index":764,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":955,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":800,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{}}}],["4.0.0",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["4.3.1",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":751,"title":{},"body":{"coverage.html":{}}}],["5434",{"_index":879,"title":{},"body":{"index.html":{}}}],["6",{"_index":886,"title":{},"body":{"index.html":{},"overview.html":{}}}],["6.4.6",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["6.7.8",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":954,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":953,"title":{},"body":{"overview.html":{}}}],["85",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["9.0.0",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["9._",{"_index":573,"title":{},"body":{"injectables/CoreService.html":{}}}],["91",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["9100572305",{"_index":943,"title":{},"body":{"index.html":{}}}],["919465",{"_index":945,"title":{},"body":{"index.html":{}}}],["9]\\d{9}\\b)|(\\b(?:[a",{"_index":572,"title":{},"body":{"injectables/CoreService.html":{}}}],["9]{25,34}\\b)|(\\b[6",{"_index":571,"title":{},"body":{"injectables/CoreService.html":{}}}],["according",{"_index":903,"title":{},"body":{"index.html":{}}}],["accountsid",{"_index":674,"title":{},"body":{"injectables/OtpService.html":{}}}],["actual",{"_index":300,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["addition",{"_index":563,"title":{},"body":{"injectables/CoreService.html":{}}}],["alias",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["already",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["analysis",{"_index":615,"title":{},"body":{"injectables/LogRequest.html":{}}}],["api",{"_index":829,"title":{},"body":{"index.html":{}}}],["apis",{"_index":931,"title":{},"body":{"index.html":{}}}],["apl|abfspay|fbl|idfcbank|okaxis|okicici|axisbank|icici|yesbank|ibl|ybl))\\b)|(\\b(?:https?:\\/\\/|www\\.)\\s+\\b)/g",{"_index":574,"title":{},"body":{"injectables/CoreService.html":{}}}],["app",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app/app.controller",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.service",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["appmodule",{"_index":42,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":53,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architecture",{"_index":948,"title":{},"body":{"index.html":{}}}],["argon",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["argon.hash(body.password",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon.hash(user.password",{"_index":741,"title":{},"body":{"injectables/UserService.html":{}}}],["argon.verify(user.password",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["argon2",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["array",{"_index":522,"title":{},"body":{"injectables/CoreService.html":{}}}],["aspect",{"_index":502,"title":{},"body":{"modules/CoreModule.html":{}}}],["async",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["auth.controller",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/hehe",{"_index":936,"title":{},"body":{"index.html":{}}}],["auth/requestotp",{"_index":934,"title":{},"body":{"index.html":{}}}],["auth/signin",{"_index":933,"title":{},"body":{"index.html":{}}}],["auth/signup",{"_index":932,"title":{},"body":{"index.html":{}}}],["auth/verifyotp",{"_index":935,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":144,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":289,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["authlogin",{"_index":170,"title":{"classes/AuthLogin.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["authlogin:13",{"_index":491,"title":{},"body":{"classes/AuthSignup.html":{}}}],["authlogin:16",{"_index":490,"title":{},"body":{"classes/AuthSignup.html":{}}}],["authmodule",{"_index":48,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":959,"title":{},"body":{"properties.html":{}}}],["authrequest",{"_index":257,"title":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{}},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["authservice",{"_index":191,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["authsignup",{"_index":174,"title":{"classes/AuthSignup.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["authtoken",{"_index":676,"title":{},"body":{"injectables/OtpService.html":{}}}],["available",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["await",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["awesome",{"_index":871,"title":{},"body":{"index.html":{}}}],["b[13][a",{"_index":565,"title":{},"body":{"injectables/CoreService.html":{}}}],["backed",{"_index":501,"title":{},"body":{"modules/CoreModule.html":{}}}],["backend",{"_index":813,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":625,"title":{},"body":{"injectables/LogRequest.html":{}}}],["basicroute",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["before",{"_index":267,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["better",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{}}}],["body('otp",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["body('phnum",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["body.context",{"_index":320,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["body.item",{"_index":319,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["body.phnum",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["body.report",{"_index":316,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["body.smscontext",{"_index":311,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["body.type",{"_index":307,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["body.username",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":234,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["bootstrap",{"_index":763,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":262,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["browse",{"_index":951,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":949,"title":{},"body":{"modules.html":{}}}],["cacha_manager",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["cache",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["cache_manager",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemanager",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["cacheotp",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["calculate",{"_index":892,"title":{},"body":{"index.html":{}}}],["call",{"_index":266,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["called",{"_index":278,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["cant",{"_index":323,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["care",{"_index":499,"title":{},"body":{"modules/CoreModule.html":{}}}],["cases",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["centre",{"_index":866,"title":{},"body":{"index.html":{}}}],["change",{"_index":331,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["changes",{"_index":325,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{}}}],["checks",{"_index":527,"title":{},"body":{"injectables/CoreService.html":{}}}],["class",{"_index":28,"title":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/MuttateDto.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"classes/UserDTO.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":208,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/MuttateDto.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"classes/UserDTO.html":{},"overview.html":{}}}],["click",{"_index":910,"title":{},"body":{"index.html":{}}}],["client",{"_index":700,"title":{},"body":{"injectables/PrismaService.html":{}}}],["clone",{"_index":900,"title":{},"body":{"index.html":{}}}],["close",{"_index":897,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":824,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":497,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_otpmodule",{"_index":653,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_exports",{"_index":654,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_otpmodule_providers",{"_index":655,"title":{},"body":{"modules/OtpModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":688,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":690,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":689,"title":{},"body":{"modules/PrismaModule.html":{}}}],["cluster_usermodule",{"_index":726,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":727,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":920,"title":{},"body":{"index.html":{}}}],["coming",{"_index":268,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["compose",{"_index":836,"title":{},"body":{"index.html":{}}}],["config",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["config.get('database_url",{"_index":707,"title":{},"body":{"injectables/PrismaService.html":{}}}],["config.get('jwt_secret",{"_index":606,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["configservice.get('twilio_account_sid",{"_index":675,"title":{},"body":{"injectables/OtpService.html":{}}}],["configservice.get('twilio_auth_token",{"_index":677,"title":{},"body":{"injectables/OtpService.html":{}}}],["configure",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{}}}],["configure(consumer",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["configuring",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":582,"title":{},"body":{"injectables/CoreService.html":{}}}],["connection",{"_index":693,"title":{},"body":{"modules/PrismaModule.html":{}}}],["console.log('here",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(`\"${originalurl",{"_index":628,"title":{},"body":{"injectables/LogRequest.html":{}}}],["console.log(body.phnum",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(phonenum",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(res",{"_index":632,"title":{},"body":{"injectables/LogRequest.html":{}}}],["const",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":224,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["constructor(config",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["constructor(configservice",{"_index":668,"title":{},"body":{"injectables/OtpService.html":{}}}],["constructor(postgre",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["construstor",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(logrequest).forroutes",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":285,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"index.html":{}}}],["context.match(regex",{"_index":575,"title":{},"body":{"injectables/CoreService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('core",{"_index":303,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["controller('user",{"_index":335,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coonect",{"_index":701,"title":{},"body":{"injectables/PrismaService.html":{}}}],["cordination",{"_index":865,"title":{},"body":{"index.html":{}}}],["core",{"_index":260,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"index.html":{}}}],["core.controller",{"_index":503,"title":{},"body":{"modules/CoreModule.html":{}}}],["core.service",{"_index":292,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/core.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["core/mutate",{"_index":939,"title":{},"body":{"index.html":{}}}],["core/muttate",{"_index":273,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["core/query",{"_index":265,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"index.html":{}}}],["corecontroller",{"_index":304,"title":{"controllers/CoreController.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["coremodule",{"_index":49,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreservice",{"_index":291,"title":{"injectables/CoreService.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":743,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":902,"title":{},"body":{"index.html":{}}}],["created",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{}}}],["createdat",{"_index":230,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["createitem",{"_index":556,"title":{},"body":{"injectables/CoreService.html":{}}}],["creating",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["crimeapp",{"_index":684,"title":{},"body":{"injectables/OtpService.html":{}}}],["crud",{"_index":733,"title":{},"body":{"injectables/UserService.html":{}}}],["current",{"_index":868,"title":{},"body":{"index.html":{}}}],["currently",{"_index":874,"title":{},"body":{"index.html":{}}}],["cyber",{"_index":863,"title":{},"body":{"index.html":{}}}],["data",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["database",{"_index":852,"title":{},"body":{"index.html":{}}}],["datasources",{"_index":705,"title":{},"body":{"injectables/PrismaService.html":{}}}],["db",{"_index":564,"title":{},"body":{"injectables/CoreService.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["dbs",{"_index":858,"title":{},"body":{"index.html":{}}}],["dbuser",{"_index":736,"title":{},"body":{"injectables/UserService.html":{}}}],["dbuser.id",{"_index":742,"title":{},"body":{"injectables/UserService.html":{}}}],["debugging",{"_index":614,"title":{},"body":{"injectables/LogRequest.html":{}}}],["decorators",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"classes/EditUser.html":{},"classes/MuttateDto.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["define",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":609,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["demand",{"_index":867,"title":{},"body":{"index.html":{}}}],["dependecies",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["dependencies",{"_index":44,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["designed",{"_index":612,"title":{},"body":{"injectables/LogRequest.html":{}}}],["detection",{"_index":888,"title":{},"body":{"index.html":{}}}],["dev",{"_index":850,"title":{},"body":{"index.html":{}}}],["developed",{"_index":812,"title":{},"body":{"index.html":{}}}],["differentiation",{"_index":559,"title":{},"body":{"injectables/CoreService.html":{}}}],["docker",{"_index":819,"title":{},"body":{"index.html":{}}}],["docs",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"index.html":{}}}],["docs)[/docs",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["doesnt",{"_index":875,"title":{},"body":{"index.html":{}}}],["done",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto",{"_index":298,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{}}}],["dummy",{"_index":923,"title":{},"body":{"index.html":{}}}],["easily",{"_index":845,"title":{},"body":{"index.html":{}}}],["edge",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["edit",{"_index":345,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{},"index.html":{}}}],["editmydata",{"_index":714,"title":{},"body":{"controllers/UserController.html":{}}}],["editmydata(@body",{"_index":347,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["editmydata(user",{"_index":716,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser",{"_index":227,"title":{"classes/EditUser.html":{}},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest-1.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["edituser(user",{"_index":735,"title":{},"body":{"injectables/UserService.html":{}}}],["elements",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["email",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["emailing",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["endpoint",{"_index":911,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":930,"title":{},"body":{"index.html":{}}}],["enterred",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["entity",{"_index":894,"title":{},"body":{"index.html":{}}}],["enum",{"_index":645,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["enumerations",{"_index":805,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["env.example",{"_index":904,"title":{},"body":{"index.html":{}}}],["erenily",{"_index":944,"title":{},"body":{"index.html":{}}}],["error",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.code",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["execute",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["exisit",{"_index":739,"title":{},"body":{"injectables/UserService.html":{}}}],["expired",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiry",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exported",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["exporting",{"_index":694,"title":{},"body":{"modules/PrismaModule.html":{}}}],["exports",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{}}}],["express",{"_index":334,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":223,"title":{},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{}}}],["extracting",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["extractjwt",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["feilds",{"_index":340,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["few",{"_index":859,"title":{},"body":{"index.html":{}}}],["figure",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["finding",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["flexible",{"_index":843,"title":{},"body":{"index.html":{}}}],["followed",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('credentials",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('session",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('wrong",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["forensics",{"_index":864,"title":{},"body":{"index.html":{}}}],["forgot",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordlogic",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordlogic(phonenum",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpwd",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpwd(@body",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpwd(body",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["format",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["framework",{"_index":827,"title":{},"body":{"index.html":{}}}],["fraud",{"_index":270,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["fraudnums",{"_index":544,"title":{},"body":{"injectables/CoreService.html":{}}}],["function",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":808,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gen",{"_index":924,"title":{},"body":{"index.html":{}}}],["generated",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["generating",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["get('/hehe",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('me",{"_index":338,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["getting",{"_index":810,"title":{"index.html":{}},"body":{}}],["git",{"_index":898,"title":{},"body":{"index.html":{}}}],["global",{"_index":658,"title":{},"body":{"modules/OtpModule.html":{},"modules/PrismaModule.html":{}}}],["globally",{"_index":695,"title":{},"body":{"modules/PrismaModule.html":{}}}],["go",{"_index":835,"title":{},"body":{"index.html":{}}}],["good",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["graph",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["guess",{"_index":841,"title":{},"body":{"index.html":{}}}],["guide",{"_index":895,"title":{},"body":{"index.html":{}}}],["hackathon",{"_index":815,"title":{},"body":{"index.html":{}}}],["ham",{"_index":283,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["handle",{"_index":732,"title":{},"body":{"injectables/UserService.html":{}}}],["handlebars",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["handled",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["handlemobile",{"_index":505,"title":{},"body":{"injectables/CoreService.html":{}}}],["handlemobile(phnum",{"_index":511,"title":{},"body":{"injectables/CoreService.html":{}}}],["handlesms",{"_index":506,"title":{},"body":{"injectables/CoreService.html":{}}}],["handlesms(header",{"_index":513,"title":{},"body":{"injectables/CoreService.html":{}}}],["hash",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["header",{"_index":344,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"injectables/CoreService.html":{},"controllers/UserController.html":{}}}],["headers",{"_index":626,"title":{},"body":{"injectables/LogRequest.html":{}}}],["hehe",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["here",{"_index":683,"title":{},"body":{"injectables/OtpService.html":{},"index.html":{}}}],["heyy",{"_index":682,"title":{},"body":{"injectables/OtpService.html":{}}}],["hj",{"_index":568,"title":{},"body":{"injectables/CoreService.html":{}}}],["host",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["hosting",{"_index":823,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpexception(error",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.forbidden",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":229,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":915,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["implementing",{"_index":698,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implements",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{},"injectables/PrismaService.html":{}}}],["implemted",{"_index":916,"title":{},"body":{"index.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["include",{"_index":543,"title":{},"body":{"injectables/CoreService.html":{}}}],["incoming",{"_index":280,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["incomming",{"_index":279,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/LogRequest.html":{}}}],["incomplete",{"_index":914,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["infor",{"_index":860,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":489,"title":{},"body":{"classes/AuthSignup.html":{}}}],["init",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{}}}],["initiated",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["initiating",{"_index":692,"title":{},"body":{"modules/PrismaModule.html":{}}}],["inject",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"modules/OtpModule.html":{}}}],["inject(cache_manager",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":141,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":142,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{}}}],["input",{"_index":525,"title":{},"body":{"injectables/CoreService.html":{}}}],["inserting",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["install",{"_index":901,"title":{},"body":{"index.html":{}}}],["instance",{"_index":878,"title":{},"body":{"index.html":{}}}],["interactions",{"_index":549,"title":{},"body":{"injectables/CoreService.html":{}}}],["interface",{"_index":256,"title":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"interfaces/QueryReturn.html":{}},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["interfaces",{"_index":258,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"interfaces/QueryReturn.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["internalservererrorexception('failed",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["isboolean",{"_index":215,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isemail",{"_index":216,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isenum",{"_index":643,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["isenum(itemtype",{"_index":648,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["isglobal",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":217,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/MuttateDto.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"classes/UserDTO.html":{}}}],["isnotempty()@isphonenumber('in",{"_index":213,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/Phnum.html":{}}}],["isnotempty()@isstring",{"_index":635,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{}}}],["isnotempty()@isstring()@isenum(itemtype",{"_index":638,"title":{},"body":{"classes/MuttateDto.html":{}}}],["isoptional",{"_index":218,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isoptional()@isphonenumber('in",{"_index":587,"title":{},"body":{"classes/EditUser.html":{}}}],["isphonenumber",{"_index":219,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isphonenumber('in",{"_index":222,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["isstring",{"_index":220,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/MuttateDto.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"classes/UserDTO.html":{}}}],["isstring()@isenum(itemtype",{"_index":712,"title":{},"body":{"classes/QueryDto.html":{}}}],["isstring()@isnotempty",{"_index":211,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{}}}],["isstring()@isnotempty()@isenum(itemtype",{"_index":640,"title":{},"body":{"classes/MuttateDto.html":{}}}],["isstring()@isoptional",{"_index":585,"title":{},"body":{"classes/EditUser.html":{}}}],["item",{"_index":539,"title":{},"body":{"injectables/CoreService.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"index.html":{}}}],["item.fraudnums.length",{"_index":552,"title":{},"body":{"injectables/CoreService.html":{}}}],["item.id",{"_index":548,"title":{},"body":{"injectables/CoreService.html":{}}}],["item.interactions",{"_index":550,"title":{},"body":{"injectables/CoreService.html":{}}}],["item.spamreport.length",{"_index":553,"title":{},"body":{"injectables/CoreService.html":{}}}],["items",{"_index":529,"title":{},"body":{"injectables/CoreService.html":{}}}],["itemtype",{"_index":293,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"miscellaneous/enumerations.html":{}}}],["itemtype.mobilenum",{"_index":308,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["itemtype.smsheader",{"_index":651,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["jobs",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["join",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["js",{"_index":919,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":629,"title":{},"body":{"injectables/LogRequest.html":{}}}],["jwt",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"dependencies.html":{},"index.html":{}}}],["jwtfromrequest",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign(userid",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":238,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kawach",{"_index":814,"title":{},"body":{"index.html":{}}}],["km",{"_index":566,"title":{},"body":{"injectables/CoreService.html":{}}}],["lay",{"_index":884,"title":{},"body":{"index.html":{}}}],["lets",{"_index":633,"title":{},"body":{"injectables/LogRequest.html":{}}}],["license",{"_index":957,"title":{},"body":{"properties.html":{}}}],["link",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["literal",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["locally",{"_index":821,"title":{},"body":{"index.html":{}}}],["log",{"_index":613,"title":{},"body":{"injectables/LogRequest.html":{}}}],["logging",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["logic",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{}}}],["login",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@body",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginlogic",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginlogic(body",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["logrequest",{"_index":90,"title":{"injectables/LogRequest.html":{}},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{},"coverage.html":{}}}],["logs",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["look",{"_index":925,"title":{},"body":{"index.html":{}}}],["love",{"_index":842,"title":{},"body":{"index.html":{}}}],["made",{"_index":584,"title":{},"body":{"injectables/CoreService.html":{}}}],["mailservice",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["main.py",{"_index":928,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":839,"title":{},"body":{"index.html":{}}}],["maintaining",{"_index":854,"title":{},"body":{"index.html":{}}}],["make",{"_index":324,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"index.html":{}}}],["manage",{"_index":846,"title":{},"body":{"index.html":{}}}],["management",{"_index":832,"title":{},"body":{"index.html":{}}}],["manager",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["manages",{"_index":870,"title":{},"body":{"index.html":{}}}],["many",{"_index":857,"title":{},"body":{"index.html":{}}}],["matches",{"_index":521,"title":{},"body":{"injectables/CoreService.html":{}}}],["matches.length",{"_index":576,"title":{},"body":{"injectables/CoreService.html":{}}}],["matching",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.floor(math.random",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{}}}],["message",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["messaging",{"_index":833,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":616,"title":{},"body":{"injectables/LogRequest.html":{}}}],["methods",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{}}}],["middlewareconsumer",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["migrate",{"_index":849,"title":{},"body":{"index.html":{}}}],["mikasa",{"_index":942,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":804,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["ml",{"_index":890,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":264,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/OtpService.html":{}}}],["mobilenum",{"_index":646,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mode",{"_index":907,"title":{},"body":{"index.html":{}}}],["model",{"_index":921,"title":{},"body":{"index.html":{}}}],["models",{"_index":891,"title":{},"body":{"index.html":{}}}],["module",{"_index":41,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":43,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["moniter",{"_index":851,"title":{},"body":{"index.html":{}}}],["msg",{"_index":281,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["msg/sms",{"_index":282,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["muation",{"_index":500,"title":{},"body":{"modules/CoreModule.html":{}}}],["mutate",{"_index":313,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"index.html":{}}}],["mutate(req",{"_index":492,"title":{},"body":{"controllers/CoreController.html":{}}}],["mutatemobile",{"_index":507,"title":{},"body":{"injectables/CoreService.html":{}}}],["mutatemobile(phnum",{"_index":515,"title":{},"body":{"injectables/CoreService.html":{}}}],["mutatesms",{"_index":508,"title":{},"body":{"injectables/CoreService.html":{}}}],["mutatesms(sms",{"_index":517,"title":{},"body":{"injectables/CoreService.html":{}}}],["muttatedto",{"_index":294,"title":{"classes/MuttateDto.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"coverage.html":{}}}],["mydata",{"_index":715,"title":{},"body":{"controllers/UserController.html":{}}}],["mydata(@req",{"_index":339,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["mydata(req",{"_index":718,"title":{},"body":{"controllers/UserController.html":{}}}],["mysql",{"_index":877,"title":{},"body":{"index.html":{}}}],["name",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["national",{"_index":862,"title":{},"body":{"index.html":{}}}],["need",{"_index":342,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["nestjs",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs(express",{"_index":825,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":659,"title":{},"body":{"modules/OtpModule.html":{}}}],["nestjs/common/enums",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/common/exceptions",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["nestjs/config",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}}}],["nestjs/core",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["nestjs/passport",{"_index":290,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":624,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nestmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/OtpService.html":{},"coverage.html":{}}}],["next",{"_index":621,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nextfunction",{"_index":622,"title":{},"body":{"injectables/LogRequest.html":{}}}],["nlp",{"_index":561,"title":{},"body":{"injectables/CoreService.html":{},"index.html":{}}}],["nodemailer",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":272,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":32,"title":{},"body":{"controllers/AppController.html":{}}}],["np",{"_index":569,"title":{},"body":{"injectables/CoreService.html":{}}}],["npx",{"_index":848,"title":{},"body":{"index.html":{}}}],["num",{"_index":526,"title":{},"body":{"injectables/CoreService.html":{}}}],["number",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["numbers",{"_index":665,"title":{},"body":{"injectables/OtpService.html":{}}}],["obj.type",{"_index":650,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["object",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["onmoduleinit",{"_index":702,"title":{},"body":{"injectables/PrismaService.html":{}}}],["optional",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["options",{"_index":531,"title":{},"body":{"injectables/CoreService.html":{}}}],["options.length",{"_index":536,"title":{},"body":{"injectables/CoreService.html":{}}}],["options[randomindex",{"_index":537,"title":{},"body":{"injectables/CoreService.html":{}}}],["organised",{"_index":929,"title":{},"body":{"index.html":{}}}],["originalurl",{"_index":627,"title":{},"body":{"injectables/LogRequest.html":{}}}],["orm",{"_index":740,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["otp",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"index.html":{}}}],["otp.service",{"_index":660,"title":{},"body":{"modules/OtpModule.html":{}}}],["otp/otp.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["otp/otp.service",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["otpmodule",{"_index":50,"title":{"modules/OtpModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OtpModule.html":{},"modules.html":{},"overview.html":{}}}],["otpsender",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["otpservice",{"_index":100,"title":{"injectables/OtpService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["over",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["overview",{"_index":952,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["package",{"_index":768,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["param",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["pas",{"_index":738,"title":{},"body":{"injectables/UserService.html":{}}}],["pass",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["passport",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportjs",{"_index":831,"title":{},"body":{"index.html":{}}}],["passportstrategy",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["passwords",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":337,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["payload.sub",{"_index":608,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payloads",{"_index":941,"title":{},"body":{"index.html":{}}}],["pending",{"_index":882,"title":{},"body":{"index.html":{}}}],["phnum",{"_index":164,"title":{"classes/Phnum.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"coverage.html":{},"index.html":{}}}],["phonenum",{"_index":232,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["pipelines",{"_index":885,"title":{},"body":{"index.html":{}}}],["port",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["post",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["post('/requestotp",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signin",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/signup",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/verifyotp",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('edit",{"_index":346,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["post('mutate",{"_index":312,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["post('query",{"_index":305,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["postgre",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/UserService.html":{}}}],["postgres",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["posts",{"_index":330,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["predb",{"_index":528,"title":{},"body":{"injectables/CoreService.html":{}}}],["predict",{"_index":269,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{}}}],["prediction",{"_index":562,"title":{},"body":{"injectables/CoreService.html":{}}}],["prefetched",{"_index":861,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["prisma.service",{"_index":696,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":530,"title":{},"body":{"injectables/CoreService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["prisma/prisma.service",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":699,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":51,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrismaModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":54,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"injectables/UserService.html":{}}}],["production",{"_index":909,"title":{},"body":{"index.html":{}}}],["project",{"_index":917,"title":{},"body":{"index.html":{}}}],["promise",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/OtpService.html":{}}}],["promise.resolve",{"_index":321,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["properties",{"_index":210,"title":{"properties.html":{}},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/MuttateDto.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"classes/UserDTO.html":{},"properties.html":{}}}],["property",{"_index":301,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["provided",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["pw",{"_index":341,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["pwmatches",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["python",{"_index":828,"title":{},"body":{"index.html":{}}}],["qmvxege8cv0xsmddlkgezlo4u3b9rwwj",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["quering",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["query",{"_index":276,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"index.html":{}}}],["querycontext",{"_index":306,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["querycontext(req",{"_index":494,"title":{},"body":{"controllers/CoreController.html":{}}}],["querydto",{"_index":295,"title":{"classes/QueryDto.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"coverage.html":{}}}],["queryreturn",{"_index":296,"title":{"interfaces/QueryReturn.html":{}},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"coverage.html":{}}}],["railway",{"_index":822,"title":{},"body":{"index.html":{}}}],["random",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomindex",{"_index":535,"title":{},"body":{"injectables/CoreService.html":{}}}],["reading",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["readonly",{"_index":673,"title":{},"body":{"injectables/OtpService.html":{}}}],["reddis",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["reddistore",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["redis",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["reflect",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":558,"title":{},"body":{"injectables/CoreService.html":{}}}],["related",{"_index":284,"title":{},"body":{"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/UserService.html":{}}}],["relations",{"_index":844,"title":{},"body":{"index.html":{}}}],["relationships",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["replace",{"_index":299,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["repo",{"_index":899,"title":{},"body":{"index.html":{}}}],["report",{"_index":275,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["report.casetype",{"_index":540,"title":{},"body":{"injectables/CoreService.html":{}}}],["report.context",{"_index":541,"title":{},"body":{"injectables/CoreService.html":{}}}],["reportedfraudnums",{"_index":583,"title":{},"body":{"injectables/CoreService.html":{}}}],["reportedspamnums",{"_index":581,"title":{},"body":{"injectables/CoreService.html":{}}}],["reports",{"_index":551,"title":{},"body":{"injectables/CoreService.html":{}}}],["reporttype",{"_index":297,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"miscellaneous/enumerations.html":{}}}],["reporttype.fraud",{"_index":532,"title":{},"body":{"injectables/CoreService.html":{}}}],["reporttype.normal",{"_index":533,"title":{},"body":{"injectables/CoreService.html":{}}}],["reporttype.spam",{"_index":534,"title":{},"body":{"injectables/CoreService.html":{}}}],["req",{"_index":287,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{}}}],["req.user",{"_index":317,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["req.user.verfied",{"_index":314,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["request",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["requestotp",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LogRequest.html":{}}}],["required",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"index.html":{}}}],["res",{"_index":619,"title":{},"body":{"injectables/LogRequest.html":{}}}],["res.on('close",{"_index":630,"title":{},"body":{"injectables/LogRequest.html":{}}}],["reset",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resp",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["respective",{"_index":940,"title":{},"body":{"index.html":{}}}],["response",{"_index":620,"title":{},"body":{"injectables/LogRequest.html":{}}}],["responses",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["respsent",{"_index":631,"title":{},"body":{"injectables/LogRequest.html":{}}}],["rest",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["results",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retrieve",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["retrieved",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["return",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/OtpService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"injectables/OtpService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["rn",{"_index":873,"title":{},"body":{"index.html":{}}}],["root",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["rootpath",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["rout",{"_index":277,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["route",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest-1.html":{},"injectables/LogRequest.html":{},"controllers/UserController.html":{},"index.html":{}}}],["routes",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["routs",{"_index":327,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["run",{"_index":820,"title":{},"body":{"index.html":{}}}],["run/build",{"_index":896,"title":{},"body":{"index.html":{}}}],["running",{"_index":880,"title":{},"body":{"index.html":{}}}],["runnlp",{"_index":509,"title":{},"body":{"injectables/CoreService.html":{}}}],["runnlp(context",{"_index":520,"title":{},"body":{"injectables/CoreService.html":{}}}],["rxjs",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["sample",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved",{"_index":329,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["search",{"_index":560,"title":{},"body":{"injectables/CoreService.html":{}}}],["secondary",{"_index":817,"title":{},"body":{"index.html":{}}}],["secret",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretkey",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["secretorkey",{"_index":605,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeded",{"_index":922,"title":{},"body":{"index.html":{}}}],["select",{"_index":545,"title":{},"body":{"injectables/CoreService.html":{}}}],["send",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OtpService.html":{}}}],["sendotp",{"_index":667,"title":{},"body":{"injectables/OtpService.html":{}}}],["sendotp(otp",{"_index":670,"title":{},"body":{"injectables/OtpService.html":{}}}],["sense",{"_index":876,"title":{},"body":{"index.html":{}}}],["servce",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["serve",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["server",{"_index":837,"title":{},"body":{"index.html":{}}}],["serveroot",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":657,"title":{},"body":{"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"injectables/UserService.html":{}}}],["services",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["serving",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["setup",{"_index":729,"title":{},"body":{"modules/UserModule.html":{},"index.html":{}}}],["several",{"_index":855,"title":{},"body":{"index.html":{}}}],["sha",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["signing",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["signup(@body",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(body",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["signuplogic",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["signuplogic(body",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["sms",{"_index":263,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"index.html":{}}}],["smscontext",{"_index":652,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"index.html":{}}}],["smsheader",{"_index":647,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"miscellaneous/enumerations.html":{}}}],["smssent",{"_index":680,"title":{},"body":{"injectables/OtpService.html":{}}}],["smssent.sid",{"_index":686,"title":{},"body":{"injectables/OtpService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"modules/AuthModule.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"modules/OtpModule.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["south",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["spam",{"_index":271,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"injectables/CoreService.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["spamreport",{"_index":546,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/.../index.ts",{"_index":806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.ts",{"_index":809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:60",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app/app.controller.ts:11",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app/app.service.ts",{"_index":143,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:46",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:58",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:69",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:116",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:148",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:43",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:70",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:93",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwtstrategy.ts",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwtstrategy.ts:11",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwtstrategy.ts:19",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/core/core.controller.ts",{"_index":259,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{},"coverage.html":{}}}],["src/core/core.controller.ts:32",{"_index":495,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.controller.ts:50",{"_index":493,"title":{},"body":{"controllers/CoreController.html":{}}}],["src/core/core.module.ts",{"_index":498,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/core.service.ts",{"_index":504,"title":{},"body":{"injectables/CoreService.html":{},"coverage.html":{},"index.html":{}}}],["src/core/core.service.ts:17",{"_index":523,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:187",{"_index":516,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:23",{"_index":512,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:239",{"_index":518,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:9",{"_index":510,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/core.service.ts:93",{"_index":514,"title":{},"body":{"injectables/CoreService.html":{}}}],["src/core/dto/index.ts",{"_index":634,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/core/dto/index.ts:17",{"_index":709,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/core/dto/index.ts:21",{"_index":713,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/core/dto/index.ts:26",{"_index":711,"title":{},"body":{"classes/QueryDto.html":{}}}],["src/core/dto/index.ts:42",{"_index":637,"title":{},"body":{"classes/MuttateDto.html":{}}}],["src/core/dto/index.ts:47",{"_index":641,"title":{},"body":{"classes/MuttateDto.html":{}}}],["src/core/dto/index.ts:52",{"_index":639,"title":{},"body":{"classes/MuttateDto.html":{}}}],["src/core/dto/index.ts:56",{"_index":636,"title":{},"body":{"classes/MuttateDto.html":{}}}],["src/mail/mail.service",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":761,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/requestlog.ts",{"_index":611,"title":{},"body":{"injectables/LogRequest.html":{},"coverage.html":{}}}],["src/middleware/requestlog.ts:10",{"_index":623,"title":{},"body":{"injectables/LogRequest.html":{}}}],["src/otp/otp.module",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/otp/otp.module.ts",{"_index":656,"title":{},"body":{"modules/OtpModule.html":{}}}],["src/otp/otp.service",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/otp/otp.service.ts",{"_index":661,"title":{},"body":{"injectables/OtpService.html":{},"coverage.html":{}}}],["src/otp/otp.service.ts:11",{"_index":669,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/otp/otp.service.ts:18",{"_index":671,"title":{},"body":{"injectables/OtpService.html":{}}}],["src/prisma/prisma.module.ts",{"_index":691,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":697,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":703,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:20",{"_index":704,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/typings",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["src/typings/auth.ts",{"_index":209,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"coverage.html":{}}}],["src/typings/auth.ts:13",{"_index":214,"title":{},"body":{"classes/AuthLogin.html":{}}}],["src/typings/auth.ts:16",{"_index":212,"title":{},"body":{"classes/AuthLogin.html":{}}}],["src/typings/auth.ts:18",{"_index":487,"title":{},"body":{"classes/AuthSignup.html":{}}}],["src/typings/auth.ts:24",{"_index":488,"title":{},"body":{"classes/AuthSignup.html":{}}}],["src/typings/auth.ts:30",{"_index":588,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:33",{"_index":586,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:36",{"_index":589,"title":{},"body":{"classes/EditUser.html":{}}}],["src/typings/auth.ts:42",{"_index":687,"title":{},"body":{"classes/Phnum.html":{}}}],["src/typings/auth.ts:46",{"_index":721,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:47",{"_index":720,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:48",{"_index":723,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:49",{"_index":722,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:50",{"_index":724,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/typings/auth.ts:51",{"_index":725,"title":{},"body":{"classes/UserDTO.html":{}}}],["src/user/user.controller.ts",{"_index":326,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:26",{"_index":719,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:37",{"_index":717,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":728,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":731,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:11",{"_index":734,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":737,"title":{},"body":{"injectables/UserService.html":{}}}],["stack",{"_index":816,"title":{},"body":{"index.html":{}}}],["start",{"_index":906,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":905,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":908,"title":{},"body":{"index.html":{}}}],["started",{"_index":811,"title":{"index.html":{}},"body":{}}],["statements",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["stats",{"_index":893,"title":{},"body":{"index.html":{}}}],["storage",{"_index":818,"title":{},"body":{"index.html":{}}}],["store",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["storing",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["strategy",{"_index":591,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"classes/MuttateDto.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"classes/UserDTO.html":{}}}],["struggle",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["studio",{"_index":853,"title":{},"body":{"index.html":{}}}],["stuff",{"_index":927,"title":{},"body":{"index.html":{}}}],["sub",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["subjected",{"_index":579,"title":{},"body":{"injectables/CoreService.html":{}}}],["subset",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["super",{"_index":225,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"classes/UserDTO.html":{}}}],["support",{"_index":881,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supprt",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["suspected",{"_index":580,"title":{},"body":{"injectables/CoreService.html":{}}}],["svg",{"_index":950,"title":{},"body":{"modules.html":{}}}],["table",{"_index":767,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":856,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"modules/CoreModule.html":{}}}],["taken",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["takes",{"_index":524,"title":{},"body":{"injectables/CoreService.html":{}}}],["tasks",{"_index":883,"title":{},"body":{"index.html":{}}}],["test",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["test(@body('email",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["test(email",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["testing",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"index.html":{}}}],["things",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{},"index.html":{}}}],["this.$connect",{"_index":708,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.forgotpasswordlogic(body.phnum",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.loginlogic(body",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signuplogic(body",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifylogic(otp",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cachemanager.del(phonenum",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cachemanager.get(phonenum",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cachemanager.set(phonenum",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config.get('jwt_secret",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('twilio_phone_num",{"_index":685,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.coreservice.handlemobile(body.item",{"_index":309,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["this.coreservice.handlesms(body.item",{"_index":310,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["this.coreservice.mutatemobile(body.item",{"_index":315,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["this.coreservice.mutatesms",{"_index":318,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["this.jwt.signasync(payload",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtsign(user.id",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailservice.senduserconfirmation(otp",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.otpsender.sendotp(otp",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.items.create",{"_index":557,"title":{},"body":{"injectables/CoreService.html":{}}}],["this.postgre.items.findunique",{"_index":542,"title":{},"body":{"injectables/CoreService.html":{}}}],["this.postgre.items.update",{"_index":547,"title":{},"body":{"injectables/CoreService.html":{}}}],["this.postgre.predb.findunique",{"_index":538,"title":{},"body":{"injectables/CoreService.html":{}}}],["this.postgre.usertable.create",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.usertable.findunique",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.postgre.usertable.update",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{},"injectables/UserService.html":{}}}],["this.prisma.usertable.findunique",{"_index":607,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.runnlp(context",{"_index":578,"title":{},"body":{"injectables/CoreService.html":{}}}],["this.twilioclient",{"_index":678,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.twilioclient.messages.create",{"_index":681,"title":{},"body":{"injectables/OtpService.html":{}}}],["this.userservice.edituser(user",{"_index":348,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["thisss",{"_index":947,"title":{},"body":{"index.html":{}}}],["throw",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["token",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["transformer",{"_index":642,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"dependencies.html":{}}}],["trigger",{"_index":889,"title":{},"body":{"index.html":{}}}],["true",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AuthRequest.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{}}}],["try",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogRequest.html":{},"index.html":{}}}],["ts",{"_index":826,"title":{},"body":{"index.html":{}}}],["ttl",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["twilio",{"_index":672,"title":{},"body":{"injectables/OtpService.html":{},"dependencies.html":{}}}],["twilio(accountsid",{"_index":679,"title":{},"body":{"injectables/OtpService.html":{}}}],["twilioclient",{"_index":666,"title":{},"body":{"injectables/OtpService.html":{}}}],["twillio",{"_index":663,"title":{},"body":{"injectables/OtpService.html":{},"index.html":{}}}],["two",{"_index":261,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["type",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"injectables/JwtStrategy.html":{},"injectables/LogRequest.html":{},"classes/MuttateDto.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"injectables/PrismaService.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["types",{"_index":887,"title":{},"body":{"index.html":{}}}],["types/cache",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["types/nodemailer",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":830,"title":{},"body":{"index.html":{}}}],["u",{"_index":913,"title":{},"body":{"index.html":{}}}],["underneath",{"_index":664,"title":{},"body":{"injectables/OtpService.html":{}}}],["unknown",{"_index":519,"title":{},"body":{"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":958,"title":{},"body":{"properties.html":{}}}],["up",{"_index":926,"title":{},"body":{"index.html":{}}}],["update",{"_index":274,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"modules/CoreModule.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"index.html":{}}}],["updatedat",{"_index":231,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["uptime",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["url",{"_index":706,"title":{},"body":{"injectables/PrismaService.html":{}}}],["use",{"_index":617,"title":{},"body":{"injectables/LogRequest.html":{},"modules/OtpModule.html":{},"index.html":{}}}],["use(req",{"_index":618,"title":{},"body":{"injectables/LogRequest.html":{}}}],["used",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["usedas",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":288,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard('jwt",{"_index":302,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"controllers/CoreController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":286,"title":{},"body":{"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"injectables/AuthService.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.controller",{"_index":730,"title":{},"body":{"modules/UserModule.html":{}}}],["user.id",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CoreService.html":{}}}],["user.password",{"_index":610,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["user.service",{"_index":333,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/edit",{"_index":938,"title":{},"body":{"index.html":{}}}],["user/me",{"_index":937,"title":{},"body":{"index.html":{}}}],["user/user.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":336,"title":{"controllers/UserController.html":{}},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"modules/UserModule.html":{}}}],["userdto",{"_index":228,"title":{"classes/UserDTO.html":{}},"body":{"classes/AuthLogin.html":{},"interfaces/AuthRequest.html":{},"interfaces/AuthRequest-1.html":{},"classes/AuthSignup.html":{},"controllers/CoreController.html":{},"injectables/CoreService.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"controllers/UserController.html":{},"classes/UserDTO.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userid",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfo",{"_index":328,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["usermodule",{"_index":52,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":226,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{},"index.html":{}}}],["users",{"_index":869,"title":{},"body":{"index.html":{}}}],["userservice",{"_index":332,"title":{"injectables/UserService.html":{}},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdate",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["userverifed",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["uses",{"_index":662,"title":{},"body":{"injectables/OtpService.html":{}}}],["using",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["valid",{"_index":343,"title":{},"body":{"interfaces/AuthRequest-1.html":{},"controllers/UserController.html":{}}}],["validate",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["validate(payload",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateif",{"_index":644,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["validateif((obj",{"_index":649,"title":{},"body":{"classes/MuttateDto.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{}}}],["validateif(obj",{"_index":710,"title":{},"body":{"classes/QueryDto.html":{}}}],["validator",{"_index":221,"title":{},"body":{"classes/AuthLogin.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"classes/MuttateDto.html":{},"classes/Phnum.html":{},"classes/QueryDto.html":{},"interfaces/QueryReturn.html":{},"classes/UserDTO.html":{},"dependencies.html":{}}}],["value",{"_index":807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["values",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["verfied",{"_index":233,"title":{},"body":{"classes/AuthLogin.html":{},"injectables/AuthService.html":{},"classes/AuthSignup.html":{},"classes/EditUser.html":{},"injectables/OtpService.html":{},"classes/Phnum.html":{},"classes/UserDTO.html":{}}}],["verfies",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["verfifying",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["verified",{"_index":322,"title":{},"body":{"interfaces/AuthRequest.html":{},"controllers/CoreController.html":{}}}],["verify",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["verifylogic",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifylogic(otp",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyotp",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyotp(otp",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["version",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"properties.html":{}}}],["via",{"_index":847,"title":{},"body":{"index.html":{}}}],["view",{"_index":912,"title":{},"body":{"index.html":{}}}],["void",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogRequest.html":{}}}],["welcome_msg",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["well",{"_index":838,"title":{},"body":{"index.html":{}}}],["work",{"_index":872,"title":{},"body":{"index.html":{}}}],["works",{"_index":840,"title":{},"body":{"index.html":{}}}],["write",{"_index":918,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":834,"title":{},"body":{"index.html":{}}}],["yes",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["z0",{"_index":570,"title":{},"body":{"injectables/CoreService.html":{}}}],["za",{"_index":567,"title":{},"body":{"injectables/CoreService.html":{}}}],["zoom",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/OtpModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["zzzscry",{"_index":946,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /\n            \n\n\n            \n                Description\n            \n            \n                Default Route\n/ - uptime testing\n/docs - documentation Link\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                basicRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        basicRoute\n                        \n                    \n                \n            \n            \n                \nbasicRoute()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\n\n/**\n * Default Route\n * / - uptime testing\n * /docs - documentation Link\n */\n@Controller('/')\nexport class AppController {\n  @Get()\n  basicRoute(): object {\n    return {\n      welcome_msg:\n        'GOOD Now struggle and figure out rest reading my /docs page ',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nAppModule -->\n\nOtpModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Root Of the APP with request logging middleware implemented\n @alias ServeStaticModule used for serving this docs over (docs)[/docs] Documentation is generated in documentation file\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            OtpModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:60\n                \n            \n\n\n            \n                \n                    Configuring the middleware for routes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n} from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { LogRequest } from './middleware';\nimport { PrismaService } from './prisma/prisma.service';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { OtpModule } from './otp/otp.module';\nimport * as ReddiStore from 'cache-manager-redis-store';\nimport { OtpService } from './otp/otp.service';\nimport { AppController } from './app/app.controller';\nimport { AppService } from './app/app.service';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { CoreModule } from './core/core.module';\n\n/**\n * Root Of the APP with request logging middleware implemented\n *  @alias ServeStaticModule used for serving this docs over (docs)[/docs] Documentation is generated in `documentation` file\n * @alias ConfigModule usedas Configservice to retrieve env elements\n * @alias CacheModule used to init reddis cache store with ttl 1200 `20min`\n */\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n      serveRoot: '/docs', // this will serve your files on /docs route\n    }),\n\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    CacheModule.register({\n      store: ReddiStore,\n      password: 'qmvXege8CV0xSmddlkgEZlo4u3b9rWwJ',\n      host: 'redis-18258.c305.ap-south-1-1.ec2.cloud.redislabs.com',\n      port: 18258,\n      isGlobal: true,\n      ttl: 1200,\n    }),\n    AuthModule,\n    PrismaModule,\n    UserModule,\n    OtpModule,\n    CoreModule,\n  ],\n  providers: [PrismaService, AppService],\n  controllers: [AppController],\n})\nexport class AppModule implements NestModule {\n  /**\n   * Configuring the middleware for routes\n   * @alias LogRequest middleware logs type of request and route\n   */\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LogRequest).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n            \n                Description\n            \n            \n                Controller to take all requests and send responses\nPrefix --> /auth\nRoutes available [NO JWT PASS REQUIRED]\n\n/Signup\n/Signin\n/requestOtp\n/verifyOTP\n/hehe\n\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ForgotPwd\n                            \n                            \n                                Login\n                            \n                            \n                                Signup\n                            \n                            \n                                test\n                            \n                            \n                                verifyOTP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ForgotPwd\n                        \n                    \n                \n            \n            \n                \nForgotPwd(body: Phnum)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/requestOtp')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                Phnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Login\n                        \n                    \n                \n            \n            \n                \nLogin(body: AuthLogin)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/Signin')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Signup\n                        \n                    \n                \n            \n            \n                \nSignup(body: AuthSignup)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/Signup')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthSignup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        JWT\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        test\n                        \n                    \n                \n            \n            \n                \ntest(email?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/hehe')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:69\n                \n            \n\n\n            \n                \n                    Sample Testing Route\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyOTP\n                        \n                    \n                \n            \n            \n                \nverifyOTP(OTP: number, email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/verifyOTP')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Get, Body } from '@nestjs/common';\nimport { AuthLogin, AuthSignup, Phnum } from 'src/Typings';\nimport { AuthService } from './auth.service';\n\n/**\n * Controller to take all requests and send responses\n * Prefix --> /auth\n *\n * Routes available [NO JWT PASS REQUIRED]\n * - /Signup\n * - /Signin\n * - /requestOtp\n * - /verifyOTP\n * - /hehe\n */\n@Controller('auth')\nexport class AuthController {\n  constructor(private AuthService: AuthService) {}\n\n  /**\n   *\n   * @param body @type {AuthSignup} send body of this format\n   * @returns JWT\n   */\n  @Post('/Signup')\n  Signup(@Body() body: AuthSignup): Promise {\n    return this.AuthService.signupLogic(body);\n  }\n\n  /**\n   *\n   * @param body @type {AuthLogin}\n   * @returns\n   */\n  @Post('/Signin')\n  Login(@Body() body: AuthLogin): Promise {\n    return this.AuthService.loginLogic(body);\n  }\n\n  /**\n   *\n   * @param body @type {Phnum}\n   * @returns\n   */\n  @Post('/requestOtp')\n  ForgotPwd(@Body() body: Phnum): Promise {\n    console.log(body.phnum);\n    return this.AuthService.forgotpasswordLogic(body.phnum);\n  }\n\n  /**\n   *\n   * @param OTP @type {number}\n   * @param phnum @type {Phnum}\n   * @returns\n   */\n  @Post('/verifyOTP')\n  verifyOTP(\n    @Body('OTP') OTP: number,\n    @Body('phnum') email: string,\n  ): Promise {\n    return this.AuthService.verifyLogic(OTP, email);\n  }\n\n  /**\n   * Sample Testing Route\n   */\n  @Get('/hehe')\n  test(@Body('email') email?: string): string {\n    return 'hehe';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLogin.html":{"url":"classes/AuthLogin.html","title":"class - AuthLogin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLogin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nOtpModule\n\nOtpModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module is where we define all dependecies and relationships for nestjs application graph\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OtpModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './JwtStrategy';\nimport { OtpModule } from 'src/otp/otp.module';\n\n/**\n * Module is where we define all dependecies and relationships for nestjs application graph\n */\n@Module({\n  /**\n   * things that have to be injected into controllers\n   */\n  providers: [AuthService, JwtStrategy],\n\n  // the controllers in this module\n  controllers: [AuthController],\n\n  // Modules required for this module\n  imports: [JwtModule.register({}), OtpModule],\n\n  // the subset of providers that are provided by this module and should be available in other modules which import this module.\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthRequest.html":{"url":"interfaces/AuthRequest.html","title":"interface - AuthRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                core has two Routes for both SMS and Mobile\n\ncore/query  - call it before every call or sms in coming to predict it as fraud or spam or normal\ncore/muttate - call it for update or report a sms or number\n\nquery rout must be called before incomming call or incoming msg which returns is a msg/sms is spam or ham or fraud and also related context\n\n            \n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDTO\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDTO\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Body, Controller, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UserDTO } from 'src/Typings';\nimport { CoreService } from './core.service';\nimport { ItemType, MuttateDto, QueryDto, QueryReturn, ReportType } from './dto';\n\n/**\n * core has two Routes for both SMS and Mobile\n * - core/query  - call it before every call or sms in coming to predict it as fraud or spam or normal\n * - core/muttate - call it for update or report a sms or number\n *\n * query rout must be called before incomming call or incoming msg which returns is a msg/sms is spam or ham or fraud and also related context\n *\n */\n\ninterface AuthRequest extends Request {\n  user: UserDTO; // Replace `any` with the actual type of the `user` property\n}\n\n@UseGuards(AuthGuard('jwt'))\n@Controller('core')\nexport class CoreController {\n  constructor(private coreService: CoreService) {}\n\n  /**\n   *\n   * @param req @type {AuthRequest}\n   * @param body @type {QueryDto}\n   * @returns @type {QueryReturn}\n   */\n  @Post('query')\n  QueryContext(\n    @Req() req: AuthRequest,\n    @Body() body: QueryDto,\n  ): Promise {\n    if (body.Type == ItemType.MobileNum) {\n      return this.coreService.handleMobile(body.Item);\n    } else {\n      return this.coreService.handleSms(body.Item, body.SmsContext);\n    }\n  }\n\n  /**\n   *\n   * @param req @type {AuthRequest}\n   * @param body @type {MuttateDto}\n   * @returns\n   */\n  @Post('mutate')\n  mutate(\n    @Req() req: AuthRequest,\n    @Body() body: MuttateDto,\n  ): Promise {\n    if (req.user.verfied === true) {\n      if (body.Type == ItemType.MobileNum) {\n        return this.coreService.mutateMobile(body.Item, body.Report, req.user);\n      } else {\n        return this.coreService.mutateSMS(\n          body.Item,\n          body.Context,\n          body.Report,\n          req.user,\n        );\n      }\n    } else {\n      return Promise.resolve({\n        Context: 'User Not verified Cant Make Changes',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthRequest-1.html":{"url":"interfaces/AuthRequest-1.html","title":"interface - AuthRequest-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                Controller for User routs\n\nget UserInfo and Saved Posts\nChange Password or body\n\n\n            \n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserDTO\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDTO\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UserService } from './user.service';\nimport { Request } from 'express';\nimport { AuthSignup, EditUser, UserDTO } from 'src/Typings';\n\n/**\n * Controller for User routs\n * - get UserInfo and Saved Posts\n * - Change Password or body\n */\ninterface AuthRequest extends Request {\n  user: UserDTO; // Replace `any` with the actual type of the `user` property\n}\n\n@UseGuards(AuthGuard('jwt'))\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  /**\n   *\n   * @param req @type {UserDTO} Incoming req GET route\n   * @returns {object} user payload\n   */\n  @Get('me')\n  MyData(@Req() req: Request): object {\n    return req.user;\n  }\n\n  /**\n   * pass update user object and feilds are optional there can be pw or not but need to pass valid JWT in header\n   * @param User @type {EditUser} edit user payload\n   * @param req @type {EditUser} Incoming req with JWT in header\n   * @returns\n   */\n  @Post('edit')\n  EditMyData(@Body() User: EditUser, @Req() req: AuthRequest) {\n    return this.userService.editUser(User, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Controller For Auth related Jobs\n\nPrismaService for inserting and QUering UserData from Postgres\nConfig Servce for extracting Values [Jwt Secret] from .env\nJwtService for Signing Jwt with UserID\nCACHA_MANAGER for redis supprt to store OTP with ttl\n\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotpasswordLogic\n                            \n                            \n                                    Async\n                                JwtSign\n                            \n                            \n                                    Async\n                                loginLogic\n                            \n                            \n                                    Async\n                                signupLogic\n                            \n                            \n                                    Async\n                                verifyLogic\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postgre: PrismaService, config: ConfigService, jwt: JwtService, cachemanager: Cache, otpsender: OtpService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postgre\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cachemanager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        otpsender\n                                                  \n                                                        \n                                                                        OtpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        forgotpasswordLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotpasswordLogic(phonenum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:93\n                \n            \n\n\n            \n                \n                    Forgot PassWord Logic Generating Random OTP Followed By\nStoring it in Redis and Emailing the User His Otp\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phonenum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        JwtSign\n                        \n                    \n                \n            \n            \n                \n                    \n                    JwtSign(userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:148\n                \n            \n\n\n            \n                \n                    Signing JWT with SecretKey with 15m expiry\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loginLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    loginLogic(body: AuthLogin)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n                    Finding User , Verfifying Password with Argon2 and signing Jwt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthLogin\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signupLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    signupLogic(body: AuthSignup)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:43\n                \n            \n\n\n            \n                \n                    Using argon2 a better version of SHA to Hash the passwords\nand Creating User Object all edge cases are handled by Prisma and Nestjs\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                AuthSignup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyLogic\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyLogic(OTP: number, phonenum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n                    Verify Otp Logic Where OTP is retrieved From Redis and verfied\nreturns JWT and also verfies user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phonenum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ForbiddenException,\n  Inject,\n  CACHE_MANAGER,\n} from '@nestjs/common';\nimport { AuthLogin, AuthSignup } from 'src/Typings';\nimport * as argon from 'argon2';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Cache } from 'cache-manager';\nimport {\n  HttpException,\n  InternalServerErrorException,\n} from '@nestjs/common/exceptions';\nimport { HttpStatus } from '@nestjs/common/enums';\nimport { OtpService } from 'src/otp/otp.service';\n// import { MailService } from 'src/mail/mail.service';\n\n/**\n * ### Controller For Auth related Jobs\n * @constructor construstor is initiated with 4 Services\n *  - PrismaService for inserting and QUering UserData from `Postgres`\n *  - Config Servce for extracting Values [Jwt Secret] from `.env`\n *  - JwtService for Signing `Jwt` with UserID\n *  - CACHA_MANAGER for redis supprt to store OTP with `ttl`\n */\n@Injectable()\nexport class AuthService {\n  constructor(\n    private postgre: PrismaService,\n    private config: ConfigService,\n    private jwt: JwtService,\n    @Inject(CACHE_MANAGER) private cachemanager: Cache, //\n    private otpsender: OtpService,\n  ) {}\n\n  /**\n   * Using argon2 a better version of SHA to Hash the passwords\n   * and Creating User Object all edge cases are handled by Prisma and Nestjs\n   */\n  async signupLogic(body: AuthSignup): Promise {\n    const hash = await argon.hash(body.password);\n    try {\n      const user = await this.postgre.usertable.create({\n        data: {\n          phnum: body.phnum,\n          password: hash,\n          username: body.username,\n        },\n      });\n      return {\n        Jwt: await this.JwtSign(user.id),\n      };\n    } catch (error) {\n      console.log('here', error.code);\n\n      if (error.code == 'P2002') {\n        throw new ForbiddenException('Credentials Already Taken');\n      } else {\n        throw new HttpException(error, HttpStatus.FORBIDDEN);\n      }\n    }\n  }\n\n  /**\n   * Finding User , Verfifying Password with Argon2 and signing Jwt\n   */\n  async loginLogic(body: AuthLogin): Promise {\n    const { phnum, password } = body;\n\n    const user = await this.postgre.usertable.findUnique({\n      where: {\n        phnum: phnum,\n      },\n    });\n    if (!user) {\n      throw new ForbiddenException('Credentials incorrect');\n    }\n    const pwMatches = await argon.verify(user.password, password);\n    if (!pwMatches) throw new ForbiddenException('Credentials incorrect');\n\n    return {\n      Jwt: await this.JwtSign(user.id),\n    };\n  }\n\n  /**\n   * Forgot PassWord Logic Generating Random OTP Followed By\n   * Storing it in Redis and Emailing the User His Otp\n   */\n  async forgotpasswordLogic(phonenum: string): Promise {\n    console.log(phonenum);\n    const user = await this.postgre.usertable.findUnique({\n      where: {\n        phnum: phonenum,\n      },\n    });\n    if (!user) {\n      throw new ForbiddenException('Credentials incorrect');\n    }\n    const OTP = Math.floor(Math.random() * 1000000);\n    await this.cachemanager.set(phonenum, OTP);\n    // await this.mailService.sendUserConfirmation(OTP, email);\n    const resp = await this.otpsender.sendotp(OTP, '+91' + phonenum);\n    if (!resp)\n      throw new InternalServerErrorException('Failed to execute request');\n    return { message: 'done' };\n  }\n\n  /**\n   * Verify Otp Logic Where OTP is retrieved From Redis and verfied\n   * returns JWT and also verfies user\n   */\n  async verifyLogic(OTP: number, phonenum: string): Promise {\n    const cacheotp = await this.cachemanager.get(phonenum);\n    if (!cacheotp) {\n      throw new ForbiddenException('Session Expired or Not created');\n    }\n    if (OTP == cacheotp) {\n      const user = await this.postgre.usertable.findUnique({\n        where: {\n          phnum: phonenum,\n        },\n      });\n      const userUpdate = await this.postgre.usertable.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          ...user,\n          userverifed: true,\n        },\n      });\n      await this.cachemanager.del(phonenum);\n      return {\n        Jwt: await this.JwtSign(user.id),\n      };\n    } else {\n      throw new ForbiddenException('Wrong Otp Enterred');\n    }\n  }\n\n  /**\n   * Signing JWT with SecretKey with `15m` expiry\n   */\n  async JwtSign(userId: number): Promise {\n    const payload = {\n      sub: userId,\n    };\n    const secret = this.config.get('JWT_SECRET');\n    const token = await this.jwt.signAsync(payload, {\n      expiresIn: '1d',\n      secret: secret,\n    });\n    return token;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthSignup.html":{"url":"classes/AuthSignup.html","title":"class - AuthSignup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthSignup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthLogin\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                username\n                            \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/Typings/auth.ts:18\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AuthLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthLogin:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         AuthLogin\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthLogin:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoreController.html":{"url":"controllers/CoreController.html","title":"controller - CoreController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoreController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                core\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mutate\n                            \n                            \n                                QueryContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mutate\n                        \n                    \n                \n            \n            \n                \nmutate(req: AuthRequest, body: MuttateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('mutate')\n                \n            \n\n            \n                \n                    Defined in src/core/core.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                MuttateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QueryContext\n                        \n                    \n                \n            \n            \n                \nQueryContext(req: AuthRequest, body: QueryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('query')\n                \n            \n\n            \n                \n                    Defined in src/core/core.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                QueryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UserDTO } from 'src/Typings';\nimport { CoreService } from './core.service';\nimport { ItemType, MuttateDto, QueryDto, QueryReturn, ReportType } from './dto';\n\n/**\n * core has two Routes for both SMS and Mobile\n * - core/query  - call it before every call or sms in coming to predict it as fraud or spam or normal\n * - core/muttate - call it for update or report a sms or number\n *\n * query rout must be called before incomming call or incoming msg which returns is a msg/sms is spam or ham or fraud and also related context\n *\n */\n\ninterface AuthRequest extends Request {\n  user: UserDTO; // Replace `any` with the actual type of the `user` property\n}\n\n@UseGuards(AuthGuard('jwt'))\n@Controller('core')\nexport class CoreController {\n  constructor(private coreService: CoreService) {}\n\n  /**\n   *\n   * @param req @type {AuthRequest}\n   * @param body @type {QueryDto}\n   * @returns @type {QueryReturn}\n   */\n  @Post('query')\n  QueryContext(\n    @Req() req: AuthRequest,\n    @Body() body: QueryDto,\n  ): Promise {\n    if (body.Type == ItemType.MobileNum) {\n      return this.coreService.handleMobile(body.Item);\n    } else {\n      return this.coreService.handleSms(body.Item, body.SmsContext);\n    }\n  }\n\n  /**\n   *\n   * @param req @type {AuthRequest}\n   * @param body @type {MuttateDto}\n   * @returns\n   */\n  @Post('mutate')\n  mutate(\n    @Req() req: AuthRequest,\n    @Body() body: MuttateDto,\n  ): Promise {\n    if (req.user.verfied === true) {\n      if (body.Type == ItemType.MobileNum) {\n        return this.coreService.mutateMobile(body.Item, body.Report, req.user);\n      } else {\n        return this.coreService.mutateSMS(\n          body.Item,\n          body.Context,\n          body.Report,\n          req.user,\n        );\n      }\n    } else {\n      return Promise.resolve({\n        Context: 'User Not verified Cant Make Changes',\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nCoreService\n\nCoreService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            MODULE to take care of query and muation of backed aspect\n\ncore/query  - call it before every call or sms in coming to predict it as fraud or spam or normal\ncore/muttate - call it for update or report a sms or number\n\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoreService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CoreController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CoreController } from './core.controller';\nimport { CoreService } from './core.service';\n\n/**\n * MODULE to take care of query and muation of backed aspect\n * - core/query  - call it before every call or sms in coming to predict it as fraud or spam or normal\n * - core/muttate - call it for update or report a sms or number\n */\n@Module({\n  controllers: [CoreController],\n  providers: [CoreService],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CoreService.html":{"url":"injectables/CoreService.html","title":"injectable - CoreService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CoreService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/core.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleMobile\n                            \n                            \n                                    Async\n                                handleSms\n                            \n                            \n                                    Async\n                                mutateMobile\n                            \n                            \n                                    Async\n                                mutateSMS\n                            \n                            \n                                    Async\n                                RunNlp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postgre: PrismaService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/core/core.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postgre\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleMobile\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMobile(phnum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/core.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phnum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleSms\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleSms(header: string, Context: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/core.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mutateMobile\n                        \n                    \n                \n            \n            \n                \n                    \n                    mutateMobile(phnum: string, type: ReportType, user: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/core/core.service.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    phnum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ReportType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        mutateSMS\n                        \n                    \n                \n            \n            \n                \n                    \n                    mutateSMS(Sms: string, Context: string, type: ReportType, user: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/core/core.service.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Sms\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                ReportType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        RunNlp\n                        \n                    \n                \n            \n            \n                \n                    \n                    RunNlp(Context: string, matches: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/core/core.service.ts:17\n                \n            \n\n\n            \n                \n                    Takes input as mobile num checks it in predb and\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    matches\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { items } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UserDTO } from 'src/Typings';\nimport { ItemType, QueryReturn, ReportType } from './dto';\n\n@Injectable()\nexport class CoreService {\n  constructor(private postgre: PrismaService, private config: ConfigService) {}\n  /**\n   * Takes input as mobile num checks it in predb and\n   *\n   * @param phnum @type {string}\n   * @returns {QueryReturn}\n   */\n  async RunNlp(Context: string, matches: Array): Promise {\n    const options = [ReportType.Fraud, ReportType.Normal, ReportType.Spam];\n    const randomIndex = Math.floor(Math.random() * options.length);\n    return options[randomIndex];\n  }\n\n  async handleMobile(phnum: string): Promise {\n    const report = await this.postgre.predb.findUnique({\n      where: {\n        item: phnum,\n      },\n    });\n    if (report) {\n      const type =\n        report.casetype == 'Spam' ? ReportType.Spam : ReportType.Fraud;\n      return {\n        Type: type,\n        Context: report.context,\n      };\n    } else {\n      const item = await this.postgre.items.findUnique({\n        where: {\n          item: phnum,\n        },\n        include: {\n          fraudnums: {\n            select: {\n              id: true,\n            },\n          },\n          spamreport: {\n            select: {\n              id: true,\n            },\n          },\n        },\n      });\n      if (item) {\n        await this.postgre.items.update({\n          where: {\n            id: item.id,\n          },\n          data: {\n            interactions: item.interactions + 1,\n          },\n        });\n        const reports = item.fraudnums.length + item.spamreport.length;\n        if (reports / item.interactions > 0.05 && item.interactions > 10) {\n          const type =\n            item.fraudnums.length > item.spamreport.length\n              ? ReportType.Fraud\n              : ReportType.Spam;\n          return {\n            Type: type,\n          };\n        } else {\n          return {\n            Type: ReportType.Normal,\n          };\n        }\n      } else {\n        const createitem = await this.postgre.items.create({\n          data: {\n            interactions: 1,\n            type: 'Mobile',\n            item: phnum,\n          },\n        });\n        return {\n          Type: ReportType.Normal,\n          Context: 'New Item Created',\n        };\n      }\n    }\n  }\n\n  async handleSms(header: string, Context: string): Promise {\n    const report = await this.postgre.predb.findUnique({\n      where: {\n        item: header,\n      },\n    });\n    /**\n     * regex differentiation\n     * search regex\n     * context NLP prediction\n     * regex addition to db\n     *\n     */\n    const regex =\n      /(\\b[13][a-km-zA-HJ-NP-Z0-9]{25,34}\\b)|(\\b[6-9]\\d{9}\\b)|(\\b(?:[a-zA-Z0-9._%+-]+@(?:apl|abfspay|fbl|idfcbank|okaxis|okicici|axisbank|icici|yesbank|ibl|ybl))\\b)|(\\b(?:https?:\\/\\/|www\\.)\\S+\\b)/g;\n\n    const matches = Context.match(regex);\n    if (report) {\n      const type =\n        report.casetype == 'Spam' ? ReportType.Spam : ReportType.Fraud;\n      return {\n        Type: type,\n        Context: report.context,\n      };\n    } else {\n      if (matches.length > 0) {\n        for (const item of matches) {\n          const report = await this.postgre.predb.findUnique({\n            where: {\n              item: item,\n            },\n          });\n          if (report) {\n            const type =\n              report.casetype == 'Spam' ? ReportType.Spam : ReportType.Fraud;\n            return {\n              Type: type,\n              Context: report.context,\n            };\n          }\n        }\n      }\n      const item = await this.postgre.items.findUnique({\n        where: {\n          item: header,\n        },\n        include: {\n          fraudnums: {\n            select: {\n              id: true,\n            },\n          },\n          spamreport: {\n            select: {\n              id: true,\n            },\n          },\n        },\n      });\n      if (item) {\n        await this.postgre.items.update({\n          where: {\n            id: item.id,\n          },\n          data: {\n            interactions: item.interactions + 1,\n          },\n        });\n        const reports = item.fraudnums.length + item.spamreport.length;\n        if (reports / item.interactions > 0.05 && item.interactions > 10) {\n          const type =\n            item.fraudnums.length > item.spamreport.length\n              ? ReportType.Fraud\n              : ReportType.Spam;\n          return {\n            Type: type,\n          };\n        }\n      }\n      const createitem = await this.postgre.items.create({\n        data: {\n          interactions: 1,\n          type: 'Sms',\n          item: header,\n        },\n      });\n      const type = await this.RunNlp(Context, matches);\n      return {\n        Type: type,\n        Context: `This Subjected SMS is suspected to be ${type}`,\n      };\n    }\n  }\n\n  async mutateMobile(\n    phnum: string,\n    type: ReportType,\n    user: UserDTO,\n  ): Promise {\n    let item: items;\n    item = await this.postgre.items.findUnique({\n      where: {\n        item: phnum,\n      },\n    });\n    if (!item) {\n      item = await this.postgre.items.create({\n        data: {\n          interactions: 1,\n          type: 'Mobile',\n          item: phnum,\n        },\n      });\n    }\n    if (type == ReportType.Spam) {\n      await this.postgre.usertable.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          reportedSpamNums: {\n            connect: {\n              id: item.id,\n            },\n          },\n        },\n      });\n    } else {\n      await this.postgre.usertable.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          reportedFraudNums: {\n            connect: {\n              id: item.id,\n            },\n          },\n        },\n      });\n    }\n    return {\n      Context: 'Changes Made',\n    };\n  }\n\n  async mutateSMS(\n    Sms: string,\n    Context: string,\n    type: ReportType,\n    user: UserDTO,\n  ) {\n    let item: items;\n    item = await this.postgre.items.findUnique({\n      where: {\n        item: Sms,\n      },\n    });\n    if (!item) {\n      item = await this.postgre.items.create({\n        data: {\n          interactions: 1,\n          type: 'Mobile',\n          item: Sms,\n        },\n      });\n    }\n    if (type == ReportType.Spam) {\n      await this.postgre.usertable.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          reportedSpamNums: {\n            connect: {\n              id: item.id,\n            },\n          },\n        },\n      });\n    } else {\n      await this.postgre.usertable.update({\n        where: {\n          id: user.id,\n        },\n        data: {\n          reportedFraudNums: {\n            connect: {\n              id: item.id,\n            },\n          },\n        },\n      });\n    }\n    return {\n      Context: 'Changes Made',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                phnum\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/JwtStrategy.ts\n        \n\n\n            \n                Description\n            \n            \n                JWT strategy exported to other classes\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/JwtStrategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/JwtStrategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n/**\n * JWT strategy exported to other classes\n */\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(config: ConfigService, private prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: config.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: { sub: number }) {\n    const user = await this.prisma.usertable.findUnique({\n      where: {\n        id: payload.sub,\n      },\n    });\n    delete user.password;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogRequest.html":{"url":"injectables/LogRequest.html","title":"injectable - LogRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/requestLog.ts\n        \n\n\n            \n                Description\n            \n            \n                This is a Middleware is designed to log the incomming requests for debugging and analysis\nMETHOD + ROUTE\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/requestLog.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\n\n/**\n * This is a Middleware is designed to log the incomming requests for debugging and analysis\n * METHOD + ROUTE\n */\n@Injectable()\nexport class LogRequest implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    const { baseUrl, headers, method, originalUrl } = req;\n    console.log(`\"${originalUrl}\" - METHOD ${method}`);\n\n    // with headers ${JSON.stringify(\n    //   headers,\n    // )}\n\n    res.on('close', () => {\n      // const respSent = res;\n      // console.log(res, 'lets try');\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MuttateDto.html":{"url":"classes/MuttateDto.html","title":"class - MuttateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MuttateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/index.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Context\n                            \n                            \n                                Item\n                            \n                            \n                                Report\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/index.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/index.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Report\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReportType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(ItemType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/index.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ItemType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEnum(ItemType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/index.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsString,\n  validate,\n  ValidateIf,\n} from 'class-validator';\n\nexport enum ItemType {\n  MobileNum = 'MobileNum',\n  SmsHeader = 'SmsHeader',\n}\nexport class QueryDto {\n  @IsString()\n  @IsNotEmpty()\n  Item: string;\n\n  @IsString()\n  @IsEnum(ItemType)\n  Type: ItemType;\n\n  @ValidateIf((obj: QueryDto) => obj.Type === ItemType.SmsHeader)\n  @IsNotEmpty()\n  @IsString()\n  SmsContext: string;\n}\n\nexport enum ReportType {\n  Normal = 'Normal',\n  Spam = 'Spam',\n  Fraud = 'Fraud',\n}\nexport interface QueryReturn {\n  Type: ReportType;\n  Context?: string;\n}\n\nexport class MuttateDto {\n  @IsString()\n  @IsNotEmpty()\n  Item: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEnum(ItemType)\n  Type: ItemType;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(ItemType)\n  Report: ReportType;\n\n  @IsNotEmpty()\n  @IsString()\n  Context: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtpModule.html":{"url":"modules/OtpModule.html","title":"module - OtpModule","body":"\n                   \n\n\n\n\n    Modules\n    OtpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\n\nOtpService \n\nOtpService \n\n\n\nOtpModule\n\nOtpModule\n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/otp/otp.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            OTP service for other modules to inject and use\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OtpService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtpService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Global } from '@nestjs/common/decorators';\nimport { OtpService } from './otp.service';\n\n/**\n *OTP service for other modules to inject and use\n */\n@Global()\n@Module({\n  providers: [OtpService],\n  exports: [OtpService],\n})\nexport class OtpModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtpService.html":{"url":"injectables/OtpService.html","title":"injectable - OtpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/otp/otp.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Uses twillio underneath to Send OTP to verfied mobile Numbers\nreturns Boolean\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                twilioClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendotp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/otp/otp.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendotp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendotp(OTP: number, phnum: string)\n                \n            \n\n\n            \n                \n                    Defined in src/otp/otp.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OTP\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    phnum\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        twilioClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Twilio\n\n                    \n                \n                    \n                        \n                                Defined in src/otp/otp.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { Twilio } from 'twilio';\n\n/**\n * Uses twillio underneath to Send OTP to verfied mobile Numbers\n * returns Boolean\n */\n@Injectable()\nexport class OtpService {\n  private twilioClient: Twilio;\n\n  constructor(private readonly configService: ConfigService) {\n    const accountSid = configService.get('TWILIO_ACCOUNT_SID');\n    const authToken = configService.get('TWILIO_AUTH_TOKEN');\n    this.twilioClient = new Twilio(accountSid, authToken);\n  }\n  async sendotp(OTP: number, phnum: string): Promise {\n    const smsSent = await this.twilioClient.messages.create({\n      to: phnum,\n      body: `Heyy here is your crimeapp otp ${OTP}`,\n      from: this.configService.get('TWILIO_PHONE_NUM'),\n    });\n    return !!smsSent.sid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Phnum.html":{"url":"classes/Phnum.html","title":"class - Phnum","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Phnum\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                phnum\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        phnum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsPhoneNumber('IN')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for initiating Prisma-Postgres Connection\nand exporting Prisma Service globally for it to get injected in all modules\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n/**\n * Module for initiating Prisma-Postgres Connection\n * and exporting Prisma Service globally for it to get injected in all modules\n */\n@Global()\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Implementing PrismaClient\nconfigure prisma client and coonect  it on module init\n\n            \n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/prisma/prisma.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaClient } from '@prisma/client';\n\n/**\n * Implementing PrismaClient\n * configure prisma client and coonect  it on module init\n */\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  constructor(config: ConfigService) {\n    super({\n      datasources: {\n        db: {\n          url: config.get('DATABASE_URL'),\n        },\n      },\n    });\n  }\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QueryDto.html":{"url":"classes/QueryDto.html","title":"class - QueryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QueryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/index.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Item\n                            \n                            \n                                SmsContext\n                            \n                            \n                                Type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/index.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SmsContext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(obj => )@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/index.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ItemType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(ItemType)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/core/dto/index.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsString,\n  validate,\n  ValidateIf,\n} from 'class-validator';\n\nexport enum ItemType {\n  MobileNum = 'MobileNum',\n  SmsHeader = 'SmsHeader',\n}\nexport class QueryDto {\n  @IsString()\n  @IsNotEmpty()\n  Item: string;\n\n  @IsString()\n  @IsEnum(ItemType)\n  Type: ItemType;\n\n  @ValidateIf((obj: QueryDto) => obj.Type === ItemType.SmsHeader)\n  @IsNotEmpty()\n  @IsString()\n  SmsContext: string;\n}\n\nexport enum ReportType {\n  Normal = 'Normal',\n  Spam = 'Spam',\n  Fraud = 'Fraud',\n}\nexport interface QueryReturn {\n  Type: ReportType;\n  Context?: string;\n}\n\nexport class MuttateDto {\n  @IsString()\n  @IsNotEmpty()\n  Item: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEnum(ItemType)\n  Type: ItemType;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(ItemType)\n  Report: ReportType;\n\n  @IsNotEmpty()\n  @IsString()\n  Context: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryReturn.html":{"url":"interfaces/QueryReturn.html","title":"interface - QueryReturn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryReturn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/dto/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            Context\n                                        \n                                \n                                \n                                        \n                                            Type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Context:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Type:         ReportType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReportType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsString,\n  validate,\n  ValidateIf,\n} from 'class-validator';\n\nexport enum ItemType {\n  MobileNum = 'MobileNum',\n  SmsHeader = 'SmsHeader',\n}\nexport class QueryDto {\n  @IsString()\n  @IsNotEmpty()\n  Item: string;\n\n  @IsString()\n  @IsEnum(ItemType)\n  Type: ItemType;\n\n  @ValidateIf((obj: QueryDto) => obj.Type === ItemType.SmsHeader)\n  @IsNotEmpty()\n  @IsString()\n  SmsContext: string;\n}\n\nexport enum ReportType {\n  Normal = 'Normal',\n  Spam = 'Spam',\n  Fraud = 'Fraud',\n}\nexport interface QueryReturn {\n  Type: ReportType;\n  Context?: string;\n}\n\nexport class MuttateDto {\n  @IsString()\n  @IsNotEmpty()\n  Item: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEnum(ItemType)\n  Type: ItemType;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(ItemType)\n  Report: ReportType;\n\n  @IsNotEmpty()\n  @IsString()\n  Context: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                EditMyData\n                            \n                            \n                                MyData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        EditMyData\n                        \n                    \n                \n            \n            \n                \nEditMyData(User: EditUser, req: AuthRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('edit')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:37\n                \n            \n\n\n            \n                \n                    pass update user object and feilds are optional there can be pw or not but need to pass valid JWT in header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                                AuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MyData\n                        \n                    \n                \n            \n            \n                \nMyData(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        user payload\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UserService } from './user.service';\nimport { Request } from 'express';\nimport { AuthSignup, EditUser, UserDTO } from 'src/Typings';\n\n/**\n * Controller for User routs\n * - get UserInfo and Saved Posts\n * - Change Password or body\n */\ninterface AuthRequest extends Request {\n  user: UserDTO; // Replace `any` with the actual type of the `user` property\n}\n\n@UseGuards(AuthGuard('jwt'))\n@Controller('user')\nexport class UserController {\n  constructor(private userService: UserService) {}\n  /**\n   *\n   * @param req @type {UserDTO} Incoming req GET route\n   * @returns {object} user payload\n   */\n  @Get('me')\n  MyData(@Req() req: Request): object {\n    return req.user;\n  }\n\n  /**\n   * pass update user object and feilds are optional there can be pw or not but need to pass valid JWT in header\n   * @param User @type {EditUser} edit user payload\n   * @param req @type {EditUser} Incoming req with JWT in header\n   * @returns\n   */\n  @Post('edit')\n  EditMyData(@Body() User: EditUser, @Req() req: AuthRequest) {\n    return this.userService.editUser(User, req.user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDTO.html":{"url":"classes/UserDTO.html","title":"class - UserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Typings/auth.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CreatedAt\n                            \n                            \n                                id\n                            \n                            \n                                phonenum\n                            \n                            \n                                UpdatedAt\n                            \n                            \n                                username\n                            \n                            \n                                verfied\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        CreatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phonenum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verfied\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/Typings/auth.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsBoolean,\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n} from 'class-validator';\n\nexport class AuthLogin {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n}\nexport class AuthSignup extends AuthLogin {\n  constructor() {\n    super();\n  }\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\nexport class EditUser {\n  @IsOptional()\n  @IsPhoneNumber('IN')\n  phnum: string;\n  @IsString()\n  @IsOptional()\n  password: string;\n  @IsString()\n  @IsOptional()\n  username: string;\n}\n\nexport class Phnum {\n  @IsNotEmpty()\n  @IsPhoneNumber('IN')\n  phnum: string;\n}\n\nexport class UserDTO {\n  id: number;\n  CreatedAt: string;\n  UpdatedAt: string;\n  phonenum: string;\n  username: string;\n  verfied: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module to Setup User Logic to get their userData or change Password\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\n\n/**\n * Module to Setup User Logic to get their userData or change Password\n */\n@Module({\n  providers: [UserService],\n  controllers: [UserController],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Userservice service to handle user related CRUD\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                editUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postgre: PrismaService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postgre\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(User: EditUser, dbuser: UserDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                EditUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dbuser\n                                    \n                                                UserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { EditUser, UserDTO } from 'src/Typings';\nimport * as argon from 'argon2';\n\n/**\n * Userservice service to handle user related CRUD\n */\n@Injectable()\nexport class UserService {\n  constructor(private postgre: PrismaService, private config: ConfigService) {}\n\n  /**\n   *\n   * @param User @type  {EditUser}\n   * @param dbuser @type {UserDTO}\n   * @returns\n   */\n  async editUser(User: EditUser, dbuser: UserDTO) {\n    /**\n     * hash password from request payload if pas exisit\n     * update using postgres prisma ORM\n     */\n    if (User.password) {\n      const hash = await argon.hash(User.password);\n      delete User.password;\n      const user = await this.postgre.usertable.update({\n        where: {\n          id: dbuser.id,\n        },\n        data: {\n          ...User,\n          password: hash,\n        },\n      });\n      delete user.password;\n      return user;\n    } else {\n      const user = await this.postgre.usertable.update({\n        where: {\n          id: dbuser.id,\n        },\n        data: {\n          ...User,\n        },\n      });\n      delete user.password;\n      return user;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            AuthLogin\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            AuthSignup\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            EditUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            Phnum\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Typings/auth.ts\n            \n            class\n            UserDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/JwtStrategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/core/core.controller.ts\n            \n            controller\n            CoreController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/core.controller.ts\n            \n            interface\n            AuthRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/core/core.service.ts\n            \n            injectable\n            CoreService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/core/dto/index.ts\n            \n            class\n            MuttateDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/core/dto/index.ts\n            \n            class\n            QueryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/dto/index.ts\n            \n            interface\n            QueryReturn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/requestLog.ts\n            \n            injectable\n            LogRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/otp/otp.service.ts\n            \n            injectable\n            OtpService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            interface\n            AuthRequest\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                33 %\n                (1/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @prisma/client : ^4.3.1\n        \n            @types/cache-manager-redis-store : ^2.0.1\n        \n            @types/nodemailer : ^6.4.6\n        \n            @types/passport-jwt : ^3.0.6\n        \n            @types/passport-local : ^1.0.34\n        \n            argon2 : ^0.29.1\n        \n            cache-manager : ^4.1.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            handlebars : ^4.7.7\n        \n            nodemailer : ^6.7.8\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            prisma : ^4.3.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            twilio : ^4.8.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ItemType   (src/.../index.ts)\n                        \n                        \n                            ReportType   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/dto/index.ts\n    \n        \n            \n                \n                    \n                        \n                        ItemType\n                    \n                \n                        \n                            \n                                 MobileNum\n                            \n                        \n                        \n                            \n                                Value : MobileNum\n                            \n                        \n                        \n                            \n                                 SmsHeader\n                            \n                        \n                        \n                            \n                                Value : SmsHeader\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ReportType\n                    \n                \n                        \n                            \n                                 Normal\n                            \n                        \n                        \n                            \n                                Value : Normal\n                            \n                        \n                        \n                            \n                                 Spam\n                            \n                        \n                        \n                            \n                                Value : Spam\n                            \n                        \n                        \n                            \n                                 Fraud\n                            \n                        \n                        \n                            \n                                Value : Fraud\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nApp where I developed Backend for Kawach Hackathon.\nStack used\n\nPrisma - for Postgres ORM\nreddis - Cache secondary storage\nDocker - to host and run postgres [locally only] railway for hosting cloud postgres\nNestJS(express-TS) - backend framework\npython - api testing\nTypescript\nPassportJs - Auth and jwt management\nTwillio - SMS messaging\nYarn - as Package manager\n\nHow did it Go\n\nI used Compose Docs for generating the documentation and i am serving it over /docs route of server\nPrisma well i used to maintain all my db works and i guess i am in love with it 🥰 , Prisma ORM is flexible for me to setup relations easily and manage creating via npx prisma migrate dev and moniter my database from npx prisma studio\ni am maintaining several tables and several many to many relations from dbs. Got few tables with infor prefetched from national cyber forensics cordination centre and other tables which has demand data about our current users prisma ORM manages them for me\nPostgres was awesome to work with rn as i was currently using Prisma it doesnt make sense for me as it is Mysql or Postgres\nDocker i am using to run my postgres instance on port 5434 on locally and on railway for cloud\nRunning Redis instance on docker for OTP support\n\nPending tasks\n\nLay pipelines for 6 types of fraud detection\ntrigger ml models\nquery tables and calculate stats of an entity\n\n\n\nGuide To RUN/BUILD:\n\nclose this git repo using git clone \ninstall required dependecies using yarn\nCreate and update .env files according to .env.example file\ntry yarn start:dev to start server in dev mode\nor try yarn start:prod to start server in production mode\nFOR DOCUMENTATION click here --> docs\nfor SERVER API endpoint click here --> SERVER\nTo view database u can use prisma studio\n\nIncomplete things [GUIDE TO IMPLEMENT NLP]\n\nNLP trigger must be implemted\nclose this project and run it\ngot to src/core/core.service.ts write JS code to run NLP model\ni have seeded database with dummy gen data can look up stuff in it\nmain.py has data organised already to test core endpoints\n\nHow to use API\n\nAVAILABLE APIS\n\n{\n    'auth': [\n        '/auth/Signup',\n        '/auth/Signin',\n        '/auth/requestOtp',\n        '/auth/verifyOTP',\n        '/auth/hehe',  # get\n    ],\n    'user': [\n        '/user/me',  # get\n        '/user/edit'\n    ],\n    'core': [\n        '/core/query'\n        '/core/mutate'\n    ]\n}\n\nRespective Payloads\n\n 'auth': {\n        'Signup': {\n            'username': 'mikasa',\n            'phnum': '9100572305',\n            'password': 'erenily'\n        },\n        'Signin': {\n            'phnum': '9100572305',\n            'password': 'erenily'\n        },\n        'verify': {\n            'OTP': 919465,\n            'email': '9100572305'\n        },\n\n    },\n    'user': {\n        'edit': {\n            'username': 'Mikasa',\n            'phnum': '9100572305',\n            'password': 'erenIly'\n        }\n    },\n    'core': {\n        'query': {\n            'Item': 'ZZZSCRY',\n            'Type': 'MobileNum',\n            'SmsContext': 'hehe thisss'\n        },\n        'mutate': {\n            'Item': 'ZZZSCRY',\n            'Type': 'MobileNum',\n            'Context': 'hehe thisss',\n            'type': 'Spam'\n        }\n    }\n\n\nDependencies and Architecture\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_OtpModule\n\n\n\ncluster_OtpModule_exports\n\n\n\ncluster_OtpModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nOtpModule\n\nOtpModule\n\nAuthModule -->\n\nOtpModule->AuthModule\n\n\n\nAppModule -->\n\nOtpModule->AppModule\n\n\n\n\n\nOtpService \n\nOtpService \n\nOtpService  -->\n\nOtpModule->OtpService \n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nCoreService\n\nCoreService\n\nCoreModule -->\n\nCoreService->CoreModule\n\n\n\n\n\nOtpService\n\nOtpService\n\nOtpModule -->\n\nOtpService->OtpModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
